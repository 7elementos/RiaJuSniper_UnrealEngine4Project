// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/SpriteStudio5PrivatePCH.h"
#include "SpriteStudio5.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeSpriteStudio5() {}
	void ASsHUD::StaticRegisterNativesASsHUD()
	{
		FNativeFunctionRegistrar::RegisterFunction(ASsHUD::StaticClass(),"DrawSsPlayer",(Native)&ASsHUD::execDrawSsPlayer);
	}
	IMPLEMENT_CLASS(ASsHUD, 1079499898);
	void ASsPlayerActor::StaticRegisterNativesASsPlayerActor()
	{
		FNativeFunctionRegistrar::RegisterFunction(ASsPlayerActor::StaticClass(),"GetSsPlayer",(Native)&ASsPlayerActor::execGetSsPlayer);
		FNativeFunctionRegistrar::RegisterFunction(ASsPlayerActor::StaticClass(),"OnEndPlay",(Native)&ASsPlayerActor::execOnEndPlay);
	}
	IMPLEMENT_CLASS(ASsPlayerActor, 107667113);
class UScriptStruct* FSsUserData::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsUserData();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsUserData_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsUserData, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsUserData"), sizeof(FSsUserData), Get_Z_Construct_UScriptStruct_FSsUserData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsUserData(FSsUserData::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsUserData
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsUserData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsUserData")),new UScriptStruct::TCppStructOps<FSsUserData>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsUserData;
class UScriptStruct* FSsUserDataValue::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsUserDataValue();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsUserDataValue_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsUserDataValue, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsUserDataValue"), sizeof(FSsUserDataValue), Get_Z_Construct_UScriptStruct_FSsUserDataValue_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsUserDataValue(FSsUserDataValue::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsUserDataValue
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsUserDataValue()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsUserDataValue")),new UScriptStruct::TCppStructOps<FSsUserDataValue>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsUserDataValue;
class UScriptStruct* FSsUserDataRect::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsUserDataRect();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsUserDataRect_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsUserDataRect, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsUserDataRect"), sizeof(FSsUserDataRect), Get_Z_Construct_UScriptStruct_FSsUserDataRect_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsUserDataRect(FSsUserDataRect::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsUserDataRect
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsUserDataRect()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsUserDataRect")),new UScriptStruct::TCppStructOps<FSsUserDataRect>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsUserDataRect;
static class UEnum* ESsPlayerComponentRenderMode_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_ESsPlayerComponentRenderMode();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticEnum(Z_Construct_UEnum_SpriteStudio5_ESsPlayerComponentRenderMode, Z_Construct_UPackage_SpriteStudio5(), TEXT("ESsPlayerComponentRenderMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESsPlayerComponentRenderMode(ESsPlayerComponentRenderMode_StaticEnum, TEXT("/Script/SpriteStudio5"));
	void USsPlayerComponent::StaticRegisterNativesUSsPlayerComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"AddTextureReplacement",(Native)&USsPlayerComponent::execAddTextureReplacement);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"AddTextureReplacementByIndex",(Native)&USsPlayerComponent::execAddTextureReplacementByIndex);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"GetFlipH",(Native)&USsPlayerComponent::execGetFlipH);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"GetFlipV",(Native)&USsPlayerComponent::execGetFlipV);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"GetLoopCount",(Native)&USsPlayerComponent::execGetLoopCount);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"GetNumAnimations",(Native)&USsPlayerComponent::execGetNumAnimations);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"GetNumAnimationsByIndex",(Native)&USsPlayerComponent::execGetNumAnimationsByIndex);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"GetNumAnimPacks",(Native)&USsPlayerComponent::execGetNumAnimPacks);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"GetPartAttachTransform",(Native)&USsPlayerComponent::execGetPartAttachTransform);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"GetPartColorLabel",(Native)&USsPlayerComponent::execGetPartColorLabel);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"GetPartColorLabelByIndex",(Native)&USsPlayerComponent::execGetPartColorLabelByIndex);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"GetPlayFrame",(Native)&USsPlayerComponent::execGetPlayFrame);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"GetPlayingAnimationIndex",(Native)&USsPlayerComponent::execGetPlayingAnimationIndex);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"GetPlayingAnimationName",(Native)&USsPlayerComponent::execGetPlayingAnimationName);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"GetPlayRate",(Native)&USsPlayerComponent::execGetPlayRate);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"GetRenderTarget",(Native)&USsPlayerComponent::execGetRenderTarget);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"IsPlaying",(Native)&USsPlayerComponent::execIsPlaying);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"IsRoundTrip",(Native)&USsPlayerComponent::execIsRoundTrip);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"Pause",(Native)&USsPlayerComponent::execPause);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"Play",(Native)&USsPlayerComponent::execPlay);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"PlayByIndex",(Native)&USsPlayerComponent::execPlayByIndex);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"RemoveTextureReplacement",(Native)&USsPlayerComponent::execRemoveTextureReplacement);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"RemoveTextureReplacementAll",(Native)&USsPlayerComponent::execRemoveTextureReplacementAll);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"RemoveTextureReplacementByIndex",(Native)&USsPlayerComponent::execRemoveTextureReplacementByIndex);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"Resume",(Native)&USsPlayerComponent::execResume);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"SetFlipH",(Native)&USsPlayerComponent::execSetFlipH);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"SetFlipV",(Native)&USsPlayerComponent::execSetFlipV);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"SetLoopCount",(Native)&USsPlayerComponent::execSetLoopCount);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"SetPlayFrame",(Native)&USsPlayerComponent::execSetPlayFrame);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"SetPlayRate",(Native)&USsPlayerComponent::execSetPlayRate);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"SetRoundTrip",(Native)&USsPlayerComponent::execSetRoundTrip);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerComponent::StaticClass(),"UpdatePlayer",(Native)&USsPlayerComponent::execUpdatePlayer);
	}
	IMPLEMENT_CLASS(USsPlayerComponent, 3862076120);
	void USsPlayerWidget::StaticRegisterNativesUSsPlayerWidget()
	{
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"AddTextureReplacement",(Native)&USsPlayerWidget::execAddTextureReplacement);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"AddTextureReplacementByIndex",(Native)&USsPlayerWidget::execAddTextureReplacementByIndex);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"GetFlipH",(Native)&USsPlayerWidget::execGetFlipH);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"GetFlipV",(Native)&USsPlayerWidget::execGetFlipV);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"GetLoopCount",(Native)&USsPlayerWidget::execGetLoopCount);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"GetNumAnimations",(Native)&USsPlayerWidget::execGetNumAnimations);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"GetNumAnimationsByIndex",(Native)&USsPlayerWidget::execGetNumAnimationsByIndex);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"GetNumAnimPacks",(Native)&USsPlayerWidget::execGetNumAnimPacks);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"GetPartColorLabel",(Native)&USsPlayerWidget::execGetPartColorLabel);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"GetPartColorLabelByIndex",(Native)&USsPlayerWidget::execGetPartColorLabelByIndex);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"GetPlayFrame",(Native)&USsPlayerWidget::execGetPlayFrame);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"GetPlayingAnimationIndex",(Native)&USsPlayerWidget::execGetPlayingAnimationIndex);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"GetPlayingAnimationName",(Native)&USsPlayerWidget::execGetPlayingAnimationName);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"GetPlayRate",(Native)&USsPlayerWidget::execGetPlayRate);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"IsPlaying",(Native)&USsPlayerWidget::execIsPlaying);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"IsRoundTrip",(Native)&USsPlayerWidget::execIsRoundTrip);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"Pause",(Native)&USsPlayerWidget::execPause);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"Play",(Native)&USsPlayerWidget::execPlay);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"PlayByIndex",(Native)&USsPlayerWidget::execPlayByIndex);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"RemoveTextureReplacement",(Native)&USsPlayerWidget::execRemoveTextureReplacement);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"RemoveTextureReplacementAll",(Native)&USsPlayerWidget::execRemoveTextureReplacementAll);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"RemoveTextureReplacementByIndex",(Native)&USsPlayerWidget::execRemoveTextureReplacementByIndex);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"Resume",(Native)&USsPlayerWidget::execResume);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"SetFlipH",(Native)&USsPlayerWidget::execSetFlipH);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"SetFlipV",(Native)&USsPlayerWidget::execSetFlipV);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"SetLoopCount",(Native)&USsPlayerWidget::execSetLoopCount);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"SetPlayFrame",(Native)&USsPlayerWidget::execSetPlayFrame);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"SetPlayRate",(Native)&USsPlayerWidget::execSetPlayRate);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"SetRoundTrip",(Native)&USsPlayerWidget::execSetRoundTrip);
		FNativeFunctionRegistrar::RegisterFunction(USsPlayerWidget::StaticClass(),"UpdatePlayer",(Native)&USsPlayerWidget::execUpdatePlayer);
	}
	IMPLEMENT_CLASS(USsPlayerWidget, 3552381854);
static class UEnum* SsRenderBlendType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsRenderBlendType();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticEnum(Z_Construct_UEnum_SpriteStudio5_SsRenderBlendType, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsRenderBlendType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_SsRenderBlendType(SsRenderBlendType_StaticEnum, TEXT("/Script/SpriteStudio5"));
static class UEnum* SsEffectNodeType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsEffectNodeType();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticEnum(Z_Construct_UEnum_SpriteStudio5_SsEffectNodeType, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsEffectNodeType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_SsEffectNodeType(SsEffectNodeType_StaticEnum, TEXT("/Script/SpriteStudio5"));
static class UEnum* SsKeyValueType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsKeyValueType();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticEnum(Z_Construct_UEnum_SpriteStudio5_SsKeyValueType, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsKeyValueType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_SsKeyValueType(SsKeyValueType_StaticEnum, TEXT("/Script/SpriteStudio5"));
static class UEnum* SsAttributeKind_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsAttributeKind();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticEnum(Z_Construct_UEnum_SpriteStudio5_SsAttributeKind, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsAttributeKind"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_SsAttributeKind(SsAttributeKind_StaticEnum, TEXT("/Script/SpriteStudio5"));
static class UEnum* SsTexFilterMode_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsTexFilterMode();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticEnum(Z_Construct_UEnum_SpriteStudio5_SsTexFilterMode, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsTexFilterMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_SsTexFilterMode(SsTexFilterMode_StaticEnum, TEXT("/Script/SpriteStudio5"));
static class UEnum* SsTexWrapMode_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsTexWrapMode();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticEnum(Z_Construct_UEnum_SpriteStudio5_SsTexWrapMode, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsTexWrapMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_SsTexWrapMode(SsTexWrapMode_StaticEnum, TEXT("/Script/SpriteStudio5"));
static class UEnum* SsInterpolationType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsInterpolationType();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticEnum(Z_Construct_UEnum_SpriteStudio5_SsInterpolationType, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsInterpolationType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_SsInterpolationType(SsInterpolationType_StaticEnum, TEXT("/Script/SpriteStudio5"));
static class UEnum* SsColorBlendTarget_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsColorBlendTarget();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticEnum(Z_Construct_UEnum_SpriteStudio5_SsColorBlendTarget, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsColorBlendTarget"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_SsColorBlendTarget(SsColorBlendTarget_StaticEnum, TEXT("/Script/SpriteStudio5"));
static class UEnum* SsBlendType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsBlendType();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticEnum(Z_Construct_UEnum_SpriteStudio5_SsBlendType, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsBlendType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_SsBlendType(SsBlendType_StaticEnum, TEXT("/Script/SpriteStudio5"));
static class UEnum* SsInheritType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsInheritType();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticEnum(Z_Construct_UEnum_SpriteStudio5_SsInheritType, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsInheritType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_SsInheritType(SsInheritType_StaticEnum, TEXT("/Script/SpriteStudio5"));
static class UEnum* SsBoundsType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsBoundsType();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticEnum(Z_Construct_UEnum_SpriteStudio5_SsBoundsType, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsBoundsType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_SsBoundsType(SsBoundsType_StaticEnum, TEXT("/Script/SpriteStudio5"));
static class UEnum* SsPartType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsPartType();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticEnum(Z_Construct_UEnum_SpriteStudio5_SsPartType, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsPartType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_SsPartType(SsPartType_StaticEnum, TEXT("/Script/SpriteStudio5"));
static class UEnum* SsPartsSortMode_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsPartsSortMode();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticEnum(Z_Construct_UEnum_SpriteStudio5_SsPartsSortMode, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsPartsSortMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_SsPartsSortMode(SsPartsSortMode_StaticEnum, TEXT("/Script/SpriteStudio5"));
class UScriptStruct* FSsCurve::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsCurve();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsCurve_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsCurve, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsCurve"), sizeof(FSsCurve), Get_Z_Construct_UScriptStruct_FSsCurve_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsCurve(FSsCurve::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsCurve
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsCurve()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsCurve")),new UScriptStruct::TCppStructOps<FSsCurve>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsCurve;
class UScriptStruct* FSsU8Color::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsU8Color();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsU8Color_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsU8Color, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsU8Color"), sizeof(FSsU8Color), Get_Z_Construct_UScriptStruct_FSsU8Color_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsU8Color(FSsU8Color::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsU8Color
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsU8Color()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsU8Color")),new UScriptStruct::TCppStructOps<FSsU8Color>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsU8Color;
static class UEnum* SsValueType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsValueType();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticEnum(Z_Construct_UEnum_SpriteStudio5_SsValueType, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsValueType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_SsValueType(SsValueType_StaticEnum, TEXT("/Script/SpriteStudio5"));
class UScriptStruct* FSsValue::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsValue();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsValue_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsValue, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsValue"), sizeof(FSsValue), Get_Z_Construct_UScriptStruct_FSsValue_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsValue(FSsValue::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsValue
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsValue()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsValue")),new UScriptStruct::TCppStructOps<FSsValue>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsValue;
class UScriptStruct* FSsAttribute::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsAttribute();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsAttribute_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsAttribute, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsAttribute"), sizeof(FSsAttribute), Get_Z_Construct_UScriptStruct_FSsAttribute_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsAttribute(FSsAttribute::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsAttribute
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsAttribute()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsAttribute")),new UScriptStruct::TCppStructOps<FSsAttribute>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsAttribute;
class UScriptStruct* FSsKeyframe::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsKeyframe();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsKeyframe_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsKeyframe, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsKeyframe"), sizeof(FSsKeyframe), Get_Z_Construct_UScriptStruct_FSsKeyframe_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsKeyframe(FSsKeyframe::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsKeyframe
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsKeyframe()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsKeyframe")),new UScriptStruct::TCppStructOps<FSsKeyframe>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsKeyframe;
class UScriptStruct* FSsAnimePack::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsAnimePack();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsAnimePack_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsAnimePack, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsAnimePack"), sizeof(FSsAnimePack), Get_Z_Construct_UScriptStruct_FSsAnimePack_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsAnimePack(FSsAnimePack::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsAnimePack
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsAnimePack()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsAnimePack")),new UScriptStruct::TCppStructOps<FSsAnimePack>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsAnimePack;
class UScriptStruct* FSsAnimation::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsAnimation();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsAnimation_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsAnimation, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsAnimation"), sizeof(FSsAnimation), Get_Z_Construct_UScriptStruct_FSsAnimation_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsAnimation(FSsAnimation::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsAnimation
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsAnimation()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsAnimation")),new UScriptStruct::TCppStructOps<FSsAnimation>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsAnimation;
class UScriptStruct* FSsLabel::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsLabel();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsLabel_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsLabel, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsLabel"), sizeof(FSsLabel), Get_Z_Construct_UScriptStruct_FSsLabel_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsLabel(FSsLabel::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsLabel
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsLabel()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsLabel")),new UScriptStruct::TCppStructOps<FSsLabel>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsLabel;
class UScriptStruct* FSsPartAnime::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsPartAnime();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsPartAnime_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsPartAnime, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsPartAnime"), sizeof(FSsPartAnime), Get_Z_Construct_UScriptStruct_FSsPartAnime_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsPartAnime(FSsPartAnime::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsPartAnime
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsPartAnime()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsPartAnime")),new UScriptStruct::TCppStructOps<FSsPartAnime>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsPartAnime;
class UScriptStruct* FSsModel::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsModel();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsModel_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsModel, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsModel"), sizeof(FSsModel), Get_Z_Construct_UScriptStruct_FSsModel_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsModel(FSsModel::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsModel
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsModel()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsModel")),new UScriptStruct::TCppStructOps<FSsModel>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsModel;
class UScriptStruct* FSsPart::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsPart();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsPart_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsPart, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsPart"), sizeof(FSsPart), Get_Z_Construct_UScriptStruct_FSsPart_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsPart(FSsPart::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsPart
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsPart()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsPart")),new UScriptStruct::TCppStructOps<FSsPart>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsPart;
class UScriptStruct* FSsAnimationSettings::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsAnimationSettings();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsAnimationSettings_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsAnimationSettings, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsAnimationSettings"), sizeof(FSsAnimationSettings), Get_Z_Construct_UScriptStruct_FSsAnimationSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsAnimationSettings(FSsAnimationSettings::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsAnimationSettings
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsAnimationSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsAnimationSettings")),new UScriptStruct::TCppStructOps<FSsAnimationSettings>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsAnimationSettings;
class UScriptStruct* FSsCellMap::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsCellMap();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsCellMap_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsCellMap, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsCellMap"), sizeof(FSsCellMap), Get_Z_Construct_UScriptStruct_FSsCellMap_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsCellMap(FSsCellMap::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsCellMap
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsCellMap()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsCellMap")),new UScriptStruct::TCppStructOps<FSsCellMap>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsCellMap;
class UScriptStruct* FSsCell::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsCell();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsCell_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsCell, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsCell"), sizeof(FSsCell), Get_Z_Construct_UScriptStruct_FSsCell_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsCell(FSsCell::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsCell
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsCell()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsCell")),new UScriptStruct::TCppStructOps<FSsCell>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsCell;
static class UEnum* SsVarianceValueRangeType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsVarianceValueRangeType();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticEnum(Z_Construct_UEnum_SpriteStudio5_SsVarianceValueRangeType, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsVarianceValueRangeType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_SsVarianceValueRangeType(SsVarianceValueRangeType_StaticEnum, TEXT("/Script/SpriteStudio5"));
static class UEnum* SsEffectFunctionType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsEffectFunctionType();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticEnum(Z_Construct_UEnum_SpriteStudio5_SsEffectFunctionType, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsEffectFunctionType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_SsEffectFunctionType(SsEffectFunctionType_StaticEnum, TEXT("/Script/SpriteStudio5"));
static class UEnum* SsEffectPartType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsEffectPartType();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticEnum(Z_Construct_UEnum_SpriteStudio5_SsEffectPartType, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsEffectPartType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_SsEffectPartType(SsEffectPartType_StaticEnum, TEXT("/Script/SpriteStudio5"));
class UScriptStruct* FSsParticleTurnToDirectionEnabled::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleTurnToDirectionEnabled();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsParticleTurnToDirectionEnabled_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsParticleTurnToDirectionEnabled, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsParticleTurnToDirectionEnabled"), sizeof(FSsParticleTurnToDirectionEnabled), Get_Z_Construct_UScriptStruct_FSsParticleTurnToDirectionEnabled_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsParticleTurnToDirectionEnabled(FSsParticleTurnToDirectionEnabled::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleTurnToDirectionEnabled
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleTurnToDirectionEnabled()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsParticleTurnToDirectionEnabled")),new UScriptStruct::TCppStructOps<FSsParticleTurnToDirectionEnabled>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleTurnToDirectionEnabled;
class UScriptStruct* FSsParticlePointGravity::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticlePointGravity();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsParticlePointGravity_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsParticlePointGravity, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsParticlePointGravity"), sizeof(FSsParticlePointGravity), Get_Z_Construct_UScriptStruct_FSsParticlePointGravity_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsParticlePointGravity(FSsParticlePointGravity::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticlePointGravity
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticlePointGravity()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsParticlePointGravity")),new UScriptStruct::TCppStructOps<FSsParticlePointGravity>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticlePointGravity;
class UScriptStruct* FSsParticleElementTransSize::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementTransSize();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementTransSize_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsParticleElementTransSize, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsParticleElementTransSize"), sizeof(FSsParticleElementTransSize), Get_Z_Construct_UScriptStruct_FSsParticleElementTransSize_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsParticleElementTransSize(FSsParticleElementTransSize::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementTransSize
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementTransSize()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsParticleElementTransSize")),new UScriptStruct::TCppStructOps<FSsParticleElementTransSize>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementTransSize;
class UScriptStruct* FSsParticleElementSize::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementSize();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementSize_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsParticleElementSize, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsParticleElementSize"), sizeof(FSsParticleElementSize), Get_Z_Construct_UScriptStruct_FSsParticleElementSize_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsParticleElementSize(FSsParticleElementSize::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementSize
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementSize()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsParticleElementSize")),new UScriptStruct::TCppStructOps<FSsParticleElementSize>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementSize;
class UScriptStruct* FSsParticleElementAlphaFade::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementAlphaFade();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementAlphaFade_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsParticleElementAlphaFade, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsParticleElementAlphaFade"), sizeof(FSsParticleElementAlphaFade), Get_Z_Construct_UScriptStruct_FSsParticleElementAlphaFade_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsParticleElementAlphaFade(FSsParticleElementAlphaFade::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementAlphaFade
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementAlphaFade()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsParticleElementAlphaFade")),new UScriptStruct::TCppStructOps<FSsParticleElementAlphaFade>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementAlphaFade;
class UScriptStruct* FSsParticleElementTransColor::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementTransColor();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementTransColor_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsParticleElementTransColor, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsParticleElementTransColor"), sizeof(FSsParticleElementTransColor), Get_Z_Construct_UScriptStruct_FSsParticleElementTransColor_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsParticleElementTransColor(FSsParticleElementTransColor::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementTransColor
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementTransColor()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsParticleElementTransColor")),new UScriptStruct::TCppStructOps<FSsParticleElementTransColor>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementTransColor;
class UScriptStruct* FSsParticleElementInitColor::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementInitColor();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementInitColor_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsParticleElementInitColor, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsParticleElementInitColor"), sizeof(FSsParticleElementInitColor), Get_Z_Construct_UScriptStruct_FSsParticleElementInitColor_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsParticleElementInitColor(FSsParticleElementInitColor::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementInitColor
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementInitColor()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsParticleElementInitColor")),new UScriptStruct::TCppStructOps<FSsParticleElementInitColor>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementInitColor;
class UScriptStruct* FSsParticleElementTangentialAcceleration::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementTangentialAcceleration();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementTangentialAcceleration_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsParticleElementTangentialAcceleration, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsParticleElementTangentialAcceleration"), sizeof(FSsParticleElementTangentialAcceleration), Get_Z_Construct_UScriptStruct_FSsParticleElementTangentialAcceleration_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsParticleElementTangentialAcceleration(FSsParticleElementTangentialAcceleration::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementTangentialAcceleration
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementTangentialAcceleration()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsParticleElementTangentialAcceleration")),new UScriptStruct::TCppStructOps<FSsParticleElementTangentialAcceleration>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementTangentialAcceleration;
class UScriptStruct* FSsParticleElementTransSpeed::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementTransSpeed();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementTransSpeed_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsParticleElementTransSpeed, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsParticleElementTransSpeed"), sizeof(FSsParticleElementTransSpeed), Get_Z_Construct_UScriptStruct_FSsParticleElementTransSpeed_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsParticleElementTransSpeed(FSsParticleElementTransSpeed::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementTransSpeed
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementTransSpeed()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsParticleElementTransSpeed")),new UScriptStruct::TCppStructOps<FSsParticleElementTransSpeed>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementTransSpeed;
class UScriptStruct* FSsParticleElementRotationTrans::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementRotationTrans();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementRotationTrans_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsParticleElementRotationTrans, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsParticleElementRotationTrans"), sizeof(FSsParticleElementRotationTrans), Get_Z_Construct_UScriptStruct_FSsParticleElementRotationTrans_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsParticleElementRotationTrans(FSsParticleElementRotationTrans::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementRotationTrans
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementRotationTrans()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsParticleElementRotationTrans")),new UScriptStruct::TCppStructOps<FSsParticleElementRotationTrans>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementRotationTrans;
class UScriptStruct* FSsParticleElementRotation::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementRotation();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementRotation_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsParticleElementRotation, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsParticleElementRotation"), sizeof(FSsParticleElementRotation), Get_Z_Construct_UScriptStruct_FSsParticleElementRotation_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsParticleElementRotation(FSsParticleElementRotation::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementRotation
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementRotation()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsParticleElementRotation")),new UScriptStruct::TCppStructOps<FSsParticleElementRotation>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementRotation;
class UScriptStruct* FSsParticleElementPosition::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementPosition();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementPosition_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsParticleElementPosition, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsParticleElementPosition"), sizeof(FSsParticleElementPosition), Get_Z_Construct_UScriptStruct_FSsParticleElementPosition_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsParticleElementPosition(FSsParticleElementPosition::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementPosition
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementPosition()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsParticleElementPosition")),new UScriptStruct::TCppStructOps<FSsParticleElementPosition>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementPosition;
class UScriptStruct* FSsParticleElementGravity::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementGravity();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementGravity_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsParticleElementGravity, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsParticleElementGravity"), sizeof(FSsParticleElementGravity), Get_Z_Construct_UScriptStruct_FSsParticleElementGravity_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsParticleElementGravity(FSsParticleElementGravity::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementGravity
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementGravity()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsParticleElementGravity")),new UScriptStruct::TCppStructOps<FSsParticleElementGravity>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementGravity;
class UScriptStruct* FSsParticleElementDelay::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementDelay();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementDelay_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsParticleElementDelay, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsParticleElementDelay"), sizeof(FSsParticleElementDelay), Get_Z_Construct_UScriptStruct_FSsParticleElementDelay_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsParticleElementDelay(FSsParticleElementDelay::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementDelay
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementDelay()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsParticleElementDelay")),new UScriptStruct::TCppStructOps<FSsParticleElementDelay>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementDelay;
class UScriptStruct* FSsParticleElementRndSeedChange::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementRndSeedChange();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementRndSeedChange_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsParticleElementRndSeedChange, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsParticleElementRndSeedChange"), sizeof(FSsParticleElementRndSeedChange), Get_Z_Construct_UScriptStruct_FSsParticleElementRndSeedChange_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsParticleElementRndSeedChange(FSsParticleElementRndSeedChange::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementRndSeedChange
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementRndSeedChange()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsParticleElementRndSeedChange")),new UScriptStruct::TCppStructOps<FSsParticleElementRndSeedChange>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementRndSeedChange;
class UScriptStruct* FSsParticleElementBasic::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementBasic();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementBasic_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsParticleElementBasic, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsParticleElementBasic"), sizeof(FSsParticleElementBasic), Get_Z_Construct_UScriptStruct_FSsParticleElementBasic_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsParticleElementBasic(FSsParticleElementBasic::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementBasic
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementBasic()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsParticleElementBasic")),new UScriptStruct::TCppStructOps<FSsParticleElementBasic>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsParticleElementBasic;
class UScriptStruct* FSsEffectElementBase::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsEffectElementBase();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsEffectElementBase_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsEffectElementBase, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsEffectElementBase"), sizeof(FSsEffectElementBase), Get_Z_Construct_UScriptStruct_FSsEffectElementBase_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsEffectElementBase(FSsEffectElementBase::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsEffectElementBase
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsEffectElementBase()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsEffectElementBase")),new UScriptStruct::TCppStructOps<FSsEffectElementBase>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsEffectElementBase;
class UScriptStruct* FSsVarianceValueColor::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsVarianceValueColor();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsVarianceValueColor_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsVarianceValueColor, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsVarianceValueColor"), sizeof(FSsVarianceValueColor), Get_Z_Construct_UScriptStruct_FSsVarianceValueColor_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsVarianceValueColor(FSsVarianceValueColor::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsVarianceValueColor
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsVarianceValueColor()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsVarianceValueColor")),new UScriptStruct::TCppStructOps<FSsVarianceValueColor>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsVarianceValueColor;
class UScriptStruct* FSsVarianceValueInt::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsVarianceValueInt();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsVarianceValueInt_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsVarianceValueInt, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsVarianceValueInt"), sizeof(FSsVarianceValueInt), Get_Z_Construct_UScriptStruct_FSsVarianceValueInt_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsVarianceValueInt(FSsVarianceValueInt::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsVarianceValueInt
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsVarianceValueInt()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsVarianceValueInt")),new UScriptStruct::TCppStructOps<FSsVarianceValueInt>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsVarianceValueInt;
class UScriptStruct* FSsVarianceValueFloat::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsVarianceValueFloat();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsVarianceValueFloat_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsVarianceValueFloat, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsVarianceValueFloat"), sizeof(FSsVarianceValueFloat), Get_Z_Construct_UScriptStruct_FSsVarianceValueFloat_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsVarianceValueFloat(FSsVarianceValueFloat::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsVarianceValueFloat
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsVarianceValueFloat()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsVarianceValueFloat")),new UScriptStruct::TCppStructOps<FSsVarianceValueFloat>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsVarianceValueFloat;
class UScriptStruct* FSsEffectBehavior::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsEffectBehavior();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsEffectBehavior_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsEffectBehavior, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsEffectBehavior"), sizeof(FSsEffectBehavior), Get_Z_Construct_UScriptStruct_FSsEffectBehavior_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsEffectBehavior(FSsEffectBehavior::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsEffectBehavior
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsEffectBehavior()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsEffectBehavior")),new UScriptStruct::TCppStructOps<FSsEffectBehavior>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsEffectBehavior;
class UScriptStruct* FSsEffectFile::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsEffectFile();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsEffectFile_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsEffectFile, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsEffectFile"), sizeof(FSsEffectFile), Get_Z_Construct_UScriptStruct_FSsEffectFile_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsEffectFile(FSsEffectFile::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsEffectFile
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsEffectFile()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsEffectFile")),new UScriptStruct::TCppStructOps<FSsEffectFile>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsEffectFile;
class UScriptStruct* FSsEffectModel::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsEffectModel();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsEffectModel_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsEffectModel, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsEffectModel"), sizeof(FSsEffectModel), Get_Z_Construct_UScriptStruct_FSsEffectModel_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsEffectModel(FSsEffectModel::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsEffectModel
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsEffectModel()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsEffectModel")),new UScriptStruct::TCppStructOps<FSsEffectModel>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsEffectModel;
class UScriptStruct* FSsEffectNode::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsEffectNode();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsEffectNode_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsEffectNode, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsEffectNode"), sizeof(FSsEffectNode), Get_Z_Construct_UScriptStruct_FSsEffectNode_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsEffectNode(FSsEffectNode::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsEffectNode
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsEffectNode()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsEffectNode")),new UScriptStruct::TCppStructOps<FSsEffectNode>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsEffectNode;
class UScriptStruct* FSsSimpleTree::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsSimpleTree();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsSimpleTree_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsSimpleTree, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsSimpleTree"), sizeof(FSsSimpleTree), Get_Z_Construct_UScriptStruct_FSsSimpleTree_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsSimpleTree(FSsSimpleTree::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsSimpleTree
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsSimpleTree()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsSimpleTree")),new UScriptStruct::TCppStructOps<FSsSimpleTree>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsSimpleTree;
class UScriptStruct* FSsProjectSetting::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsProjectSetting();
		extern SPRITESTUDIO5_API uint32 Get_Z_Construct_UScriptStruct_FSsProjectSetting_CRC();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSsProjectSetting, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsProjectSetting"), sizeof(FSsProjectSetting), Get_Z_Construct_UScriptStruct_FSsProjectSetting_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSsProjectSetting(FSsProjectSetting::StaticStruct, TEXT("/Script/SpriteStudio5"));
static struct FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsProjectSetting
{
	FScriptStruct_SpriteStudio5_StaticRegisterNativesFSsProjectSetting()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SsProjectSetting")),new UScriptStruct::TCppStructOps<FSsProjectSetting>);
	}
} ScriptStruct_SpriteStudio5_StaticRegisterNativesFSsProjectSetting;
	void USsProject::StaticRegisterNativesUSsProject()
	{
	}
	IMPLEMENT_CLASS(USsProject, 2208506396);
	void USsStatics::StaticRegisterNativesUSsStatics()
	{
		FNativeFunctionRegistrar::RegisterFunction(USsStatics::StaticClass(),"SpawnSsPlayerAtLocation",(Native)&USsStatics::execSpawnSsPlayerAtLocation);
		FNativeFunctionRegistrar::RegisterFunction(USsStatics::StaticClass(),"SpawnSsPlayerAtLocationByIndex",(Native)&USsStatics::execSpawnSsPlayerAtLocationByIndex);
	}
	IMPLEMENT_CLASS(USsStatics, 3491156386);
static class UEnum* SsEmmiterType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsEmmiterType();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticEnum(Z_Construct_UEnum_SpriteStudio5_SsEmmiterType, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsEmmiterType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_SsEmmiterType(SsEmmiterType_StaticEnum, TEXT("/Script/SpriteStudio5"));
static class UEnum* SsRenderType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsRenderType();
		extern SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
		Singleton = GetStaticEnum(Z_Construct_UEnum_SpriteStudio5_SsRenderType, Z_Construct_UPackage_SpriteStudio5(), TEXT("SsRenderType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_SsRenderType(SsRenderType_StaticEnum, TEXT("/Script/SpriteStudio5"));
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector2D();
	ENGINE_API class UClass* Z_Construct_UClass_AHUD();
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	ENGINE_API class UClass* Z_Construct_UClass_UTexture_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FTransform();
	ENGINE_API class UClass* Z_Construct_UClass_UMeshComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialInstanceDynamic_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialInterface_NoRegister();
	UMG_API class UClass* Z_Construct_UClass_UImage();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject();
	ENGINE_API class UClass* Z_Construct_UClass_UAssetImportData_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FRotator();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibrary();

	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_ASsHUD_DrawSsPlayer();
	SPRITESTUDIO5_API class UClass* Z_Construct_UClass_ASsHUD_NoRegister();
	SPRITESTUDIO5_API class UClass* Z_Construct_UClass_ASsHUD();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_ASsPlayerActor_GetSsPlayer();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_ASsPlayerActor_OnEndPlay();
	SPRITESTUDIO5_API class UClass* Z_Construct_UClass_ASsPlayerActor_NoRegister();
	SPRITESTUDIO5_API class UClass* Z_Construct_UClass_ASsPlayerActor();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsUserData();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsUserDataValue();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsUserDataRect();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UDelegateFunction_SpriteStudio5_SsUserDataSignature__DelegateSignature();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UDelegateFunction_SpriteStudio5_SsEndPlaySignature__DelegateSignature();
	SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_ESsPlayerComponentRenderMode();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_AddTextureReplacement();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_AddTextureReplacementByIndex();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_GetFlipH();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_GetFlipV();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_GetLoopCount();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_GetNumAnimations();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_GetNumAnimationsByIndex();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_GetNumAnimPacks();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_GetPartAttachTransform();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_GetPartColorLabel();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_GetPartColorLabelByIndex();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_GetPlayFrame();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_GetPlayingAnimationIndex();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_GetPlayingAnimationName();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_GetPlayRate();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_GetRenderTarget();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_IsPlaying();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_IsRoundTrip();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_Pause();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_Play();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_PlayByIndex();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_RemoveTextureReplacement();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_RemoveTextureReplacementAll();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_RemoveTextureReplacementByIndex();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_Resume();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_SetFlipH();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_SetFlipV();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_SetLoopCount();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_SetPlayFrame();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_SetPlayRate();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_SetRoundTrip();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerComponent_UpdatePlayer();
	SPRITESTUDIO5_API class UClass* Z_Construct_UClass_USsPlayerComponent_NoRegister();
	SPRITESTUDIO5_API class UClass* Z_Construct_UClass_USsPlayerComponent();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UDelegateFunction_SpriteStudio5_SsWidgetUserDataSignature__DelegateSignature();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UDelegateFunction_SpriteStudio5_SsWidgetEndPlaySignature__DelegateSignature();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_AddTextureReplacement();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_AddTextureReplacementByIndex();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_GetFlipH();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_GetFlipV();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_GetLoopCount();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_GetNumAnimations();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_GetNumAnimationsByIndex();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_GetNumAnimPacks();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_GetPartColorLabel();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_GetPartColorLabelByIndex();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_GetPlayFrame();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_GetPlayingAnimationIndex();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_GetPlayingAnimationName();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_GetPlayRate();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_IsPlaying();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_IsRoundTrip();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_Pause();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_Play();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_PlayByIndex();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_RemoveTextureReplacement();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_RemoveTextureReplacementAll();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_RemoveTextureReplacementByIndex();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_Resume();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_SetFlipH();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_SetFlipV();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_SetLoopCount();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_SetPlayFrame();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_SetPlayRate();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_SetRoundTrip();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsPlayerWidget_UpdatePlayer();
	SPRITESTUDIO5_API class UClass* Z_Construct_UClass_USsPlayerWidget_NoRegister();
	SPRITESTUDIO5_API class UClass* Z_Construct_UClass_USsPlayerWidget();
	SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsRenderBlendType();
	SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsEffectNodeType();
	SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsKeyValueType();
	SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsAttributeKind();
	SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsTexFilterMode();
	SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsTexWrapMode();
	SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsInterpolationType();
	SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsColorBlendTarget();
	SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsBlendType();
	SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsInheritType();
	SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsBoundsType();
	SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsPartType();
	SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsPartsSortMode();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsCurve();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsU8Color();
	SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsValueType();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsValue();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsAttribute();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsKeyframe();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsAnimePack();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsAnimation();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsLabel();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsPartAnime();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsModel();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsPart();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsAnimationSettings();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsCellMap();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsCell();
	SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsVarianceValueRangeType();
	SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsEffectFunctionType();
	SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsEffectPartType();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleTurnToDirectionEnabled();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticlePointGravity();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementTransSize();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementSize();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementAlphaFade();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementTransColor();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementInitColor();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementTangentialAcceleration();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementTransSpeed();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementRotationTrans();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementRotation();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementPosition();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementGravity();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementDelay();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementRndSeedChange();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementBasic();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsEffectElementBase();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsVarianceValueColor();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsVarianceValueInt();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsVarianceValueFloat();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsEffectBehavior();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsEffectFile();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsEffectModel();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsEffectNode();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsSimpleTree();
	SPRITESTUDIO5_API class UScriptStruct* Z_Construct_UScriptStruct_FSsProjectSetting();
	SPRITESTUDIO5_API class UClass* Z_Construct_UClass_USsProject_NoRegister();
	SPRITESTUDIO5_API class UClass* Z_Construct_UClass_USsProject();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsStatics_SpawnSsPlayerAtLocation();
	SPRITESTUDIO5_API class UFunction* Z_Construct_UFunction_USsStatics_SpawnSsPlayerAtLocationByIndex();
	SPRITESTUDIO5_API class UClass* Z_Construct_UClass_USsStatics_NoRegister();
	SPRITESTUDIO5_API class UClass* Z_Construct_UClass_USsStatics();
	SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsEmmiterType();
	SPRITESTUDIO5_API class UEnum* Z_Construct_UEnum_SpriteStudio5_SsRenderType();
	SPRITESTUDIO5_API class UPackage* Z_Construct_UPackage_SpriteStudio5();
	UFunction* Z_Construct_UFunction_ASsHUD_DrawSsPlayer()
	{
		struct SsHUD_eventDrawSsPlayer_Parms
		{
			USsPlayerComponent* SsPlayer;
			FVector2D Location;
			float Rotation;
			FVector2D Scale;
		};
		UObject* Outer=Z_Construct_UClass_ASsHUD();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("DrawSsPlayer"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(SsHUD_eventDrawSsPlayer_Parms));
			UProperty* NewProp_Scale = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Scale"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Scale, SsHUD_eventDrawSsPlayer_Parms), 0x0000040000000080, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_Rotation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Rotation"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Rotation, SsHUD_eventDrawSsPlayer_Parms), 0x0000040000000080);
			UProperty* NewProp_Location = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Location"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Location, SsHUD_eventDrawSsPlayer_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_SsPlayer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SsPlayer"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SsPlayer, SsHUD_eventDrawSsPlayer_Parms), 0x0000000000080080, Z_Construct_UClass_USsPlayerComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AdvancedDisplay"), TEXT("2"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Rotation"), TEXT("0.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Scale"), TEXT("(X=1.000,Y=1.000)"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Actor/SsHUD.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x6307\x5b9a\x3057\x305fSsPlayer\x3092")TEXT("Canvas\x306b\x63cf\x753b\x3057\x307e\x3059\nEvent Receive Draw HUD \x304b\x3089\x306e\x307f\x4f7f\x7528\x53ef\x80fd\x3067\x3059\n\x30a2\x30eb\x30d5\x30a1\x5024\x306f\x30c6\x30af\x30b9\x30c1\x30e3\x306e\x30a2\x30eb\x30d5\x30a1\x306e\x307f\x53cd\x6620\x3055\x308c\x307e\x3059\n\x30a2\x30eb\x30d5\x30a1\x30d6\x30ec\x30f3\x30c9\x30e2\x30fc\x30c9/\x30ab\x30e9\x30fc\x30d6\x30ec\x30f3\x30c9\x30e2\x30fc\x30c9\x306f\x53cd\x6620\x3055\x308c\x307e\x305b\x3093"));
			MetaData->SetValue(NewProp_SsPlayer, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ASsHUD_NoRegister()
	{
		return ASsHUD::StaticClass();
	}
	UClass* Z_Construct_UClass_ASsHUD()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AHUD();
			Z_Construct_UPackage_SpriteStudio5();
			OuterClass = ASsHUD::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2090028C;

				OuterClass->LinkChild(Z_Construct_UFunction_ASsHUD_DrawSsPlayer());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SsPlayerComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SsPlayerComponent"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SsPlayerComponent, ASsHUD), 0x00000000000a0009, Z_Construct_UClass_USsPlayerComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ASsHUD_DrawSsPlayer()); // 2402493679
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Rendering Actor Input Replication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Actor/SsHUD.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Actor/SsHUD.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
				MetaData->SetValue(NewProp_SsPlayerComponent, TEXT("Category"), TEXT("SpriteStudio"));
				MetaData->SetValue(NewProp_SsPlayerComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_SsPlayerComponent, TEXT("ModuleRelativePath"), TEXT("Public/Actor/SsHUD.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ASsHUD(Z_Construct_UClass_ASsHUD, TEXT("ASsHUD"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ASsHUD);
	UFunction* Z_Construct_UFunction_ASsPlayerActor_GetSsPlayer()
	{
		struct SsPlayerActor_eventGetSsPlayer_Parms
		{
			USsPlayerComponent* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_ASsPlayerActor();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetSsPlayer"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(SsPlayerActor_eventGetSsPlayer_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, SsPlayerActor_eventGetSsPlayer_Parms), 0x0000000000080588, Z_Construct_UClass_USsPlayerComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Actor/SsPlayerActor.h"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ASsPlayerActor_OnEndPlay()
	{
		struct SsPlayerActor_eventOnEndPlay_Parms
		{
			FName AnimPackName;
			FName AnimationName;
			int32 AnimPackIndex;
			int32 AnimationIndex;
		};
		UObject* Outer=Z_Construct_UClass_ASsPlayerActor();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnEndPlay"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x00040401, 65535, sizeof(SsPlayerActor_eventOnEndPlay_Parms));
			UProperty* NewProp_AnimationIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimationIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AnimationIndex, SsPlayerActor_eventOnEndPlay_Parms), 0x0000000000000080);
			UProperty* NewProp_AnimPackIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimPackIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AnimPackIndex, SsPlayerActor_eventOnEndPlay_Parms), 0x0000000000000080);
			UProperty* NewProp_AnimationName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimationName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(AnimationName, SsPlayerActor_eventOnEndPlay_Parms), 0x0000000000000080);
			UProperty* NewProp_AnimPackName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimPackName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(AnimPackName, SsPlayerActor_eventOnEndPlay_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Actor/SsPlayerActor.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ASsPlayerActor_NoRegister()
	{
		return ASsPlayerActor::StaticClass();
	}
	UClass* Z_Construct_UClass_ASsPlayerActor()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage_SpriteStudio5();
			OuterClass = ASsPlayerActor::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_ASsPlayerActor_GetSsPlayer());
				OuterClass->LinkChild(Z_Construct_UFunction_ASsPlayerActor_OnEndPlay());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SsPlayerComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SsPlayerComponent"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SsPlayerComponent, ASsPlayerActor), 0x00000000000a0009, Z_Construct_UClass_USsPlayerComponent_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoDestroy, ASsPlayerActor, bool);
				UProperty* NewProp_bAutoDestroy = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutoDestroy"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoDestroy, ASsPlayerActor), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bAutoDestroy, ASsPlayerActor), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ASsPlayerActor_GetSsPlayer()); // 2232766697
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ASsPlayerActor_OnEndPlay()); // 635985038
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("SpriteStudio"));
				MetaData->SetValue(OuterClass, TEXT("IgnoreCategoryKeywordsInSubclasses"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Actor/SsPlayerActor.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Actor/SsPlayerActor.h"));
				MetaData->SetValue(NewProp_SsPlayerComponent, TEXT("Category"), TEXT("SpriteStudio"));
				MetaData->SetValue(NewProp_SsPlayerComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_SsPlayerComponent, TEXT("ModuleRelativePath"), TEXT("Public/Actor/SsPlayerActor.h"));
				MetaData->SetValue(NewProp_bAutoDestroy, TEXT("ModuleRelativePath"), TEXT("Public/Actor/SsPlayerActor.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ASsPlayerActor(Z_Construct_UClass_ASsPlayerActor, TEXT("ASsPlayerActor"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ASsPlayerActor);
	UScriptStruct* Z_Construct_UScriptStruct_FSsUserData()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsUserData_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsUserData"), sizeof(FSsUserData), Get_Z_Construct_UScriptStruct_FSsUserData_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsUserData"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSsUserData>, EStructFlags(0x00000201));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Value, FSsUserData), 0x0000000000000004, Z_Construct_UScriptStruct_FSsUserDataValue());
			UProperty* NewProp_KeyFrame = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("KeyFrame"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(KeyFrame, FSsUserData), 0x0000000000000004);
			UProperty* NewProp_PartIndex = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PartIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(PartIndex, FSsUserData), 0x0000000000000004);
			UProperty* NewProp_PartName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PartName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(PartName, FSsUserData), 0x0000000000000004);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Player/SsPlayerTickResult.h"));
			MetaData->SetValue(NewProp_Value, TEXT("Category"), TEXT("SpriteStudioUserData"));
			MetaData->SetValue(NewProp_Value, TEXT("ModuleRelativePath"), TEXT("Public/Player/SsPlayerTickResult.h"));
			MetaData->SetValue(NewProp_KeyFrame, TEXT("Category"), TEXT("SpriteStudioUserData"));
			MetaData->SetValue(NewProp_KeyFrame, TEXT("ModuleRelativePath"), TEXT("Public/Player/SsPlayerTickResult.h"));
			MetaData->SetValue(NewProp_PartIndex, TEXT("Category"), TEXT("SpriteStudioUserData"));
			MetaData->SetValue(NewProp_PartIndex, TEXT("ModuleRelativePath"), TEXT("Public/Player/SsPlayerTickResult.h"));
			MetaData->SetValue(NewProp_PartName, TEXT("Category"), TEXT("SpriteStudioUserData"));
			MetaData->SetValue(NewProp_PartName, TEXT("ModuleRelativePath"), TEXT("Public/Player/SsPlayerTickResult.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsUserData_CRC() { return 47975285U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsUserDataValue()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsUserDataValue_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsUserDataValue"), sizeof(FSsUserDataValue), Get_Z_Construct_UScriptStruct_FSsUserDataValue_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsUserDataValue"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSsUserDataValue>, EStructFlags(0x00000201));
			UProperty* NewProp_String = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("String"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(String, FSsUserDataValue), 0x0000000000000004);
			UProperty* NewProp_Rect = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Rect"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Rect, FSsUserDataValue), 0x0000000000000004, Z_Construct_UScriptStruct_FSsUserDataRect());
			UProperty* NewProp_Point = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Point"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Point, FSsUserDataValue), 0x0000000000000004, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_Integer = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Integer"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Integer, FSsUserDataValue), 0x0000000000000004);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseString, FSsUserDataValue, bool);
			UProperty* NewProp_bUseString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bUseString"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseString, FSsUserDataValue), 0x0000000000000004, CPP_BOOL_PROPERTY_BITMASK(bUseString, FSsUserDataValue), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseRect, FSsUserDataValue, bool);
			UProperty* NewProp_bUseRect = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bUseRect"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseRect, FSsUserDataValue), 0x0000000000000004, CPP_BOOL_PROPERTY_BITMASK(bUseRect, FSsUserDataValue), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUsePoint, FSsUserDataValue, bool);
			UProperty* NewProp_bUsePoint = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bUsePoint"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUsePoint, FSsUserDataValue), 0x0000000000000004, CPP_BOOL_PROPERTY_BITMASK(bUsePoint, FSsUserDataValue), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseInteger, FSsUserDataValue, bool);
			UProperty* NewProp_bUseInteger = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bUseInteger"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseInteger, FSsUserDataValue), 0x0000000000000004, CPP_BOOL_PROPERTY_BITMASK(bUseInteger, FSsUserDataValue), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Player/SsPlayerTickResult.h"));
			MetaData->SetValue(NewProp_String, TEXT("Category"), TEXT("SpriteStudioUserData"));
			MetaData->SetValue(NewProp_String, TEXT("ModuleRelativePath"), TEXT("Public/Player/SsPlayerTickResult.h"));
			MetaData->SetValue(NewProp_Rect, TEXT("Category"), TEXT("SpriteStudioUserData"));
			MetaData->SetValue(NewProp_Rect, TEXT("ModuleRelativePath"), TEXT("Public/Player/SsPlayerTickResult.h"));
			MetaData->SetValue(NewProp_Point, TEXT("Category"), TEXT("SpriteStudioUserData"));
			MetaData->SetValue(NewProp_Point, TEXT("ModuleRelativePath"), TEXT("Public/Player/SsPlayerTickResult.h"));
			MetaData->SetValue(NewProp_Integer, TEXT("Category"), TEXT("SpriteStudioUserData"));
			MetaData->SetValue(NewProp_Integer, TEXT("ModuleRelativePath"), TEXT("Public/Player/SsPlayerTickResult.h"));
			MetaData->SetValue(NewProp_bUseString, TEXT("Category"), TEXT("SpriteStudioUserData"));
			MetaData->SetValue(NewProp_bUseString, TEXT("ModuleRelativePath"), TEXT("Public/Player/SsPlayerTickResult.h"));
			MetaData->SetValue(NewProp_bUseRect, TEXT("Category"), TEXT("SpriteStudioUserData"));
			MetaData->SetValue(NewProp_bUseRect, TEXT("ModuleRelativePath"), TEXT("Public/Player/SsPlayerTickResult.h"));
			MetaData->SetValue(NewProp_bUsePoint, TEXT("Category"), TEXT("SpriteStudioUserData"));
			MetaData->SetValue(NewProp_bUsePoint, TEXT("ModuleRelativePath"), TEXT("Public/Player/SsPlayerTickResult.h"));
			MetaData->SetValue(NewProp_bUseInteger, TEXT("Category"), TEXT("SpriteStudioUserData"));
			MetaData->SetValue(NewProp_bUseInteger, TEXT("ModuleRelativePath"), TEXT("Public/Player/SsPlayerTickResult.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsUserDataValue_CRC() { return 219909054U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsUserDataRect()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsUserDataRect_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsUserDataRect"), sizeof(FSsUserDataRect), Get_Z_Construct_UScriptStruct_FSsUserDataRect_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsUserDataRect"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSsUserDataRect>, EStructFlags(0x00000201));
			UProperty* NewProp_Bottom = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Bottom"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Bottom, FSsUserDataRect), 0x0000000000000004);
			UProperty* NewProp_Right = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Right"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Right, FSsUserDataRect), 0x0000000000000004);
			UProperty* NewProp_Top = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Top"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Top, FSsUserDataRect), 0x0000000000000004);
			UProperty* NewProp_Left = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Left"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Left, FSsUserDataRect), 0x0000000000000004);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Player/SsPlayerTickResult.h"));
			MetaData->SetValue(NewProp_Bottom, TEXT("Category"), TEXT("SpriteStudioUserData"));
			MetaData->SetValue(NewProp_Bottom, TEXT("ModuleRelativePath"), TEXT("Public/Player/SsPlayerTickResult.h"));
			MetaData->SetValue(NewProp_Right, TEXT("Category"), TEXT("SpriteStudioUserData"));
			MetaData->SetValue(NewProp_Right, TEXT("ModuleRelativePath"), TEXT("Public/Player/SsPlayerTickResult.h"));
			MetaData->SetValue(NewProp_Top, TEXT("Category"), TEXT("SpriteStudioUserData"));
			MetaData->SetValue(NewProp_Top, TEXT("ModuleRelativePath"), TEXT("Public/Player/SsPlayerTickResult.h"));
			MetaData->SetValue(NewProp_Left, TEXT("Category"), TEXT("SpriteStudioUserData"));
			MetaData->SetValue(NewProp_Left, TEXT("ModuleRelativePath"), TEXT("Public/Player/SsPlayerTickResult.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsUserDataRect_CRC() { return 1686626050U; }
	UFunction* Z_Construct_UDelegateFunction_SpriteStudio5_SsUserDataSignature__DelegateSignature()
	{
		struct _Script_SpriteStudio5_eventSsUserDataSignature_Parms
		{
			FName PartName;
			int32 PartIndex;
			int32 KeyFrame;
			FSsUserDataValue UserData;
		};
		UObject* Outer=Z_Construct_UPackage_SpriteStudio5();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsUserDataSignature__DelegateSignature"), RF_Public|RF_Transient|RF_Native) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_SpriteStudio5_eventSsUserDataSignature_Parms));
			UProperty* NewProp_UserData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UserData"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(UserData, _Script_SpriteStudio5_eventSsUserDataSignature_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FSsUserDataValue());
			UProperty* NewProp_KeyFrame = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyFrame"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(KeyFrame, _Script_SpriteStudio5_eventSsUserDataSignature_Parms), 0x0000000000000080);
			UProperty* NewProp_PartIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PartIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(PartIndex, _Script_SpriteStudio5_eventSsUserDataSignature_Parms), 0x0000000000000080);
			UProperty* NewProp_PartName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PartName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(PartName, _Script_SpriteStudio5_eventSsUserDataSignature_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_SpriteStudio5_SsEndPlaySignature__DelegateSignature()
	{
		struct _Script_SpriteStudio5_eventSsEndPlaySignature_Parms
		{
			FName AnimPackName;
			FName AnimationName;
			int32 AnimPackIndex;
			int32 AnimationIndex;
		};
		UObject* Outer=Z_Construct_UPackage_SpriteStudio5();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsEndPlaySignature__DelegateSignature"), RF_Public|RF_Transient|RF_Native) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_SpriteStudio5_eventSsEndPlaySignature_Parms));
			UProperty* NewProp_AnimationIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimationIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AnimationIndex, _Script_SpriteStudio5_eventSsEndPlaySignature_Parms), 0x0000000000000080);
			UProperty* NewProp_AnimPackIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimPackIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AnimPackIndex, _Script_SpriteStudio5_eventSsEndPlaySignature_Parms), 0x0000000000000080);
			UProperty* NewProp_AnimationName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimationName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(AnimationName, _Script_SpriteStudio5_eventSsEndPlaySignature_Parms), 0x0000000000000080);
			UProperty* NewProp_AnimPackName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimPackName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(AnimPackName, _Script_SpriteStudio5_eventSsEndPlaySignature_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UEnum* Z_Construct_UEnum_SpriteStudio5_ESsPlayerComponentRenderMode()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UEnum_SpriteStudio5_ESsPlayerComponentRenderMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("ESsPlayerComponentRenderMode"), 0, Get_Z_Construct_UEnum_SpriteStudio5_ESsPlayerComponentRenderMode_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ESsPlayerComponentRenderMode"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESsPlayerComponentRenderMode::Default")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESsPlayerComponentRenderMode::OffScreenPlane")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESsPlayerComponentRenderMode::OffScreenOnly")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESsPlayerComponentRenderMode::Canvas")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESsPlayerComponentRenderMode::ESsPlayerComponentRenderMode_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Canvas.ToolTip"), TEXT("HUD\x306e")TEXT("Canvas\x306b\x30ec\x30f3\x30c0\x30ea\x30f3\x30b0\x3059\x308b\x305f\x3081\x306e\x63cf\x753b\x30e2\x30fc\x30c9\x3067\x3059\n3D\x7a7a\x9593\x4e0a\x306b\x306f\x4f55\x3082\x63cf\x753b\x3057\x307e\x305b\x3093\nSsHUD \x3092\x7d99\x627f\x3057\x305fHUD\x30af\x30e9\x30b9\x3067\x306e\x63cf\x753b\x306b\x4f7f\x7528\x3055\x308c\x307e\x3059\n\x30a2\x30eb\x30d5\x30a1\x5024\x306f\x30c6\x30af\x30b9\x30c1\x30e3\x306e\x30a2\x30eb\x30d5\x30a1\x306e\x307f\x53cd\x6620\x3055\x308c\x307e\x3059\n\x30a2\x30eb\x30d5\x30a1\x30d6\x30ec\x30f3\x30c9\x30e2\x30fc\x30c9/\x30ab\x30e9\x30fc\x30d6\x30ec\x30f3\x30c9\x30e2\x30fc\x30c9\x306f\x53cd\x6620\x3055\x308c\x307e\x305b\x3093"));
			MetaData->SetValue(ReturnEnum, TEXT("Default.ToolTip"), TEXT("\x30c7\x30d5\x30a9\x30eb\x30c8\x306e\x63cf\x753b\x30e2\x30fc\x30c9\x3067\x3059\n\x30d1\x30fc\x30c4\x6bce\x306e\x30dd\x30ea\x30b4\x30f3\x3092")TEXT("3D\x7a7a\x9593\x4e0a\x306b\x63cf\x753b\x3057\x307e\x3059\n\x6700\x3082\x9ad8\x901f\x3067\x3001\x6a5f\x80fd\x5236\x9650\x3082\x3042\x308a\x307e\x305b\x3093\n\x901a\x5e38\x306f\x3053\x306e\x30e2\x30fc\x30c9\x3092\x4f7f\x7528\x3057\x3066\x4e0b\x3055\x3044"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnEnum, TEXT("OffScreenOnly.ToolTip"), TEXT("\x30aa\x30d5\x30b9\x30af\x30ea\x30fc\x30f3\x30ec\x30f3\x30c0\x30ea\x30f3\x30b0\x306e\x307f\x3092\x884c\x3044\x3001\x30b2\x30fc\x30e0\x753b\x9762\x3078\x306e\x63cf\x753b\x306f\x884c\x3044\x307e\x305b\x3093\n\x30a2\x30eb\x30d5\x30a1\x30d6\x30ec\x30f3\x30c9\x30e2\x30fc\x30c9 \x4e57\x7b97/\x52a0\x7b97/\x6e1b\x7b97 \x306b\x306f\x5bfe\x5fdc\x3057\x3066\x304a\x3089\x305a\x3001\x5168\x3066 \x30df\x30c3\x30af\x30b9 \x3068\x3057\x3066\x6271\x308f\x308c\x307e\x3059\nGetRenderTarget\x3067\x30ec\x30f3\x30c0\x30ea\x30f3\x30b0\x7d50\x679c\x306e\x30c6\x30af\x30b9\x30c1\x30e3\x3092\x53d6\x5f97\x3057\x3001\x81ea\x7531\x306b\x5229\x7528\x51fa\x6765\x307e\x3059"));
			MetaData->SetValue(ReturnEnum, TEXT("OffScreenPlane.ToolTip"), TEXT("\x4e00\x65e6\x30aa\x30d5\x30b9\x30af\x30ea\x30fc\x30f3\x30ec\x30f3\x30c0\x30ea\x30f3\x30b0\x3057\x305f\x30c6\x30af\x30b9\x30c1\x30e3\x3092\x3001\x677f\x30dd\x30ea\x306b\x8cbc\x308a\x4ed8\x3051\x307e\x3059\n\x30a2\x30eb\x30d5\x30a1\x30d6\x30ec\x30f3\x30c9\x30e2\x30fc\x30c9 \x4e57\x7b97/\x52a0\x7b97/\x6e1b\x7b97 \x306b\x306f\x5bfe\x5fdc\x3057\x3066\x304a\x3089\x305a\x3001\x5168\x3066 \x30df\x30c3\x30af\x30b9 \x3068\x3057\x3066\x6271\x308f\x308c\x307e\x3059\n\x677f\x30dd\x30ea\x306b\x8cbc\x308a\x4ed8\x3051\x308b\x969b\x306e\x30de\x30c6\x30ea\x30a2\x30eb\x3092\x4e0a\x66f8\x304d\x53ef\x80fd\x3067\x3059\n\x30de\x30c6\x30ea\x30a2\x30eb\x3092\x5229\x7528\x3057\x305f\x7279\x6b8a\x306a\x30a8\x30d5\x30a7\x30af\x30c8\x3092\x5b9f\x88c5\x3057\x305f\x3044\x969b\x306a\x3069\x306b\x4f7f\x7528\x3057\x3066\x4e0b\x3055\x3044"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("SsPlayerComponent\x306e\x63cf\x753b\x30e2\x30fc\x30c9"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_SpriteStudio5_ESsPlayerComponentRenderMode_CRC() { return 3526451136U; }
	UFunction* Z_Construct_UFunction_USsPlayerComponent_AddTextureReplacement()
	{
		struct SsPlayerComponent_eventAddTextureReplacement_Parms
		{
			FName PartName;
			UTexture* Texture;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AddTextureReplacement"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerComponent_eventAddTextureReplacement_Parms));
			UProperty* NewProp_Texture = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Texture"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Texture, SsPlayerComponent_eventAddTextureReplacement_Parms), 0x0000000000000080, Z_Construct_UClass_UTexture_NoRegister());
			UProperty* NewProp_PartName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PartName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(PartName, SsPlayerComponent_eventAddTextureReplacement_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x7f6e\x304d\x63db\x3048\x30c6\x30af\x30b9\x30c1\x30e3\x306e\x767b\x9332"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_AddTextureReplacementByIndex()
	{
		struct SsPlayerComponent_eventAddTextureReplacementByIndex_Parms
		{
			int32 PartIndex;
			UTexture* Texture;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AddTextureReplacementByIndex"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerComponent_eventAddTextureReplacementByIndex_Parms));
			UProperty* NewProp_Texture = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Texture"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Texture, SsPlayerComponent_eventAddTextureReplacementByIndex_Parms), 0x0000000000000080, Z_Construct_UClass_UTexture_NoRegister());
			UProperty* NewProp_PartIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PartIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(PartIndex, SsPlayerComponent_eventAddTextureReplacementByIndex_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x7f6e\x304d\x63db\x3048\x30c6\x30af\x30b9\x30c1\x30e3\x306e\x767b\x9332(\x30a4\x30f3\x30c7\x30c3\x30af\x30b9\x6307\x5b9a)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_GetFlipH()
	{
		struct SsPlayerComponent_eventGetFlipH_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetFlipH"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(SsPlayerComponent_eventGetFlipH_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SsPlayerComponent_eventGetFlipH_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SsPlayerComponent_eventGetFlipH_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SsPlayerComponent_eventGetFlipH_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x6c34\x5e73\x53cd\x8ee2\x306e\x53d6\x5f97"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_GetFlipV()
	{
		struct SsPlayerComponent_eventGetFlipV_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetFlipV"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(SsPlayerComponent_eventGetFlipV_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SsPlayerComponent_eventGetFlipV_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SsPlayerComponent_eventGetFlipV_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SsPlayerComponent_eventGetFlipV_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x5782\x76f4\x53cd\x8ee2\x306e\x53d6\x5f97"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_GetLoopCount()
	{
		struct SsPlayerComponent_eventGetLoopCount_Parms
		{
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetLoopCount"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(SsPlayerComponent_eventGetLoopCount_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, SsPlayerComponent_eventGetLoopCount_Parms), 0x0000000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x6b8b\x308a\x30eb\x30fc\x30d7\x6570\x3092\x53d6\x5f97"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_GetNumAnimations()
	{
		struct SsPlayerComponent_eventGetNumAnimations_Parms
		{
			FName AnimPackName;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetNumAnimations"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(SsPlayerComponent_eventGetNumAnimations_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, SsPlayerComponent_eventGetNumAnimations_Parms), 0x0000000000000580);
			UProperty* NewProp_AnimPackName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimPackName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(AnimPackName, SsPlayerComponent_eventGetNumAnimations_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x6307\x5b9a\x3055\x308c\x305f")TEXT("AnimPack\x306e")TEXT("Animation\x6570\x3092\x53d6\x5f97"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_GetNumAnimationsByIndex()
	{
		struct SsPlayerComponent_eventGetNumAnimationsByIndex_Parms
		{
			int32 AnimPackIndex;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetNumAnimationsByIndex"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(SsPlayerComponent_eventGetNumAnimationsByIndex_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, SsPlayerComponent_eventGetNumAnimationsByIndex_Parms), 0x0000000000000580);
			UProperty* NewProp_AnimPackIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimPackIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AnimPackIndex, SsPlayerComponent_eventGetNumAnimationsByIndex_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x6307\x5b9a\x3055\x308c\x305f")TEXT("AnimPack\x306e")TEXT("Animation\x6570\x3092\x53d6\x5f97(\x30a4\x30f3\x30c7\x30c3\x30af\x30b9\x6307\x5b9a)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_GetNumAnimPacks()
	{
		struct SsPlayerComponent_eventGetNumAnimPacks_Parms
		{
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetNumAnimPacks"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(SsPlayerComponent_eventGetNumAnimPacks_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, SsPlayerComponent_eventGetNumAnimPacks_Parms), 0x0000000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x30bb\x30c3\x30c8\x3055\x308c\x305fSsProject\x306e")TEXT("AnimPack\x6570\x3092\x53d6\x5f97"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_GetPartAttachTransform()
	{
		struct SsPlayerComponent_eventGetPartAttachTransform_Parms
		{
			int32 PartIndex;
			FTransform OutTransform;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPartAttachTransform"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54C20401, 65535, sizeof(SsPlayerComponent_eventGetPartAttachTransform_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SsPlayerComponent_eventGetPartAttachTransform_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SsPlayerComponent_eventGetPartAttachTransform_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SsPlayerComponent_eventGetPartAttachTransform_Parms), sizeof(bool), true);
			UProperty* NewProp_OutTransform = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutTransform"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(OutTransform, SsPlayerComponent_eventGetPartAttachTransform_Parms), 0x0000000000000180, Z_Construct_UScriptStruct_FTransform());
			UProperty* NewProp_PartIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PartIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(PartIndex, SsPlayerComponent_eventGetPartAttachTransform_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x30d1\x30fc\x30c4\x306e\x30a2\x30bf\x30c3\x30c1\x7528Transform\x3092\x53d6\x5f97"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_GetPartColorLabel()
	{
		struct SsPlayerComponent_eventGetPartColorLabel_Parms
		{
			FName PartName;
			FName ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPartColorLabel"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerComponent_eventGetPartColorLabel_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(ReturnValue, SsPlayerComponent_eventGetPartColorLabel_Parms), 0x0000000000000580);
			UProperty* NewProp_PartName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PartName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(PartName, SsPlayerComponent_eventGetPartColorLabel_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x30d1\x30fc\x30c4\x306e\x30ab\x30e9\x30fc\x30e9\x30d9\x30eb\x3092\x53d6\x5f97"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_GetPartColorLabelByIndex()
	{
		struct SsPlayerComponent_eventGetPartColorLabelByIndex_Parms
		{
			int32 PartIndex;
			FName ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPartColorLabelByIndex"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerComponent_eventGetPartColorLabelByIndex_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(ReturnValue, SsPlayerComponent_eventGetPartColorLabelByIndex_Parms), 0x0000000000000580);
			UProperty* NewProp_PartIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PartIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(PartIndex, SsPlayerComponent_eventGetPartColorLabelByIndex_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x30d1\x30fc\x30c4\x306e\x30ab\x30e9\x30fc\x30e9\x30d9\x30eb\x3092\x53d6\x5f97(\x30a4\x30f3\x30c7\x30c3\x30af\x30b9\x6307\x5b9a)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_GetPlayFrame()
	{
		struct SsPlayerComponent_eventGetPlayFrame_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPlayFrame"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(SsPlayerComponent_eventGetPlayFrame_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SsPlayerComponent_eventGetPlayFrame_Parms), 0x0000000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x73fe\x5728\x306e\x30d5\x30ec\x30fc\x30e0\x3092\x53d6\x5f97"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_GetPlayingAnimationIndex()
	{
		struct SsPlayerComponent_eventGetPlayingAnimationIndex_Parms
		{
			int32 OutAnimPackIndex;
			int32 OutAnimationIndex;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPlayingAnimationIndex"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54420401, 65535, sizeof(SsPlayerComponent_eventGetPlayingAnimationIndex_Parms));
			UProperty* NewProp_OutAnimationIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutAnimationIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(OutAnimationIndex, SsPlayerComponent_eventGetPlayingAnimationIndex_Parms), 0x0000000000000180);
			UProperty* NewProp_OutAnimPackIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutAnimPackIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(OutAnimPackIndex, SsPlayerComponent_eventGetPlayingAnimationIndex_Parms), 0x0000000000000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x518d\x751f\x4e2d\x306e\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x30a4\x30f3\x30c7\x30c3\x30af\x30b9\x3092\x53d6\x5f97"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_GetPlayingAnimationName()
	{
		struct SsPlayerComponent_eventGetPlayingAnimationName_Parms
		{
			FName OutAnimPackName;
			FName OutAnimationName;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPlayingAnimationName"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54420401, 65535, sizeof(SsPlayerComponent_eventGetPlayingAnimationName_Parms));
			UProperty* NewProp_OutAnimationName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutAnimationName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(OutAnimationName, SsPlayerComponent_eventGetPlayingAnimationName_Parms), 0x0000000000000180);
			UProperty* NewProp_OutAnimPackName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutAnimPackName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(OutAnimPackName, SsPlayerComponent_eventGetPlayingAnimationName_Parms), 0x0000000000000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x518d\x751f\x4e2d\x306e\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x540d\x3092\x53d6\x5f97"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_GetPlayRate()
	{
		struct SsPlayerComponent_eventGetPlayRate_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPlayRate"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(SsPlayerComponent_eventGetPlayRate_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SsPlayerComponent_eventGetPlayRate_Parms), 0x0000000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x518d\x751f\x901f\x5ea6\x3092\x53d6\x5f97"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_GetRenderTarget()
	{
		struct SsPlayerComponent_eventGetRenderTarget_Parms
		{
			UTexture* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetRenderTarget"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(SsPlayerComponent_eventGetRenderTarget_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, SsPlayerComponent_eventGetRenderTarget_Parms), 0x0000000000000580, Z_Construct_UClass_UTexture_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x63cf\x753b\x5bfe\x8c61\x30c6\x30af\x30b9\x30c1\x30e3\x3092\x53d6\x5f97"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_IsPlaying()
	{
		struct SsPlayerComponent_eventIsPlaying_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsPlaying"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(SsPlayerComponent_eventIsPlaying_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SsPlayerComponent_eventIsPlaying_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SsPlayerComponent_eventIsPlaying_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SsPlayerComponent_eventIsPlaying_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x304c\x518d\x751f\x4e2d\x304b\x3092\x53d6\x5f97"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_IsRoundTrip()
	{
		struct SsPlayerComponent_eventIsRoundTrip_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsRoundTrip"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(SsPlayerComponent_eventIsRoundTrip_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SsPlayerComponent_eventIsRoundTrip_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SsPlayerComponent_eventIsRoundTrip_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SsPlayerComponent_eventIsRoundTrip_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x5f80\x5fa9\x518d\x751f\x4e2d\x304b\x3092\x53d6\x5f97"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_Pause()
	{
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Pause"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x518d\x751f\x306e\x4e00\x6642\x505c\x6b62"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_Play()
	{
		struct SsPlayerComponent_eventPlay_Parms
		{
			FName AnimPackName;
			FName AnimationName;
			int32 StartFrame;
			float PlayRate;
			int32 LoopCount;
			bool bRoundTrip;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Play"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerComponent_eventPlay_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SsPlayerComponent_eventPlay_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SsPlayerComponent_eventPlay_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SsPlayerComponent_eventPlay_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bRoundTrip, SsPlayerComponent_eventPlay_Parms, bool);
			UProperty* NewProp_bRoundTrip = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bRoundTrip"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bRoundTrip, SsPlayerComponent_eventPlay_Parms), 0x0000040000000080, CPP_BOOL_PROPERTY_BITMASK(bRoundTrip, SsPlayerComponent_eventPlay_Parms), sizeof(bool), true);
			UProperty* NewProp_LoopCount = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LoopCount"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(LoopCount, SsPlayerComponent_eventPlay_Parms), 0x0000040000000080);
			UProperty* NewProp_PlayRate = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayRate"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(PlayRate, SsPlayerComponent_eventPlay_Parms), 0x0000040000000080);
			UProperty* NewProp_StartFrame = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("StartFrame"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(StartFrame, SsPlayerComponent_eventPlay_Parms), 0x0000040000000080);
			UProperty* NewProp_AnimationName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimationName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(AnimationName, SsPlayerComponent_eventPlay_Parms), 0x0000000000000080);
			UProperty* NewProp_AnimPackName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimPackName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(AnimPackName, SsPlayerComponent_eventPlay_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AdvancedDisplay"), TEXT("2"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bRoundTrip"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_LoopCount"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_PlayRate"), TEXT("1.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_StartFrame"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x306e\x518d\x751f\x958b\x59cb"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_PlayByIndex()
	{
		struct SsPlayerComponent_eventPlayByIndex_Parms
		{
			int32 AnimPackIndex;
			int32 AnimationIndex;
			int32 StartFrame;
			float PlayRate;
			int32 LoopCount;
			bool bRoundTrip;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PlayByIndex"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerComponent_eventPlayByIndex_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SsPlayerComponent_eventPlayByIndex_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SsPlayerComponent_eventPlayByIndex_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SsPlayerComponent_eventPlayByIndex_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bRoundTrip, SsPlayerComponent_eventPlayByIndex_Parms, bool);
			UProperty* NewProp_bRoundTrip = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bRoundTrip"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bRoundTrip, SsPlayerComponent_eventPlayByIndex_Parms), 0x0000040000000080, CPP_BOOL_PROPERTY_BITMASK(bRoundTrip, SsPlayerComponent_eventPlayByIndex_Parms), sizeof(bool), true);
			UProperty* NewProp_LoopCount = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LoopCount"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(LoopCount, SsPlayerComponent_eventPlayByIndex_Parms), 0x0000040000000080);
			UProperty* NewProp_PlayRate = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayRate"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(PlayRate, SsPlayerComponent_eventPlayByIndex_Parms), 0x0000040000000080);
			UProperty* NewProp_StartFrame = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("StartFrame"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(StartFrame, SsPlayerComponent_eventPlayByIndex_Parms), 0x0000040000000080);
			UProperty* NewProp_AnimationIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimationIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AnimationIndex, SsPlayerComponent_eventPlayByIndex_Parms), 0x0000000000000080);
			UProperty* NewProp_AnimPackIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimPackIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AnimPackIndex, SsPlayerComponent_eventPlayByIndex_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AdvancedDisplay"), TEXT("2"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bRoundTrip"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_LoopCount"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_PlayRate"), TEXT("1.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_StartFrame"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x306e\x518d\x751f\x958b\x59cb(\x30a4\x30f3\x30c7\x30c3\x30af\x30b9\x6307\x5b9a)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_RemoveTextureReplacement()
	{
		struct SsPlayerComponent_eventRemoveTextureReplacement_Parms
		{
			FName PartName;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RemoveTextureReplacement"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerComponent_eventRemoveTextureReplacement_Parms));
			UProperty* NewProp_PartName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PartName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(PartName, SsPlayerComponent_eventRemoveTextureReplacement_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x7f6e\x304d\x63db\x3048\x30c6\x30af\x30b9\x30c1\x30e3\x306e\x767b\x9332\x89e3\x9664"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_RemoveTextureReplacementAll()
	{
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RemoveTextureReplacementAll"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x5168\x3066\x306e\x7f6e\x304d\x63db\x3048\x30c6\x30af\x30b9\x30c1\x30e3\x306e\x767b\x9332\x89e3\x9664"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_RemoveTextureReplacementByIndex()
	{
		struct SsPlayerComponent_eventRemoveTextureReplacementByIndex_Parms
		{
			int32 PartIndex;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RemoveTextureReplacementByIndex"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerComponent_eventRemoveTextureReplacementByIndex_Parms));
			UProperty* NewProp_PartIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PartIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(PartIndex, SsPlayerComponent_eventRemoveTextureReplacementByIndex_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x7f6e\x304d\x63db\x3048\x30c6\x30af\x30b9\x30c1\x30e3\x306e\x767b\x9332\x89e3\x9664(\x30a4\x30f3\x30c7\x30c3\x30af\x30b9\x6307\x5b9a)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_Resume()
	{
		struct SsPlayerComponent_eventResume_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Resume"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerComponent_eventResume_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SsPlayerComponent_eventResume_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SsPlayerComponent_eventResume_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SsPlayerComponent_eventResume_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x4e00\x6642\x505c\x6b62\x3057\x305f\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x518d\x751f\x306e\x518d\x958b"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_SetFlipH()
	{
		struct SsPlayerComponent_eventSetFlipH_Parms
		{
			bool InFlipH;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetFlipH"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerComponent_eventSetFlipH_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(InFlipH, SsPlayerComponent_eventSetFlipH_Parms, bool);
			UProperty* NewProp_InFlipH = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InFlipH"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(InFlipH, SsPlayerComponent_eventSetFlipH_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(InFlipH, SsPlayerComponent_eventSetFlipH_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x6c34\x5e73\x53cd\x8ee2\x306e\x8a2d\x5b9a"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_SetFlipV()
	{
		struct SsPlayerComponent_eventSetFlipV_Parms
		{
			bool InFlipV;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetFlipV"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerComponent_eventSetFlipV_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(InFlipV, SsPlayerComponent_eventSetFlipV_Parms, bool);
			UProperty* NewProp_InFlipV = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InFlipV"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(InFlipV, SsPlayerComponent_eventSetFlipV_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(InFlipV, SsPlayerComponent_eventSetFlipV_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x5782\x76f4\x53cd\x8ee2\x306e\x8a2d\x5b9a"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_SetLoopCount()
	{
		struct SsPlayerComponent_eventSetLoopCount_Parms
		{
			int32 InLoopCount;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetLoopCount"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerComponent_eventSetLoopCount_Parms));
			UProperty* NewProp_InLoopCount = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InLoopCount"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(InLoopCount, SsPlayerComponent_eventSetLoopCount_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x30eb\x30fc\x30d7\x6570\x3092\x8a2d\x5b9a(0\x3067\x7121\x9650\x30eb\x30fc\x30d7)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_SetPlayFrame()
	{
		struct SsPlayerComponent_eventSetPlayFrame_Parms
		{
			float Frame;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetPlayFrame"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerComponent_eventSetPlayFrame_Parms));
			UProperty* NewProp_Frame = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Frame"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Frame, SsPlayerComponent_eventSetPlayFrame_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x6307\x5b9a\x30d5\x30ec\x30fc\x30e0\x3078\x30b8\x30e3\x30f3\x30d7"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_SetPlayRate()
	{
		struct SsPlayerComponent_eventSetPlayRate_Parms
		{
			float InRate;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetPlayRate"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerComponent_eventSetPlayRate_Parms));
			UProperty* NewProp_InRate = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InRate"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(InRate, SsPlayerComponent_eventSetPlayRate_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_InRate"), TEXT("1.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x518d\x751f\x901f\x5ea6\x3092\x8a2d\x5b9a(\x8ca0\x306e\x5024\x3067\x9006\x518d\x751f)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_SetRoundTrip()
	{
		struct SsPlayerComponent_eventSetRoundTrip_Parms
		{
			bool bInRoundTrip;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetRoundTrip"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerComponent_eventSetRoundTrip_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bInRoundTrip, SsPlayerComponent_eventSetRoundTrip_Parms, bool);
			UProperty* NewProp_bInRoundTrip = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bInRoundTrip"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bInRoundTrip, SsPlayerComponent_eventSetRoundTrip_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bInRoundTrip, SsPlayerComponent_eventSetRoundTrip_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x5f80\x5fa9\x518d\x751f\x3059\x308b\x304b\x3092\x8a2d\x5b9a"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerComponent_UpdatePlayer()
	{
		struct SsPlayerComponent_eventUpdatePlayer_Parms
		{
			float DeltaSeconds;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UpdatePlayer"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerComponent_eventUpdatePlayer_Parms));
			UProperty* NewProp_DeltaSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaSeconds"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(DeltaSeconds, SsPlayerComponent_eventUpdatePlayer_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x306e\x66f4\x65b0\nAutoUpdate=false \x306e\x5834\x5408\x306f\x3053\x306e\x95a2\x6570\x3092\x76f4\x63a5\x547c\x3073\x51fa\x3057\x3066\x4e0b\x3055\x3044"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_USsPlayerComponent_NoRegister()
	{
		return USsPlayerComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_USsPlayerComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMeshComponent();
			Z_Construct_UPackage_SpriteStudio5();
			OuterClass = USsPlayerComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;

				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_AddTextureReplacement());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_AddTextureReplacementByIndex());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_GetFlipH());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_GetFlipV());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_GetLoopCount());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_GetNumAnimations());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_GetNumAnimationsByIndex());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_GetNumAnimPacks());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_GetPartAttachTransform());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_GetPartColorLabel());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_GetPartColorLabelByIndex());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_GetPlayFrame());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_GetPlayingAnimationIndex());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_GetPlayingAnimationName());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_GetPlayRate());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_GetRenderTarget());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_IsPlaying());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_IsRoundTrip());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_Pause());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_Play());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_PlayByIndex());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_RemoveTextureReplacement());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_RemoveTextureReplacementAll());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_RemoveTextureReplacementByIndex());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_Resume());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_SetFlipH());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_SetFlipV());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_SetLoopCount());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_SetPlayFrame());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_SetPlayRate());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_SetRoundTrip());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerComponent_UpdatePlayer());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OnSsUserData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnSsUserData"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnSsUserData, USsPlayerComponent), 0x0000000010080000, Z_Construct_UDelegateFunction_SpriteStudio5_SsUserDataSignature__DelegateSignature());
				UProperty* NewProp_OnSsEndPlay = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnSsEndPlay"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnSsEndPlay, USsPlayerComponent), 0x0000000010080000, Z_Construct_UDelegateFunction_SpriteStudio5_SsEndPlaySignature__DelegateSignature());
				UProperty* NewProp_SsBoundsScale = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SsBoundsScale"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(SsBoundsScale, USsPlayerComponent), 0x0000000000000015);
				UProperty* NewProp_UUPerPixel = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UUPerPixel"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(UUPerPixel, USsPlayerComponent), 0x0000000000000015);
				UProperty* NewProp_OffScreenRenderResolution = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OffScreenRenderResolution"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(OffScreenRenderResolution, USsPlayerComponent), 0x0000000000000015, Z_Construct_UScriptStruct_FVector2D());
				UProperty* NewProp_OffScreenPlaneMID = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OffScreenPlaneMID"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OffScreenPlaneMID, USsPlayerComponent), 0x0000000000002014, Z_Construct_UClass_UMaterialInstanceDynamic_NoRegister());
				UProperty* NewProp_BaseMaterial = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseMaterial"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BaseMaterial, USsPlayerComponent), 0x0000000000000015, Z_Construct_UClass_UMaterialInterface_NoRegister());
				UProperty* NewProp_RenderMode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RenderMode"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(RenderMode, USsPlayerComponent), 0x0000000000000015, Z_Construct_UEnum_SpriteStudio5_ESsPlayerComponentRenderMode());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoPlayFlipV, USsPlayerComponent, bool);
				UProperty* NewProp_bAutoPlayFlipV = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutoPlayFlipV"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoPlayFlipV, USsPlayerComponent), 0x0000040000000015, CPP_BOOL_PROPERTY_BITMASK(bAutoPlayFlipV, USsPlayerComponent), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoPlayFlipH, USsPlayerComponent, bool);
				UProperty* NewProp_bAutoPlayFlipH = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutoPlayFlipH"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoPlayFlipH, USsPlayerComponent), 0x0000040000000015, CPP_BOOL_PROPERTY_BITMASK(bAutoPlayFlipH, USsPlayerComponent), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoPlayRoundTrip, USsPlayerComponent, bool);
				UProperty* NewProp_bAutoPlayRoundTrip = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutoPlayRoundTrip"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoPlayRoundTrip, USsPlayerComponent), 0x0000040000000015, CPP_BOOL_PROPERTY_BITMASK(bAutoPlayRoundTrip, USsPlayerComponent), sizeof(bool), true);
				UProperty* NewProp_AutoPlayLoopCount = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutoPlayLoopCount"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AutoPlayLoopCount, USsPlayerComponent), 0x0000040000000015);
				UProperty* NewProp_AutoPlayRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutoPlayRate"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(AutoPlayRate, USsPlayerComponent), 0x0000040000000015);
				UProperty* NewProp_AutoPlayStartFrame = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutoPlayStartFrame"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AutoPlayStartFrame, USsPlayerComponent), 0x0000040000000015);
				UProperty* NewProp_AutoPlayAnimationIndex = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutoPlayAnimationIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AutoPlayAnimationIndex, USsPlayerComponent), 0x0000000000000015);
				UProperty* NewProp_AutoPlayAnimPackIndex = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutoPlayAnimPackIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AutoPlayAnimPackIndex, USsPlayerComponent), 0x0000000000000015);
				UProperty* NewProp_AutoPlayAnimationName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutoPlayAnimationName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(AutoPlayAnimationName, USsPlayerComponent), 0x0000000000000015);
				UProperty* NewProp_AutoPlayAnimPackName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutoPlayAnimPackName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(AutoPlayAnimPackName, USsPlayerComponent), 0x0000000000000015);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoPlay, USsPlayerComponent, bool);
				UProperty* NewProp_bAutoPlay = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutoPlay"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoPlay, USsPlayerComponent), 0x0000000000000015, CPP_BOOL_PROPERTY_BITMASK(bAutoPlay, USsPlayerComponent), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoUpdate, USsPlayerComponent, bool);
				UProperty* NewProp_bAutoUpdate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutoUpdate"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoUpdate, USsPlayerComponent), 0x0000000000000015, CPP_BOOL_PROPERTY_BITMASK(bAutoUpdate, USsPlayerComponent), sizeof(bool), true);
				UProperty* NewProp_SsProject = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SsProject"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SsProject, USsPlayerComponent), 0x0000000000000015, Z_Construct_UClass_USsProject_NoRegister());
				UProperty* NewProp_BasePartsMaterials = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BasePartsMaterials"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BasePartsMaterials, USsPlayerComponent), 0x0000000000002000, Z_Construct_UClass_UMaterialInterface_NoRegister());
				NewProp_BasePartsMaterials->ArrayDim = CPP_ARRAY_DIM(BasePartsMaterials, USsPlayerComponent);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_AddTextureReplacement()); // 2868130596
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_AddTextureReplacementByIndex()); // 2343163220
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_GetFlipH()); // 113705324
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_GetFlipV()); // 4161150388
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_GetLoopCount()); // 2739170702
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_GetNumAnimations()); // 976157878
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_GetNumAnimationsByIndex()); // 2185927739
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_GetNumAnimPacks()); // 4001980254
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_GetPartAttachTransform()); // 2367128271
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_GetPartColorLabel()); // 661823189
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_GetPartColorLabelByIndex()); // 1861167842
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_GetPlayFrame()); // 500743973
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_GetPlayingAnimationIndex()); // 2470732565
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_GetPlayingAnimationName()); // 3091921081
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_GetPlayRate()); // 2139291988
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_GetRenderTarget()); // 1700159985
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_IsPlaying()); // 2254608203
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_IsRoundTrip()); // 2302168079
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_Pause()); // 224064384
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_Play()); // 3026783923
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_PlayByIndex()); // 4115822086
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_RemoveTextureReplacement()); // 939684671
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_RemoveTextureReplacementAll()); // 4215389366
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_RemoveTextureReplacementByIndex()); // 337816203
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_Resume()); // 2295544506
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_SetFlipH()); // 2325304188
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_SetFlipV()); // 664552387
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_SetLoopCount()); // 912998733
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_SetPlayFrame()); // 3015196215
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_SetPlayRate()); // 1073556510
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_SetRoundTrip()); // 3481132504
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerComponent_UpdatePlayer()); // 1424533982
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("SpriteStudio"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Mobility Trigger ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Component/SsPlayerComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("SpriteStudio5 Player Component\nsspj\x30c7\x30fc\x30bf\x3092\x518d\x751f/\x63cf\x753b\x3059\x308b"));
				MetaData->SetValue(NewProp_OnSsUserData, TEXT("Category"), TEXT("SpriteStudioCallback"));
				MetaData->SetValue(NewProp_OnSsUserData, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
				MetaData->SetValue(NewProp_OnSsUserData, TEXT("ToolTip"), TEXT("\x30e6\x30fc\x30b6\x30fc\x30c7\x30fc\x30bf\x30a4\x30d9\x30f3\x30c8"));
				MetaData->SetValue(NewProp_OnSsEndPlay, TEXT("Category"), TEXT("SpriteStudioCallback"));
				MetaData->SetValue(NewProp_OnSsEndPlay, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
				MetaData->SetValue(NewProp_OnSsEndPlay, TEXT("ToolTip"), TEXT("\x518d\x751f\x7d42\x4e86\x30a4\x30d9\x30f3\x30c8"));
				MetaData->SetValue(NewProp_SsBoundsScale, TEXT("Category"), TEXT("SpriteStudioRenderSettings"));
				MetaData->SetValue(NewProp_SsBoundsScale, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
				MetaData->SetValue(NewProp_SsBoundsScale, TEXT("ToolTip"), TEXT("\x30ab\x30ea\x30f3\x30b0\x7528\x534a\x5f84\x3078\x306e\x4fc2\x6570\n\x30d1\x30fc\x30c4\x304c\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x306e\x30ad\x30e3\x30f3\x30d0\x30b9\x7bc4\x56f2\x5916\x3078\x52d5\x304f\x5834\x5408\x306f\x3001\x3053\x306e\x30b9\x30b1\x30fc\x30eb\x3092\x8a2d\x5b9a\x3057\x3066\x4e0b\x3055\x3044\n\x63cf\x753b\x30e2\x30fc\x30c9\x304cOffScreenPlane\x306e\x5834\x5408\x306f\x7121\x8996\x3055\x308c\x307e\x3059"));
				MetaData->SetValue(NewProp_UUPerPixel, TEXT("Category"), TEXT("SpriteStudioRenderSettings"));
				MetaData->SetValue(NewProp_UUPerPixel, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
				MetaData->SetValue(NewProp_UUPerPixel, TEXT("ToolTip"), TEXT("\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x306e")TEXT("Canvas\x30b5\x30a4\x30ba\x306b\x5bfe\x3059\x308b\x3001\x30e1\x30c3\x30b7\x30e5\x63cf\x753b\x30b5\x30a4\x30ba"));
				MetaData->SetValue(NewProp_OffScreenRenderResolution, TEXT("Category"), TEXT("SpriteStudioRenderSettings"));
				MetaData->SetValue(NewProp_OffScreenRenderResolution, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
				MetaData->SetValue(NewProp_OffScreenRenderResolution, TEXT("ToolTip"), TEXT("\x30aa\x30d5\x30b9\x30af\x30ea\x30fc\x30f3\x30ec\x30f3\x30c0\x30ea\x30f3\x30b0\x306e\x969b\x306e\x89e3\x50cf\x5ea6"));
				MetaData->SetValue(NewProp_OffScreenPlaneMID, TEXT("Category"), TEXT("SsPlayerComponent"));
				MetaData->SetValue(NewProp_OffScreenPlaneMID, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
				MetaData->SetValue(NewProp_OffScreenPlaneMID, TEXT("ToolTip"), TEXT("OffScreenPlane\x7528MID"));
				MetaData->SetValue(NewProp_BaseMaterial, TEXT("Category"), TEXT("SpriteStudioRenderSettings"));
				MetaData->SetValue(NewProp_BaseMaterial, TEXT("DisplayThumbnail"), TEXT("true"));
				MetaData->SetValue(NewProp_BaseMaterial, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
				MetaData->SetValue(NewProp_BaseMaterial, TEXT("ToolTip"), TEXT("\x63cf\x753b\x30e2\x30fc\x30c9\x304cOffScreenPlane\x306e\x5834\x5408\x306e\x3001\x30e1\x30c3\x30b7\x30e5\x3092\x63cf\x753b\x3059\x308b\x969b\x306e\x30d9\x30fc\x30b9\x30de\x30c6\x30ea\x30a2\x30eb"));
				MetaData->SetValue(NewProp_RenderMode, TEXT("Category"), TEXT("SpriteStudioRenderSettings"));
				MetaData->SetValue(NewProp_RenderMode, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
				MetaData->SetValue(NewProp_RenderMode, TEXT("ToolTip"), TEXT("\x63cf\x753b\x30e2\x30fc\x30c9"));
				MetaData->SetValue(NewProp_bAutoPlayFlipV, TEXT("Category"), TEXT("SpriteStudioPlaySettings"));
				MetaData->SetValue(NewProp_bAutoPlayFlipV, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
				MetaData->SetValue(NewProp_bAutoPlayFlipV, TEXT("ToolTip"), TEXT("\x81ea\x52d5\x518d\x751f\x6642\x306e\x5782\x76f4\x53cd\x8ee2"));
				MetaData->SetValue(NewProp_bAutoPlayFlipH, TEXT("Category"), TEXT("SpriteStudioPlaySettings"));
				MetaData->SetValue(NewProp_bAutoPlayFlipH, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
				MetaData->SetValue(NewProp_bAutoPlayFlipH, TEXT("ToolTip"), TEXT("\x81ea\x52d5\x518d\x751f\x6642\x306e\x6c34\x5e73\x53cd\x8ee2"));
				MetaData->SetValue(NewProp_bAutoPlayRoundTrip, TEXT("Category"), TEXT("SpriteStudioPlaySettings"));
				MetaData->SetValue(NewProp_bAutoPlayRoundTrip, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
				MetaData->SetValue(NewProp_bAutoPlayRoundTrip, TEXT("ToolTip"), TEXT("\x81ea\x52d5\x518d\x751f\x6642\x306e\x5f80\x5fa9\x518d\x751f"));
				MetaData->SetValue(NewProp_AutoPlayLoopCount, TEXT("Category"), TEXT("SpriteStudioPlaySettings"));
				MetaData->SetValue(NewProp_AutoPlayLoopCount, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
				MetaData->SetValue(NewProp_AutoPlayLoopCount, TEXT("ToolTip"), TEXT("\x81ea\x52d5\x518d\x751f\x6642\x306e\x30eb\x30fc\x30d7\x56de\x6570(0\x3067\x7121\x9650\x30eb\x30fc\x30d7)"));
				MetaData->SetValue(NewProp_AutoPlayRate, TEXT("Category"), TEXT("SpriteStudioPlaySettings"));
				MetaData->SetValue(NewProp_AutoPlayRate, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
				MetaData->SetValue(NewProp_AutoPlayRate, TEXT("ToolTip"), TEXT("\x81ea\x52d5\x518d\x751f\x6642\x306e\x518d\x751f\x901f\x5ea6(\x8ca0\x306e\x5024\x3067\x9006\x518d\x751f)"));
				MetaData->SetValue(NewProp_AutoPlayStartFrame, TEXT("Category"), TEXT("SpriteStudioPlaySettings"));
				MetaData->SetValue(NewProp_AutoPlayStartFrame, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
				MetaData->SetValue(NewProp_AutoPlayStartFrame, TEXT("ToolTip"), TEXT("\x81ea\x52d5\x518d\x751f\x6642\x306e\x958b\x59cb\x30d5\x30ec\x30fc\x30e0"));
				MetaData->SetValue(NewProp_AutoPlayAnimationIndex, TEXT("Category"), TEXT("SpriteStudioPlaySettings"));
				MetaData->SetValue(NewProp_AutoPlayAnimationIndex, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
				MetaData->SetValue(NewProp_AutoPlayAnimationIndex, TEXT("ToolTip"), TEXT("\x81ea\x52d5\x518d\x751f\x6642\x306e")TEXT("AnimationIndex"));
				MetaData->SetValue(NewProp_AutoPlayAnimPackIndex, TEXT("Category"), TEXT("SpriteStudioPlaySettings"));
				MetaData->SetValue(NewProp_AutoPlayAnimPackIndex, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
				MetaData->SetValue(NewProp_AutoPlayAnimPackIndex, TEXT("ToolTip"), TEXT("\x81ea\x52d5\x518d\x751f\x6642\x306e")TEXT("AnimPackIndex"));
				MetaData->SetValue(NewProp_AutoPlayAnimationName, TEXT("Category"), TEXT("SpriteStudioPlaySettings"));
				MetaData->SetValue(NewProp_AutoPlayAnimationName, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
				MetaData->SetValue(NewProp_AutoPlayAnimationName, TEXT("ToolTip"), TEXT("\x81ea\x52d5\x518d\x751f\x6642\x306e")TEXT("Animation\x540d"));
				MetaData->SetValue(NewProp_AutoPlayAnimPackName, TEXT("Category"), TEXT("SpriteStudioPlaySettings"));
				MetaData->SetValue(NewProp_AutoPlayAnimPackName, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
				MetaData->SetValue(NewProp_AutoPlayAnimPackName, TEXT("ToolTip"), TEXT("\x81ea\x52d5\x518d\x751f\x6642\x306e")TEXT("AnimPack\x540d"));
				MetaData->SetValue(NewProp_bAutoPlay, TEXT("Category"), TEXT("SpriteStudioPlaySettings"));
				MetaData->SetValue(NewProp_bAutoPlay, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
				MetaData->SetValue(NewProp_bAutoPlay, TEXT("ToolTip"), TEXT("\x81ea\x52d5\x518d\x751f"));
				MetaData->SetValue(NewProp_bAutoUpdate, TEXT("Category"), TEXT("SpriteStudioPlaySettings"));
				MetaData->SetValue(NewProp_bAutoUpdate, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
				MetaData->SetValue(NewProp_bAutoUpdate, TEXT("ToolTip"), TEXT("\x81ea\x52d5\x66f4\x65b0. Off\x306e\x5834\x5408\x306fUpdatePlayer()\x3092\x547c\x3073\x51fa\x3057\x3066\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x3092\x66f4\x65b0\x3057\x307e\x3059."));
				MetaData->SetValue(NewProp_SsProject, TEXT("Category"), TEXT("SpriteStudioAsset"));
				MetaData->SetValue(NewProp_SsProject, TEXT("DisplayThumbnail"), TEXT("true"));
				MetaData->SetValue(NewProp_SsProject, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
				MetaData->SetValue(NewProp_SsProject, TEXT("ToolTip"), TEXT("\x518d\x751f\x3059\x308bSsProject"));
				MetaData->SetValue(NewProp_BasePartsMaterials, TEXT("ModuleRelativePath"), TEXT("Public/Component/SsPlayerComponent.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USsPlayerComponent(Z_Construct_UClass_USsPlayerComponent, TEXT("USsPlayerComponent"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USsPlayerComponent);
	UFunction* Z_Construct_UDelegateFunction_SpriteStudio5_SsWidgetUserDataSignature__DelegateSignature()
	{
		struct _Script_SpriteStudio5_eventSsWidgetUserDataSignature_Parms
		{
			FName PartName;
			int32 PartIndex;
			int32 KeyFrame;
			FSsUserDataValue UserData;
		};
		UObject* Outer=Z_Construct_UPackage_SpriteStudio5();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsWidgetUserDataSignature__DelegateSignature"), RF_Public|RF_Transient|RF_Native) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_SpriteStudio5_eventSsWidgetUserDataSignature_Parms));
			UProperty* NewProp_UserData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UserData"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(UserData, _Script_SpriteStudio5_eventSsWidgetUserDataSignature_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FSsUserDataValue());
			UProperty* NewProp_KeyFrame = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("KeyFrame"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(KeyFrame, _Script_SpriteStudio5_eventSsWidgetUserDataSignature_Parms), 0x0000000000000080);
			UProperty* NewProp_PartIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PartIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(PartIndex, _Script_SpriteStudio5_eventSsWidgetUserDataSignature_Parms), 0x0000000000000080);
			UProperty* NewProp_PartName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PartName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(PartName, _Script_SpriteStudio5_eventSsWidgetUserDataSignature_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_SpriteStudio5_SsWidgetEndPlaySignature__DelegateSignature()
	{
		struct _Script_SpriteStudio5_eventSsWidgetEndPlaySignature_Parms
		{
			FName AnimPackName;
			FName AnimationName;
			int32 AnimPackIndex;
			int32 AnimationIndex;
		};
		UObject* Outer=Z_Construct_UPackage_SpriteStudio5();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsWidgetEndPlaySignature__DelegateSignature"), RF_Public|RF_Transient|RF_Native) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_SpriteStudio5_eventSsWidgetEndPlaySignature_Parms));
			UProperty* NewProp_AnimationIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimationIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AnimationIndex, _Script_SpriteStudio5_eventSsWidgetEndPlaySignature_Parms), 0x0000000000000080);
			UProperty* NewProp_AnimPackIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimPackIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AnimPackIndex, _Script_SpriteStudio5_eventSsWidgetEndPlaySignature_Parms), 0x0000000000000080);
			UProperty* NewProp_AnimationName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimationName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(AnimationName, _Script_SpriteStudio5_eventSsWidgetEndPlaySignature_Parms), 0x0000000000000080);
			UProperty* NewProp_AnimPackName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimPackName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(AnimPackName, _Script_SpriteStudio5_eventSsWidgetEndPlaySignature_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_AddTextureReplacement()
	{
		struct SsPlayerWidget_eventAddTextureReplacement_Parms
		{
			FName PartName;
			UTexture* Texture;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AddTextureReplacement"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerWidget_eventAddTextureReplacement_Parms));
			UProperty* NewProp_Texture = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Texture"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Texture, SsPlayerWidget_eventAddTextureReplacement_Parms), 0x0000000000000080, Z_Construct_UClass_UTexture_NoRegister());
			UProperty* NewProp_PartName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PartName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(PartName, SsPlayerWidget_eventAddTextureReplacement_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x7f6e\x304d\x63db\x3048\x30c6\x30af\x30b9\x30c1\x30e3\x306e\x767b\x9332"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_AddTextureReplacementByIndex()
	{
		struct SsPlayerWidget_eventAddTextureReplacementByIndex_Parms
		{
			int32 PartIndex;
			UTexture* Texture;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AddTextureReplacementByIndex"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerWidget_eventAddTextureReplacementByIndex_Parms));
			UProperty* NewProp_Texture = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Texture"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Texture, SsPlayerWidget_eventAddTextureReplacementByIndex_Parms), 0x0000000000000080, Z_Construct_UClass_UTexture_NoRegister());
			UProperty* NewProp_PartIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PartIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(PartIndex, SsPlayerWidget_eventAddTextureReplacementByIndex_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x7f6e\x304d\x63db\x3048\x30c6\x30af\x30b9\x30c1\x30e3\x306e\x767b\x9332(\x30a4\x30f3\x30c7\x30c3\x30af\x30b9\x6307\x5b9a)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_GetFlipH()
	{
		struct SsPlayerWidget_eventGetFlipH_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetFlipH"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(SsPlayerWidget_eventGetFlipH_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SsPlayerWidget_eventGetFlipH_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SsPlayerWidget_eventGetFlipH_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SsPlayerWidget_eventGetFlipH_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x6c34\x5e73\x53cd\x8ee2\x306e\x53d6\x5f97"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_GetFlipV()
	{
		struct SsPlayerWidget_eventGetFlipV_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetFlipV"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(SsPlayerWidget_eventGetFlipV_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SsPlayerWidget_eventGetFlipV_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SsPlayerWidget_eventGetFlipV_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SsPlayerWidget_eventGetFlipV_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x5782\x76f4\x53cd\x8ee2\x306e\x53d6\x5f97"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_GetLoopCount()
	{
		struct SsPlayerWidget_eventGetLoopCount_Parms
		{
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetLoopCount"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(SsPlayerWidget_eventGetLoopCount_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, SsPlayerWidget_eventGetLoopCount_Parms), 0x0000000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x6b8b\x308a\x30eb\x30fc\x30d7\x6570\x3092\x53d6\x5f97"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_GetNumAnimations()
	{
		struct SsPlayerWidget_eventGetNumAnimations_Parms
		{
			FName AnimPackName;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetNumAnimations"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(SsPlayerWidget_eventGetNumAnimations_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, SsPlayerWidget_eventGetNumAnimations_Parms), 0x0000000000000580);
			UProperty* NewProp_AnimPackName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimPackName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(AnimPackName, SsPlayerWidget_eventGetNumAnimations_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x6307\x5b9a\x3055\x308c\x305f")TEXT("AnimPack\x306e")TEXT("Animation\x6570\x3092\x53d6\x5f97"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_GetNumAnimationsByIndex()
	{
		struct SsPlayerWidget_eventGetNumAnimationsByIndex_Parms
		{
			int32 AnimPackIndex;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetNumAnimationsByIndex"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(SsPlayerWidget_eventGetNumAnimationsByIndex_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, SsPlayerWidget_eventGetNumAnimationsByIndex_Parms), 0x0000000000000580);
			UProperty* NewProp_AnimPackIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimPackIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AnimPackIndex, SsPlayerWidget_eventGetNumAnimationsByIndex_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x6307\x5b9a\x3055\x308c\x305f")TEXT("AnimPack\x306e")TEXT("Animation\x6570\x3092\x53d6\x5f97(\x30a4\x30f3\x30c7\x30c3\x30af\x30b9\x6307\x5b9a)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_GetNumAnimPacks()
	{
		struct SsPlayerWidget_eventGetNumAnimPacks_Parms
		{
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetNumAnimPacks"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(SsPlayerWidget_eventGetNumAnimPacks_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, SsPlayerWidget_eventGetNumAnimPacks_Parms), 0x0000000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x30bb\x30c3\x30c8\x3055\x308c\x305fSsProject\x306e")TEXT("AnimPack\x6570\x3092\x53d6\x5f97"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_GetPartColorLabel()
	{
		struct SsPlayerWidget_eventGetPartColorLabel_Parms
		{
			FName PartName;
			FName ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPartColorLabel"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerWidget_eventGetPartColorLabel_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(ReturnValue, SsPlayerWidget_eventGetPartColorLabel_Parms), 0x0000000000000580);
			UProperty* NewProp_PartName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PartName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(PartName, SsPlayerWidget_eventGetPartColorLabel_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x30d1\x30fc\x30c4\x306e\x30ab\x30e9\x30fc\x30e9\x30d9\x30eb\x3092\x53d6\x5f97"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_GetPartColorLabelByIndex()
	{
		struct SsPlayerWidget_eventGetPartColorLabelByIndex_Parms
		{
			int32 PartIndex;
			FName ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPartColorLabelByIndex"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerWidget_eventGetPartColorLabelByIndex_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(ReturnValue, SsPlayerWidget_eventGetPartColorLabelByIndex_Parms), 0x0000000000000580);
			UProperty* NewProp_PartIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PartIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(PartIndex, SsPlayerWidget_eventGetPartColorLabelByIndex_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x30d1\x30fc\x30c4\x306e\x30ab\x30e9\x30fc\x30e9\x30d9\x30eb\x3092\x53d6\x5f97(\x30a4\x30f3\x30c7\x30c3\x30af\x30b9\x6307\x5b9a)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_GetPlayFrame()
	{
		struct SsPlayerWidget_eventGetPlayFrame_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPlayFrame"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(SsPlayerWidget_eventGetPlayFrame_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SsPlayerWidget_eventGetPlayFrame_Parms), 0x0000000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x73fe\x5728\x306e\x30d5\x30ec\x30fc\x30e0\x3092\x53d6\x5f97"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_GetPlayingAnimationIndex()
	{
		struct SsPlayerWidget_eventGetPlayingAnimationIndex_Parms
		{
			int32 OutAnimPackIndex;
			int32 OutAnimationIndex;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPlayingAnimationIndex"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54420401, 65535, sizeof(SsPlayerWidget_eventGetPlayingAnimationIndex_Parms));
			UProperty* NewProp_OutAnimationIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutAnimationIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(OutAnimationIndex, SsPlayerWidget_eventGetPlayingAnimationIndex_Parms), 0x0000000000000180);
			UProperty* NewProp_OutAnimPackIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutAnimPackIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(OutAnimPackIndex, SsPlayerWidget_eventGetPlayingAnimationIndex_Parms), 0x0000000000000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x518d\x751f\x4e2d\x306e\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x30a4\x30f3\x30c7\x30c3\x30af\x30b9\x3092\x53d6\x5f97"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_GetPlayingAnimationName()
	{
		struct SsPlayerWidget_eventGetPlayingAnimationName_Parms
		{
			FName OutAnimPackName;
			FName OutAnimationName;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPlayingAnimationName"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54420401, 65535, sizeof(SsPlayerWidget_eventGetPlayingAnimationName_Parms));
			UProperty* NewProp_OutAnimationName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutAnimationName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(OutAnimationName, SsPlayerWidget_eventGetPlayingAnimationName_Parms), 0x0000000000000180);
			UProperty* NewProp_OutAnimPackName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutAnimPackName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(OutAnimPackName, SsPlayerWidget_eventGetPlayingAnimationName_Parms), 0x0000000000000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x518d\x751f\x4e2d\x306e\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x540d\x3092\x53d6\x5f97"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_GetPlayRate()
	{
		struct SsPlayerWidget_eventGetPlayRate_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPlayRate"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(SsPlayerWidget_eventGetPlayRate_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SsPlayerWidget_eventGetPlayRate_Parms), 0x0000000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x518d\x751f\x901f\x5ea6\x3092\x53d6\x5f97"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_IsPlaying()
	{
		struct SsPlayerWidget_eventIsPlaying_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsPlaying"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(SsPlayerWidget_eventIsPlaying_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SsPlayerWidget_eventIsPlaying_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SsPlayerWidget_eventIsPlaying_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SsPlayerWidget_eventIsPlaying_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x304c\x518d\x751f\x4e2d\x304b\x3092\x53d6\x5f97"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_IsRoundTrip()
	{
		struct SsPlayerWidget_eventIsRoundTrip_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsRoundTrip"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(SsPlayerWidget_eventIsRoundTrip_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SsPlayerWidget_eventIsRoundTrip_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SsPlayerWidget_eventIsRoundTrip_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SsPlayerWidget_eventIsRoundTrip_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x5f80\x5fa9\x518d\x751f\x4e2d\x304b\x3092\x53d6\x5f97"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_Pause()
	{
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Pause"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x518d\x751f\x306e\x4e00\x6642\x505c\x6b62"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_Play()
	{
		struct SsPlayerWidget_eventPlay_Parms
		{
			FName AnimPackName;
			FName AnimationName;
			int32 StartFrame;
			float PlayRate;
			int32 LoopCount;
			bool bRoundTrip;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Play"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerWidget_eventPlay_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SsPlayerWidget_eventPlay_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SsPlayerWidget_eventPlay_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SsPlayerWidget_eventPlay_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bRoundTrip, SsPlayerWidget_eventPlay_Parms, bool);
			UProperty* NewProp_bRoundTrip = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bRoundTrip"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bRoundTrip, SsPlayerWidget_eventPlay_Parms), 0x0000040000000080, CPP_BOOL_PROPERTY_BITMASK(bRoundTrip, SsPlayerWidget_eventPlay_Parms), sizeof(bool), true);
			UProperty* NewProp_LoopCount = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LoopCount"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(LoopCount, SsPlayerWidget_eventPlay_Parms), 0x0000040000000080);
			UProperty* NewProp_PlayRate = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayRate"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(PlayRate, SsPlayerWidget_eventPlay_Parms), 0x0000040000000080);
			UProperty* NewProp_StartFrame = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("StartFrame"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(StartFrame, SsPlayerWidget_eventPlay_Parms), 0x0000040000000080);
			UProperty* NewProp_AnimationName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimationName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(AnimationName, SsPlayerWidget_eventPlay_Parms), 0x0000000000000080);
			UProperty* NewProp_AnimPackName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimPackName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(AnimPackName, SsPlayerWidget_eventPlay_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AdvancedDisplay"), TEXT("2"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bRoundTrip"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_LoopCount"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_PlayRate"), TEXT("1.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_StartFrame"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x306e\x518d\x751f\x958b\x59cb"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_PlayByIndex()
	{
		struct SsPlayerWidget_eventPlayByIndex_Parms
		{
			int32 AnimPackIndex;
			int32 AnimationIndex;
			int32 StartFrame;
			float PlayRate;
			int32 LoopCount;
			bool bRoundTrip;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PlayByIndex"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerWidget_eventPlayByIndex_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SsPlayerWidget_eventPlayByIndex_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SsPlayerWidget_eventPlayByIndex_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SsPlayerWidget_eventPlayByIndex_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bRoundTrip, SsPlayerWidget_eventPlayByIndex_Parms, bool);
			UProperty* NewProp_bRoundTrip = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bRoundTrip"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bRoundTrip, SsPlayerWidget_eventPlayByIndex_Parms), 0x0000040000000080, CPP_BOOL_PROPERTY_BITMASK(bRoundTrip, SsPlayerWidget_eventPlayByIndex_Parms), sizeof(bool), true);
			UProperty* NewProp_LoopCount = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LoopCount"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(LoopCount, SsPlayerWidget_eventPlayByIndex_Parms), 0x0000040000000080);
			UProperty* NewProp_PlayRate = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayRate"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(PlayRate, SsPlayerWidget_eventPlayByIndex_Parms), 0x0000040000000080);
			UProperty* NewProp_StartFrame = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("StartFrame"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(StartFrame, SsPlayerWidget_eventPlayByIndex_Parms), 0x0000040000000080);
			UProperty* NewProp_AnimationIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimationIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AnimationIndex, SsPlayerWidget_eventPlayByIndex_Parms), 0x0000000000000080);
			UProperty* NewProp_AnimPackIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimPackIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AnimPackIndex, SsPlayerWidget_eventPlayByIndex_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AdvancedDisplay"), TEXT("2"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bRoundTrip"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_LoopCount"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_PlayRate"), TEXT("1.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_StartFrame"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x306e\x518d\x751f\x958b\x59cb(\x30a4\x30f3\x30c7\x30c3\x30af\x30b9\x6307\x5b9a)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_RemoveTextureReplacement()
	{
		struct SsPlayerWidget_eventRemoveTextureReplacement_Parms
		{
			FName PartName;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RemoveTextureReplacement"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerWidget_eventRemoveTextureReplacement_Parms));
			UProperty* NewProp_PartName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PartName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(PartName, SsPlayerWidget_eventRemoveTextureReplacement_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x7f6e\x304d\x63db\x3048\x30c6\x30af\x30b9\x30c1\x30e3\x306e\x767b\x9332\x89e3\x9664"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_RemoveTextureReplacementAll()
	{
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RemoveTextureReplacementAll"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x5168\x3066\x306e\x7f6e\x304d\x63db\x3048\x30c6\x30af\x30b9\x30c1\x30e3\x306e\x767b\x9332\x89e3\x9664"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_RemoveTextureReplacementByIndex()
	{
		struct SsPlayerWidget_eventRemoveTextureReplacementByIndex_Parms
		{
			int32 PartIndex;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RemoveTextureReplacementByIndex"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerWidget_eventRemoveTextureReplacementByIndex_Parms));
			UProperty* NewProp_PartIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PartIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(PartIndex, SsPlayerWidget_eventRemoveTextureReplacementByIndex_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x7f6e\x304d\x63db\x3048\x30c6\x30af\x30b9\x30c1\x30e3\x306e\x767b\x9332\x89e3\x9664(\x30a4\x30f3\x30c7\x30c3\x30af\x30b9\x6307\x5b9a)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_Resume()
	{
		struct SsPlayerWidget_eventResume_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Resume"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerWidget_eventResume_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, SsPlayerWidget_eventResume_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, SsPlayerWidget_eventResume_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, SsPlayerWidget_eventResume_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x4e00\x6642\x505c\x6b62\x3057\x305f\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x518d\x751f\x306e\x518d\x958b"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_SetFlipH()
	{
		struct SsPlayerWidget_eventSetFlipH_Parms
		{
			bool InFlipH;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetFlipH"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerWidget_eventSetFlipH_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(InFlipH, SsPlayerWidget_eventSetFlipH_Parms, bool);
			UProperty* NewProp_InFlipH = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InFlipH"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(InFlipH, SsPlayerWidget_eventSetFlipH_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(InFlipH, SsPlayerWidget_eventSetFlipH_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x6c34\x5e73\x53cd\x8ee2\x306e\x8a2d\x5b9a"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_SetFlipV()
	{
		struct SsPlayerWidget_eventSetFlipV_Parms
		{
			bool InFlipV;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetFlipV"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerWidget_eventSetFlipV_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(InFlipV, SsPlayerWidget_eventSetFlipV_Parms, bool);
			UProperty* NewProp_InFlipV = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InFlipV"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(InFlipV, SsPlayerWidget_eventSetFlipV_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(InFlipV, SsPlayerWidget_eventSetFlipV_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x5782\x76f4\x53cd\x8ee2\x306e\x8a2d\x5b9a"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_SetLoopCount()
	{
		struct SsPlayerWidget_eventSetLoopCount_Parms
		{
			int32 InLoopCount;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetLoopCount"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerWidget_eventSetLoopCount_Parms));
			UProperty* NewProp_InLoopCount = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InLoopCount"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(InLoopCount, SsPlayerWidget_eventSetLoopCount_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x30eb\x30fc\x30d7\x6570\x3092\x8a2d\x5b9a(0\x3067\x7121\x9650\x30eb\x30fc\x30d7)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_SetPlayFrame()
	{
		struct SsPlayerWidget_eventSetPlayFrame_Parms
		{
			float Frame;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetPlayFrame"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerWidget_eventSetPlayFrame_Parms));
			UProperty* NewProp_Frame = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Frame"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Frame, SsPlayerWidget_eventSetPlayFrame_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x6307\x5b9a\x30d5\x30ec\x30fc\x30e0\x3078\x30b8\x30e3\x30f3\x30d7"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_SetPlayRate()
	{
		struct SsPlayerWidget_eventSetPlayRate_Parms
		{
			float InRate;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetPlayRate"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerWidget_eventSetPlayRate_Parms));
			UProperty* NewProp_InRate = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InRate"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(InRate, SsPlayerWidget_eventSetPlayRate_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_InRate"), TEXT("1.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x518d\x751f\x901f\x5ea6\x3092\x8a2d\x5b9a(\x8ca0\x306e\x5024\x3067\x9006\x518d\x751f)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_SetRoundTrip()
	{
		struct SsPlayerWidget_eventSetRoundTrip_Parms
		{
			bool bInRoundTrip;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetRoundTrip"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerWidget_eventSetRoundTrip_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bInRoundTrip, SsPlayerWidget_eventSetRoundTrip_Parms, bool);
			UProperty* NewProp_bInRoundTrip = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bInRoundTrip"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bInRoundTrip, SsPlayerWidget_eventSetRoundTrip_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bInRoundTrip, SsPlayerWidget_eventSetRoundTrip_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x5f80\x5fa9\x518d\x751f\x3059\x308b\x304b\x3092\x8a2d\x5b9a"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsPlayerWidget_UpdatePlayer()
	{
		struct SsPlayerWidget_eventUpdatePlayer_Parms
		{
			float DeltaSeconds;
		};
		UObject* Outer=Z_Construct_UClass_USsPlayerWidget();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UpdatePlayer"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(SsPlayerWidget_eventUpdatePlayer_Parms));
			UProperty* NewProp_DeltaSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaSeconds"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(DeltaSeconds, SsPlayerWidget_eventUpdatePlayer_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x306e\x66f4\x65b0\nAutoUpdate=false \x306e\x5834\x5408\x306f\x3053\x306e\x95a2\x6570\x3092\x76f4\x63a5\x547c\x3073\x51fa\x3057\x3066\x4e0b\x3055\x3044"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_USsPlayerWidget_NoRegister()
	{
		return USsPlayerWidget::StaticClass();
	}
	UClass* Z_Construct_UClass_USsPlayerWidget()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UImage();
			Z_Construct_UPackage_SpriteStudio5();
			OuterClass = USsPlayerWidget::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_AddTextureReplacement());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_AddTextureReplacementByIndex());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_GetFlipH());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_GetFlipV());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_GetLoopCount());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_GetNumAnimations());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_GetNumAnimationsByIndex());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_GetNumAnimPacks());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_GetPartColorLabel());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_GetPartColorLabelByIndex());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_GetPlayFrame());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_GetPlayingAnimationIndex());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_GetPlayingAnimationName());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_GetPlayRate());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_IsPlaying());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_IsRoundTrip());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_Pause());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_Play());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_PlayByIndex());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_RemoveTextureReplacement());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_RemoveTextureReplacementAll());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_RemoveTextureReplacementByIndex());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_Resume());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_SetFlipH());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_SetFlipV());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_SetLoopCount());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_SetPlayFrame());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_SetPlayRate());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_SetRoundTrip());
				OuterClass->LinkChild(Z_Construct_UFunction_USsPlayerWidget_UpdatePlayer());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OnSsUserData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnSsUserData"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnSsUserData, USsPlayerWidget), 0x0000000010080000, Z_Construct_UDelegateFunction_SpriteStudio5_SsWidgetUserDataSignature__DelegateSignature());
				UProperty* NewProp_OnSsEndPlay = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnSsEndPlay"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnSsEndPlay, USsPlayerWidget), 0x0000000010080000, Z_Construct_UDelegateFunction_SpriteStudio5_SsWidgetEndPlaySignature__DelegateSignature());
				UProperty* NewProp_OffScreenRenderResolution = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OffScreenRenderResolution"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(OffScreenRenderResolution, USsPlayerWidget), 0x0000000000000015, Z_Construct_UScriptStruct_FVector2D());
				UProperty* NewProp_BaseMaterial = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseMaterial"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BaseMaterial, USsPlayerWidget), 0x0000000000000015, Z_Construct_UClass_UMaterialInterface_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoPlayRoundTrip, USsPlayerWidget, bool);
				UProperty* NewProp_bAutoPlayRoundTrip = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutoPlayRoundTrip"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoPlayRoundTrip, USsPlayerWidget), 0x0000040000000015, CPP_BOOL_PROPERTY_BITMASK(bAutoPlayRoundTrip, USsPlayerWidget), sizeof(bool), true);
				UProperty* NewProp_AutoPlayLoopCount = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutoPlayLoopCount"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AutoPlayLoopCount, USsPlayerWidget), 0x0000040000000015);
				UProperty* NewProp_AutoPlayRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutoPlayRate"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(AutoPlayRate, USsPlayerWidget), 0x0000040000000015);
				UProperty* NewProp_AutoPlayStartFrame = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutoPlayStartFrame"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AutoPlayStartFrame, USsPlayerWidget), 0x0000040000000015);
				UProperty* NewProp_AutoPlayAnimationIndex = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutoPlayAnimationIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AutoPlayAnimationIndex, USsPlayerWidget), 0x0000000000000015);
				UProperty* NewProp_AutoPlayAnimPackIndex = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutoPlayAnimPackIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AutoPlayAnimPackIndex, USsPlayerWidget), 0x0000000000000015);
				UProperty* NewProp_AutoPlayAnimationName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutoPlayAnimationName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(AutoPlayAnimationName, USsPlayerWidget), 0x0000000000000015);
				UProperty* NewProp_AutoPlayAnimPackName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutoPlayAnimPackName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(AutoPlayAnimPackName, USsPlayerWidget), 0x0000000000000015);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoPlay, USsPlayerWidget, bool);
				UProperty* NewProp_bAutoPlay = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutoPlay"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoPlay, USsPlayerWidget), 0x0000000000000015, CPP_BOOL_PROPERTY_BITMASK(bAutoPlay, USsPlayerWidget), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoUpdate, USsPlayerWidget, bool);
				UProperty* NewProp_bAutoUpdate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutoUpdate"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoUpdate, USsPlayerWidget), 0x0000000000000015, CPP_BOOL_PROPERTY_BITMASK(bAutoUpdate, USsPlayerWidget), sizeof(bool), true);
				UProperty* NewProp_SsProject = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SsProject"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SsProject, USsPlayerWidget), 0x0000000000000015, Z_Construct_UClass_USsProject_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_AddTextureReplacement()); // 3318003921
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_AddTextureReplacementByIndex()); // 1166335726
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_GetFlipH()); // 402565917
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_GetFlipV()); // 2967965876
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_GetLoopCount()); // 2740827404
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_GetNumAnimations()); // 1870000258
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_GetNumAnimationsByIndex()); // 1970975361
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_GetNumAnimPacks()); // 1461370518
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_GetPartColorLabel()); // 2328651
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_GetPartColorLabelByIndex()); // 2505140234
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_GetPlayFrame()); // 1495032427
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_GetPlayingAnimationIndex()); // 4161917044
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_GetPlayingAnimationName()); // 1754045759
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_GetPlayRate()); // 2064346250
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_IsPlaying()); // 152460304
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_IsRoundTrip()); // 3337109700
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_Pause()); // 1228319195
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_Play()); // 1094000099
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_PlayByIndex()); // 465193193
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_RemoveTextureReplacement()); // 2158570119
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_RemoveTextureReplacementAll()); // 3958683068
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_RemoveTextureReplacementByIndex()); // 1907852759
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_Resume()); // 1931299253
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_SetFlipH()); // 2796553727
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_SetFlipV()); // 3809617017
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_SetLoopCount()); // 882312189
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_SetPlayFrame()); // 3545504696
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_SetPlayRate()); // 1716043551
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_SetRoundTrip()); // 1742331871
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsPlayerWidget_UpdatePlayer()); // 1434385660
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("SpriteStudio"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("UMG/SsPlayerWidget.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("SpriteStudio5 Player Widget\nsspj\x30c7\x30fc\x30bf\x3092\x518d\x751f/UMG\x4e0a\x3067\x63cf\x753b\x3059\x308b"));
				MetaData->SetValue(NewProp_OnSsUserData, TEXT("Category"), TEXT("SpriteStudioCallback"));
				MetaData->SetValue(NewProp_OnSsUserData, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
				MetaData->SetValue(NewProp_OnSsUserData, TEXT("ToolTip"), TEXT("\x30e6\x30fc\x30b6\x30fc\x30c7\x30fc\x30bf\x30a4\x30d9\x30f3\x30c8"));
				MetaData->SetValue(NewProp_OnSsEndPlay, TEXT("Category"), TEXT("SpriteStudioCallback"));
				MetaData->SetValue(NewProp_OnSsEndPlay, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
				MetaData->SetValue(NewProp_OnSsEndPlay, TEXT("ToolTip"), TEXT("\x518d\x751f\x7d42\x4e86\x30a4\x30d9\x30f3\x30c8"));
				MetaData->SetValue(NewProp_OffScreenRenderResolution, TEXT("Category"), TEXT("SpriteStudioRenderSettings"));
				MetaData->SetValue(NewProp_OffScreenRenderResolution, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
				MetaData->SetValue(NewProp_OffScreenRenderResolution, TEXT("ToolTip"), TEXT("\x30aa\x30d5\x30b9\x30af\x30ea\x30fc\x30f3\x30ec\x30f3\x30c0\x30ea\x30f3\x30b0\x89e3\x50cf\x5ea6"));
				MetaData->SetValue(NewProp_BaseMaterial, TEXT("Category"), TEXT("SpriteStudioRenderSettings"));
				MetaData->SetValue(NewProp_BaseMaterial, TEXT("DisplayThumbnail"), TEXT("true"));
				MetaData->SetValue(NewProp_BaseMaterial, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
				MetaData->SetValue(NewProp_BaseMaterial, TEXT("ToolTip"), TEXT("\x30d9\x30fc\x30b9\x30de\x30c6\x30ea\x30a2\x30eb"));
				MetaData->SetValue(NewProp_bAutoPlayRoundTrip, TEXT("Category"), TEXT("SpriteStudioPlaySettings"));
				MetaData->SetValue(NewProp_bAutoPlayRoundTrip, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
				MetaData->SetValue(NewProp_bAutoPlayRoundTrip, TEXT("ToolTip"), TEXT("\x81ea\x52d5\x518d\x751f\x6642\x306e\x5f80\x5fa9\x518d\x751f"));
				MetaData->SetValue(NewProp_AutoPlayLoopCount, TEXT("Category"), TEXT("SpriteStudioPlaySettings"));
				MetaData->SetValue(NewProp_AutoPlayLoopCount, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
				MetaData->SetValue(NewProp_AutoPlayLoopCount, TEXT("ToolTip"), TEXT("\x81ea\x52d5\x518d\x751f\x6642\x306e\x30eb\x30fc\x30d7\x56de\x6570(0\x3067\x7121\x9650\x30eb\x30fc\x30d7)"));
				MetaData->SetValue(NewProp_AutoPlayRate, TEXT("Category"), TEXT("SpriteStudioPlaySettings"));
				MetaData->SetValue(NewProp_AutoPlayRate, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
				MetaData->SetValue(NewProp_AutoPlayRate, TEXT("ToolTip"), TEXT("\x81ea\x52d5\x518d\x751f\x6642\x306e\x518d\x751f\x901f\x5ea6(\x8ca0\x306e\x5024\x3067\x9006\x518d\x751f)"));
				MetaData->SetValue(NewProp_AutoPlayStartFrame, TEXT("Category"), TEXT("SpriteStudioPlaySettings"));
				MetaData->SetValue(NewProp_AutoPlayStartFrame, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
				MetaData->SetValue(NewProp_AutoPlayStartFrame, TEXT("ToolTip"), TEXT("\x81ea\x52d5\x518d\x751f\x6642\x306e\x958b\x59cb\x30d5\x30ec\x30fc\x30e0"));
				MetaData->SetValue(NewProp_AutoPlayAnimationIndex, TEXT("Category"), TEXT("SpriteStudioPlaySettings"));
				MetaData->SetValue(NewProp_AutoPlayAnimationIndex, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
				MetaData->SetValue(NewProp_AutoPlayAnimationIndex, TEXT("ToolTip"), TEXT("\x81ea\x52d5\x518d\x751f\x6642\x306e")TEXT("AnimationIndex"));
				MetaData->SetValue(NewProp_AutoPlayAnimPackIndex, TEXT("Category"), TEXT("SpriteStudioPlaySettings"));
				MetaData->SetValue(NewProp_AutoPlayAnimPackIndex, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
				MetaData->SetValue(NewProp_AutoPlayAnimPackIndex, TEXT("ToolTip"), TEXT("\x81ea\x52d5\x518d\x751f\x6642\x306e")TEXT("AnimPackIndex"));
				MetaData->SetValue(NewProp_AutoPlayAnimationName, TEXT("Category"), TEXT("SpriteStudioPlaySettings"));
				MetaData->SetValue(NewProp_AutoPlayAnimationName, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
				MetaData->SetValue(NewProp_AutoPlayAnimationName, TEXT("ToolTip"), TEXT("\x81ea\x52d5\x518d\x751f\x6642\x306e")TEXT("Animation\x540d"));
				MetaData->SetValue(NewProp_AutoPlayAnimPackName, TEXT("Category"), TEXT("SpriteStudioPlaySettings"));
				MetaData->SetValue(NewProp_AutoPlayAnimPackName, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
				MetaData->SetValue(NewProp_AutoPlayAnimPackName, TEXT("ToolTip"), TEXT("\x81ea\x52d5\x518d\x751f\x6642\x306e")TEXT("AnimPack\x540d"));
				MetaData->SetValue(NewProp_bAutoPlay, TEXT("Category"), TEXT("SpriteStudioPlaySettings"));
				MetaData->SetValue(NewProp_bAutoPlay, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
				MetaData->SetValue(NewProp_bAutoPlay, TEXT("ToolTip"), TEXT("\x81ea\x52d5\x518d\x751f"));
				MetaData->SetValue(NewProp_bAutoUpdate, TEXT("Category"), TEXT("SpriteStudioPlaySettings"));
				MetaData->SetValue(NewProp_bAutoUpdate, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
				MetaData->SetValue(NewProp_bAutoUpdate, TEXT("ToolTip"), TEXT("\x81ea\x52d5\x66f4\x65b0. Off\x306e\x5834\x5408\x306fUpdatePlayer()\x3092\x547c\x3073\x51fa\x3057\x3066\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x3092\x66f4\x65b0\x3057\x307e\x3059."));
				MetaData->SetValue(NewProp_SsProject, TEXT("Category"), TEXT("SpriteStudioAsset"));
				MetaData->SetValue(NewProp_SsProject, TEXT("DisplayThumbnail"), TEXT("true"));
				MetaData->SetValue(NewProp_SsProject, TEXT("ModuleRelativePath"), TEXT("Public/UMG/SsPlayerWidget.h"));
				MetaData->SetValue(NewProp_SsProject, TEXT("ToolTip"), TEXT("\x518d\x751f\x3059\x308bSsProject"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USsPlayerWidget(Z_Construct_UClass_USsPlayerWidget, TEXT("USsPlayerWidget"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USsPlayerWidget);
	UEnum* Z_Construct_UEnum_SpriteStudio5_SsRenderBlendType()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsRenderBlendType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("SsRenderBlendType"), 0, Get_Z_Construct_UEnum_SpriteStudio5_SsRenderBlendType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsRenderBlendType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsRenderBlendType::Mix")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsRenderBlendType::Add")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsRenderBlendType::Num")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsRenderBlendType::Invalid")), 254));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsRenderBlendType::SsRenderBlendType_MAX")), 255));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("\x30a8\x30d5\x30a7\x30af\x30c8\x306e\x30d6\x30ec\x30f3\x30c9\x30bf\x30a4\x30d7"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsRenderBlendType_CRC() { return 3938626680U; }
	UEnum* Z_Construct_UEnum_SpriteStudio5_SsEffectNodeType()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsEffectNodeType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("SsEffectNodeType"), 0, Get_Z_Construct_UEnum_SpriteStudio5_SsEffectNodeType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsEffectNodeType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEffectNodeType::Root")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEffectNodeType::Emmiter")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEffectNodeType::Particle")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEffectNodeType::Num")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEffectNodeType::Invalid")), 254));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEffectNodeType::SsEffectNodeType_MAX")), 255));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("\x30a8\x30d5\x30a7\x30af\x30c8\x306e\x30ce\x30fc\x30c9\x30bf\x30a4\x30d7"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsEffectNodeType_CRC() { return 3351677427U; }
	UEnum* Z_Construct_UEnum_SpriteStudio5_SsKeyValueType()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsKeyValueType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("SsKeyValueType"), 0, Get_Z_Construct_UEnum_SpriteStudio5_SsKeyValueType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsKeyValueType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsKeyValueType::Bool")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsKeyValueType::Float")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsKeyValueType::Int")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsKeyValueType::String")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsKeyValueType::Cellmap")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsKeyValueType::VertexAnime")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsKeyValueType::ColorAnime")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsKeyValueType::UserData")), 7));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsKeyValueType::Instance")), 8));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsKeyValueType::Unkown")), 254));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsKeyValueType::SsKeyValueType_MAX")), 255));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsTypes.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsKeyValueType_CRC() { return 2859364160U; }
	UEnum* Z_Construct_UEnum_SpriteStudio5_SsAttributeKind()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsAttributeKind_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("SsAttributeKind"), 0, Get_Z_Construct_UEnum_SpriteStudio5_SsAttributeKind_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsAttributeKind"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Cell")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Posx")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Posy")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Posz")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Rotx")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Roty")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Rotz")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Sclx")), 7));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Scly")), 8));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Alpha")), 9));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Prio")), 10));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Fliph")), 11));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Flipv")), 12));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Hide")), 13));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Color")), 14));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Vertex")), 15));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Pivotx")), 16));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Pivoty")), 17));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Anchorx")), 18));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Anchory")), 19));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Sizex")), 20));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Sizey")), 21));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Imgfliph")), 22));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Imgflipv")), 23));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Uvtx")), 24));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Uvty")), 25));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Uvrz")), 26));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Uvsx")), 27));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Uvsy")), 28));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Boundr")), 29));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::User")), 30));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Instance")), 31));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Num")), 32));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::Invalid")), 254));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsAttributeKind::SsAttributeKind_MAX")), 255));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Alpha.ToolTip"), TEXT("< [SCLY]\x30b9\x30b1\x30fc\x30eb.Y"));
			MetaData->SetValue(ReturnEnum, TEXT("Anchorx.ToolTip"), TEXT("< [PVTY]\x539f\x70b9\x30aa\x30d5\x30bb\x30c3\x30c8.Y"));
			MetaData->SetValue(ReturnEnum, TEXT("Anchory.ToolTip"), TEXT("< [ANCX]\x30a2\x30f3\x30ab\x30fc\x30dd\x30a4\x30f3\x30c8.X"));
			MetaData->SetValue(ReturnEnum, TEXT("Boundr.ToolTip"), TEXT("< [UVSY]UV\x30a2\x30cb\x30e1.\x30b9\x30b1\x30fc\x30eb.Y"));
			MetaData->SetValue(ReturnEnum, TEXT("Color.ToolTip"), TEXT("< [HIDE]\x975e\x8868\x793a"));
			MetaData->SetValue(ReturnEnum, TEXT("Fliph.ToolTip"), TEXT("< [PRIO]\x512a\x5148\x5ea6"));
			MetaData->SetValue(ReturnEnum, TEXT("Flipv.ToolTip"), TEXT("< [FLPH]\x5de6\x53f3\x53cd\x8ee2(\x30bb\x30eb\x306e\x539f\x70b9\x3092\x8ef8\x306b\x3059\x308b)"));
			MetaData->SetValue(ReturnEnum, TEXT("Hide.ToolTip"), TEXT("< [FLPV]\x4e0a\x4e0b\x53cd\x8ee2(\x30bb\x30eb\x306e\x539f\x70b9\x3092\x8ef8\x306b\x3059\x308b)"));
			MetaData->SetValue(ReturnEnum, TEXT("Imgfliph.ToolTip"), TEXT("< [SIZY]\x8868\x793a\x30b5\x30a4\x30ba.Y"));
			MetaData->SetValue(ReturnEnum, TEXT("Imgflipv.ToolTip"), TEXT("< [IFLH]\x30a4\x30e1\x30fc\x30b8\x5de6\x53f3\x53cd\x8ee2(\x5e38\x306b\x30a4\x30e1\x30fc\x30b8\x306e\x4e2d\x592e\x3092\x539f\x70b9\x3068\x3059\x308b)"));
			MetaData->SetValue(ReturnEnum, TEXT("Instance.ToolTip"), TEXT("< [USER]\x30e6\x30fc\x30b6\x30fc\x30c7\x30fc\x30bf"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Num.ToolTip"), TEXT("< [IPRM]\x30a4\x30f3\x30b9\x30bf\x30f3\x30b9\x30d1\x30fc\x30c4\x30d1\x30e9\x30e1\x30fc\x30bf"));
			MetaData->SetValue(ReturnEnum, TEXT("Pivotx.ToolTip"), TEXT("< [VERT]\x9802\x70b9\x5909\x5f62"));
			MetaData->SetValue(ReturnEnum, TEXT("Pivoty.ToolTip"), TEXT("< [PVTX]\x539f\x70b9\x30aa\x30d5\x30bb\x30c3\x30c8.X"));
			MetaData->SetValue(ReturnEnum, TEXT("Posx.ToolTip"), TEXT("< [CELL]\x53c2\x7167\x30bb\x30eb"));
			MetaData->SetValue(ReturnEnum, TEXT("Posy.ToolTip"), TEXT("< [POSX]\x4f4d\x7f6e.X"));
			MetaData->SetValue(ReturnEnum, TEXT("Posz.ToolTip"), TEXT("< [POSY]\x4f4d\x7f6e.Y"));
			MetaData->SetValue(ReturnEnum, TEXT("Prio.ToolTip"), TEXT("< [ALPH]\x4e0d\x900f\x660e\x5ea6"));
			MetaData->SetValue(ReturnEnum, TEXT("Rotx.ToolTip"), TEXT("< [POSZ]\x4f4d\x7f6e.Z"));
			MetaData->SetValue(ReturnEnum, TEXT("Roty.ToolTip"), TEXT("< [ROTX]\x56de\x8ee2.X"));
			MetaData->SetValue(ReturnEnum, TEXT("Rotz.ToolTip"), TEXT("< [ROTY]\x56de\x8ee2.Y"));
			MetaData->SetValue(ReturnEnum, TEXT("Sclx.ToolTip"), TEXT("< [ROTZ]\x56de\x8ee2.Z"));
			MetaData->SetValue(ReturnEnum, TEXT("Scly.ToolTip"), TEXT("< [SCLX]\x30b9\x30b1\x30fc\x30eb.X"));
			MetaData->SetValue(ReturnEnum, TEXT("Sizex.ToolTip"), TEXT("< [ANCY]\x30a2\x30f3\x30ab\x30fc\x30dd\x30a4\x30f3\x30c8.Y"));
			MetaData->SetValue(ReturnEnum, TEXT("Sizey.ToolTip"), TEXT("< [SIZX]\x8868\x793a\x30b5\x30a4\x30ba.X"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("\x30a2\x30c8\x30ea\x30d3\x30e5\x30fc\x30c8\x306e\x7a2e\x985e"));
			MetaData->SetValue(ReturnEnum, TEXT("User.ToolTip"), TEXT("< [BNDR]\x5f53\x305f\x308a\x5224\x5b9a\x7528\x306e\x534a\x5f84"));
			MetaData->SetValue(ReturnEnum, TEXT("Uvrz.ToolTip"), TEXT("< [UVTY]UV\x30a2\x30cb\x30e1.\x79fb\x52d5.Y"));
			MetaData->SetValue(ReturnEnum, TEXT("Uvsx.ToolTip"), TEXT("< [UVRZ]UV\x30a2\x30cb\x30e1.\x56de\x8ee2"));
			MetaData->SetValue(ReturnEnum, TEXT("Uvsy.ToolTip"), TEXT("< [UVSX]UV\x30a2\x30cb\x30e1.\x30b9\x30b1\x30fc\x30eb.X"));
			MetaData->SetValue(ReturnEnum, TEXT("Uvtx.ToolTip"), TEXT("< [IFLV]\x30a4\x30e1\x30fc\x30b8\x4e0a\x4e0b\x53cd\x8ee2(\x5e38\x306b\x30a4\x30e1\x30fc\x30b8\x306e\x4e2d\x592e\x3092\x539f\x70b9\x3068\x3059\x308b)"));
			MetaData->SetValue(ReturnEnum, TEXT("Uvty.ToolTip"), TEXT("< [UVTX]UV\x30a2\x30cb\x30e1.\x79fb\x52d5.X"));
			MetaData->SetValue(ReturnEnum, TEXT("Vertex.ToolTip"), TEXT("< [VCOL]\x30ab\x30e9\x30fc\x30d6\x30ec\x30f3\x30c9"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsAttributeKind_CRC() { return 3056842274U; }
	UEnum* Z_Construct_UEnum_SpriteStudio5_SsTexFilterMode()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsTexFilterMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("SsTexFilterMode"), 0, Get_Z_Construct_UEnum_SpriteStudio5_SsTexFilterMode_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsTexFilterMode"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsTexFilterMode::Nearest")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsTexFilterMode::Linear")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsTexFilterMode::Num")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsTexFilterMode::Invalid")), 254));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsTexFilterMode::SsTexFilterMode_MAX")), 255));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Linear.ToolTip"), TEXT("< \x30cb\x30a2\x30ec\x30b9\x30c8\x30cd\x30a4\x30d0\x30fc"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Num.ToolTip"), TEXT("< \x30ea\x30cb\x30a2\x3001\x30d0\x30a4\x30ea\x30cb\x30a2"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("\x30c6\x30af\x30b9\x30c1\x30e3\x30d5\x30a3\x30eb\x30bf\x30fc\x30e2\x30fc\x30c9 \x753b\x7d20\x88dc\x9593\x65b9\x6cd5"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsTexFilterMode_CRC() { return 1483715588U; }
	UEnum* Z_Construct_UEnum_SpriteStudio5_SsTexWrapMode()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsTexWrapMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("SsTexWrapMode"), 0, Get_Z_Construct_UEnum_SpriteStudio5_SsTexWrapMode_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsTexWrapMode"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsTexWrapMode::Clamp")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsTexWrapMode::Repeat")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsTexWrapMode::Mirror")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsTexWrapMode::Num")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsTexWrapMode::Invalid")), 254));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsTexWrapMode::SsTexWrapMode_MAX")), 255));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Mirror.ToolTip"), TEXT("\x30ea\x30d4\x30fc\x30c8"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Num.ToolTip"), TEXT("\x30df\x30e9\x30fc"));
			MetaData->SetValue(ReturnEnum, TEXT("Repeat.ToolTip"), TEXT("\x30af\x30e9\x30f3\x30d7\x3059\x308b"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("\x30c6\x30af\x30b9\x30c1\x30e3\x30e9\x30c3\x30d7\x30e2\x30fc\x30c9"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsTexWrapMode_CRC() { return 1997591042U; }
	UEnum* Z_Construct_UEnum_SpriteStudio5_SsInterpolationType()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsInterpolationType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("SsInterpolationType"), 0, Get_Z_Construct_UEnum_SpriteStudio5_SsInterpolationType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsInterpolationType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsInterpolationType::None")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsInterpolationType::Linear")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsInterpolationType::Hermite")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsInterpolationType::Bezier")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsInterpolationType::Acceleration")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsInterpolationType::Deceleration")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsInterpolationType::Num")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsInterpolationType::Invalid")), 254));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsInterpolationType::SsInterpolationType_MAX")), 255));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Acceleration.ToolTip"), TEXT("< \x30d9\x30b8\x30a7"));
			MetaData->SetValue(ReturnEnum, TEXT("Bezier.ToolTip"), TEXT("< \x30a8\x30eb\x30df\x30fc\x30c8"));
			MetaData->SetValue(ReturnEnum, TEXT("Deceleration.ToolTip"), TEXT("< \x52a0\x901f\x5ea6"));
			MetaData->SetValue(ReturnEnum, TEXT("Hermite.ToolTip"), TEXT("< \x7dda\x5f62"));
			MetaData->SetValue(ReturnEnum, TEXT("Linear.ToolTip"), TEXT("< \x306a\x3057"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Num.ToolTip"), TEXT("< \x6e1b\x901f\x5ea6"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("\x88dc\x9593\x30e2\x30fc\x30c9\x306e\x5b9a\x7fa9"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsInterpolationType_CRC() { return 3866479975U; }
	UEnum* Z_Construct_UEnum_SpriteStudio5_SsColorBlendTarget()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsColorBlendTarget_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("SsColorBlendTarget"), 0, Get_Z_Construct_UEnum_SpriteStudio5_SsColorBlendTarget_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsColorBlendTarget"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsColorBlendTarget::Whole")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsColorBlendTarget::Vertex")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsColorBlendTarget::Num")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsColorBlendTarget::Invalid")), 254));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsColorBlendTarget::SsColorBlendTarget_MAX")), 255));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Num.ToolTip"), TEXT("< \x9802\x70b9\x5358\x4f4d"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("\x30ab\x30e9\x30fc\x30d6\x30ec\x30f3\x30c9\x30ad\x30fc\x304c\x4f7f\x7528\x3055\x308c\x3066\x3044\x308b\x969b\x306e\x30ab\x30e9\x30fc\x9069\x7528\x7bc4\x56f2\x306e\x5b9a\x7fa9"));
			MetaData->SetValue(ReturnEnum, TEXT("Vertex.ToolTip"), TEXT("< \x5358\x8272\x3002\x5168\x4f53\x306b\x304b\x3051\x308b\x3002"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsColorBlendTarget_CRC() { return 1369609033U; }
	UEnum* Z_Construct_UEnum_SpriteStudio5_SsBlendType()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsBlendType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("SsBlendType"), 0, Get_Z_Construct_UEnum_SpriteStudio5_SsBlendType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsBlendType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsBlendType::Mix")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsBlendType::Mul")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsBlendType::Add")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsBlendType::Sub")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsBlendType::Effect")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsBlendType::Num")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsBlendType::Invalid")), 254));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsBlendType::SsBlendType_MAX")), 255));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Add.ToolTip"), TEXT("< 1 \x4e57\x7b97"));
			MetaData->SetValue(ReturnEnum, TEXT("Effect.ToolTip"), TEXT("< 3 \x6e1b\x7b97"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Mul.ToolTip"), TEXT("< 0 \x30d6\x30ec\x30f3\x30c9\xff08\x30df\x30c3\x30af\x30b9\xff09"));
			MetaData->SetValue(ReturnEnum, TEXT("Num.ToolTip"), TEXT("\x30a8\x30d5\x30a7\x30af\x30c8\x7528\x30ab\x30e9\x30fc\x30d6\x30ec\x30f3\x30c9\x30bf\x30a4\x30d7"));
			MetaData->SetValue(ReturnEnum, TEXT("Sub.ToolTip"), TEXT("< 2 \x52a0\x7b97"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("\x30d6\x30ec\x30f3\x30c9\x30bf\x30a4\x30d7"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsBlendType_CRC() { return 900580443U; }
	UEnum* Z_Construct_UEnum_SpriteStudio5_SsInheritType()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsInheritType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("SsInheritType"), 0, Get_Z_Construct_UEnum_SpriteStudio5_SsInheritType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsInheritType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsInheritType::Parent")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsInheritType::Self")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsInheritType::Num")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsInheritType::Invalid")), 254));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsInheritType::SsInheritType_MAX")), 255));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Num.ToolTip"), TEXT("< \x81ea\x8eab\x304c\x30a2\x30c8\x30ea\x30d3\x30e5\x30fc\x30c8\x5225\x306b\x6301\x3064\x7d99\x627f\x65b9\x6cd5\x3092\x4f7f\x3046"));
			MetaData->SetValue(ReturnEnum, TEXT("Self.ToolTip"), TEXT("< \x89aa\x306e\x7d99\x627f\x65b9\x6cd5\x3092\x305d\x306e\x307e\x307e\x5f15\x304d\x7d99\x3050"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("\x7d99\x627f\x30bf\x30a4\x30d7"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsInheritType_CRC() { return 1113121307U; }
	UEnum* Z_Construct_UEnum_SpriteStudio5_SsBoundsType()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsBoundsType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("SsBoundsType"), 0, Get_Z_Construct_UEnum_SpriteStudio5_SsBoundsType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsBoundsType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsBoundsType::None")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsBoundsType::Quad")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsBoundsType::Aabb")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsBoundsType::Circle")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsBoundsType::CircleSmin")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsBoundsType::CircleSmax")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsBoundsType::Num")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsBoundsType::Invalid")), 254));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsBoundsType::SsBoundsType_MAX")), 255));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Aabb.ToolTip"), TEXT("< \x81ea\x5728\x306b\x5909\x5f62\x3059\x308b\x56db\x8fba\x5f62\x3002\x9802\x70b9\x5909\x5f62\x306a\x3069\x9069\x7528\x5f8c\x306e\xff14\x89d2\x3092\x7d50\x3093\x3060\x9818\x57df\x3002\x6700\x3082\x91cd\x3044\x3002"));
			MetaData->SetValue(ReturnEnum, TEXT("Circle.ToolTip"), TEXT("< \x56de\x8ee2\x3057\x306a\x3044\x5168\x4f53\x3092\x56f2\x3080\x77e9\x5f62\x3067\x4ea4\x5dee\x5224\x5b9a"));
			MetaData->SetValue(ReturnEnum, TEXT("CircleSmax.ToolTip"), TEXT("< \x771f\x5186\x306e\x534a\x5f84\x3067\x8ddd\x96e2\x306b\x3088\x308a\x5224\x5b9a\x3059\x308b (\x30b9\x30b1\x30fc\x30eb\x306fx,y\x306e\x6700\x5c0f\x5024\x3092\x3068\x308b\xff09"));
			MetaData->SetValue(ReturnEnum, TEXT("CircleSmin.ToolTip"), TEXT("< \x771f\x5186\x306e\x534a\x5f84\x3067\x8ddd\x96e2\x306b\x3088\x308a\x5224\x5b9a\x3059\x308b"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Num.ToolTip"), TEXT("< \x771f\x5186\x306e\x534a\x5f84\x3067\x8ddd\x96e2\x306b\x3088\x308a\x5224\x5b9a\x3059\x308b (\x30b9\x30b1\x30fc\x30eb\x306fx,y\x306e\x6700\x5927\x5024\x3092\x3068\x308b\xff09"));
			MetaData->SetValue(ReturnEnum, TEXT("Quad.ToolTip"), TEXT("< \x5f53\x305f\x308a\x5224\x5b9a\x3068\x3057\x3066\x4f7f\x308f\x306a\x3044\x3002"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("\x5f53\x305f\x308a\x5224\x5b9a\x5f62\x72b6"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsBoundsType_CRC() { return 2645471033U; }
	UEnum* Z_Construct_UEnum_SpriteStudio5_SsPartType()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsPartType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("SsPartType"), 0, Get_Z_Construct_UEnum_SpriteStudio5_SsPartType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsPartType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsPartType::Null")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsPartType::Normal")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsPartType::Text")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsPartType::Instance")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsPartType::Effect")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsPartType::Num")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsPartType::Invalid")), 254));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsPartType::SsPartType_MAX")), 255));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Effect.ToolTip"), TEXT("< \x30a4\x30f3\x30b9\x30bf\x30f3\x30b9\x3002\x4ed6\x30a2\x30cb\x30e1\x3001\x30d1\x30fc\x30c4\x3078\x306e\x53c2\x7167\x3002\x30b7\x30fc\x30f3\x7de8\x96c6\x30e2\x30fc\x30c9\x306e\x4ee3\x66ff\x306b\x306a\x308b\x3082\x306e"));
			MetaData->SetValue(ReturnEnum, TEXT("Instance.ToolTip"), TEXT("< \x30c6\x30ad\x30b9\x30c8(\x4e88\x7d04\x3000\x672a\x5b9f\x88c5\xff09"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Normal.ToolTip"), TEXT("< null\x3002\x9818\x57df\x3092\x6301\x305f\x305aSRT\x60c5\x5831\x306e\x307f\x3002\x305f\x3060\x3057\x5186\x5f62\x306e\x5f53\x305f\x308a\x5224\x5b9a\x306f\x8a2d\x5b9a\x53ef\x80fd\x3002"));
			MetaData->SetValue(ReturnEnum, TEXT("Num.ToolTip"), TEXT("< \x30a8\x30d5\x30a7\x30af\x30c8"));
			MetaData->SetValue(ReturnEnum, TEXT("Text.ToolTip"), TEXT("< \x901a\x5e38\x30d1\x30fc\x30c4\x3002\x9818\x57df\x3092\x6301\x3064\x3002\x753b\x50cf\x306f\x7121\x304f\x3066\x3082\x3044\x3044\x3002"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Animation Part Type"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsPartType_CRC() { return 1617425919U; }
	UEnum* Z_Construct_UEnum_SpriteStudio5_SsPartsSortMode()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsPartsSortMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("SsPartsSortMode"), 0, Get_Z_Construct_UEnum_SpriteStudio5_SsPartsSortMode_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsPartsSortMode"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsPartsSortMode::Prio")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsPartsSortMode::Z")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsPartsSortMode::Num")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsPartsSortMode::Invalid")), 254));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsPartsSortMode::SsPartsSortMode_MAX")), 255));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Num.ToolTip"), TEXT("< \x63cf\x753b\x9806\x306f\xff3a\x5ea7\x6a19\x3067\x5236\x5fa1\x3059\x308b\x3002\xff3a\x5ea7\x6a19\x3092\x8868\x793a\x3057\x3001\x512a\x5148\x5ea6\x3092\x96a0\x3059\x3002"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("\x30bd\x30fc\x30c8\x30e2\x30fc\x30c9"));
			MetaData->SetValue(ReturnEnum, TEXT("Z.ToolTip"), TEXT("< \x63cf\x753b\x9806\x306f\x512a\x5148\x5ea6\x3067\x5236\x5fa1\x3059\x308b\x3002\x512a\x5148\x5ea6\x3092\x8868\x793a\x3057\x3001\xff3a\x5ea7\x6a19\x3092\x96a0\x3059\x3002"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsPartsSortMode_CRC() { return 1572626746U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsCurve()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsCurve_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsCurve"), sizeof(FSsCurve), Get_Z_Construct_UScriptStruct_FSsCurve_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsCurve"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSsCurve>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SyncStartEnd, FSsCurve, bool);
			UProperty* NewProp_SyncStartEnd = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SyncStartEnd"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SyncStartEnd, FSsCurve), 0x0000000000020015, CPP_BOOL_PROPERTY_BITMASK(SyncStartEnd, FSsCurve), sizeof(bool), true);
			UProperty* NewProp_EndKeyTime = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EndKeyTime"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(EndKeyTime, FSsCurve), 0x0000000000020015);
			UProperty* NewProp_StartKeyTime = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("StartKeyTime"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(StartKeyTime, FSsCurve), 0x0000000000020015);
			UProperty* NewProp_EndValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EndValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(EndValue, FSsCurve), 0x0000000000020015);
			UProperty* NewProp_EndTime = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EndTime"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(EndTime, FSsCurve), 0x0000000000020015);
			UProperty* NewProp_StartValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("StartValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(StartValue, FSsCurve), 0x0000000000020015);
			UProperty* NewProp_StartTime = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("StartTime"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(StartTime, FSsCurve), 0x0000000000020015);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("\x66f2\x7dda\x88dc\x9593\x8a08\x7b97\x7528\x30d1\x30e9\x30e1\x30fc\x30bf"));
			MetaData->SetValue(NewProp_SyncStartEnd, TEXT("Category"), TEXT("SsCurve"));
			MetaData->SetValue(NewProp_SyncStartEnd, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsTypes.h"));
			MetaData->SetValue(NewProp_SyncStartEnd, TEXT("ToolTip"), TEXT("< [\x30ef\x30fc\x30af\x30d1\x30e9\x30e1\x30fc\x30bf] \x7d42\x70b9\x30ad\x30fc\x306e\x6642\x9593 \x8a08\x7b97\x6642\x306e\x307f\x4f7f\x7528"));
			MetaData->SetValue(NewProp_EndKeyTime, TEXT("Category"), TEXT("SsCurve"));
			MetaData->SetValue(NewProp_EndKeyTime, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsTypes.h"));
			MetaData->SetValue(NewProp_EndKeyTime, TEXT("ToolTip"), TEXT("< [\x30ef\x30fc\x30af\x30d1\x30e9\x30e1\x30fc\x30bf] \x59cb\x70b9\x30ad\x30fc\x306e\x6642\x9593 \x8a08\x7b97\x6642\x306e\x307f\x4f7f\x7528"));
			MetaData->SetValue(NewProp_StartKeyTime, TEXT("Category"), TEXT("SsCurve"));
			MetaData->SetValue(NewProp_StartKeyTime, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsTypes.h"));
			MetaData->SetValue(NewProp_StartKeyTime, TEXT("ToolTip"), TEXT("< \x7d42\x70b9\x30ad\x30fc\x306e\x5024\x304b\x3089      \x3003       \x3002\xff39\x8ef8     \x3003"));
			MetaData->SetValue(NewProp_EndValue, TEXT("Category"), TEXT("SsCurve"));
			MetaData->SetValue(NewProp_EndValue, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsTypes.h"));
			MetaData->SetValue(NewProp_EndValue, TEXT("ToolTip"), TEXT("< \x7d42\x70b9\x30ad\x30fc\x306e\x6642\x9593\x304b\x3089\x5236\x5fa1\x70b9\x306e\x6642\x9593\x3078\x306e\x30aa\x30d5\x30bb\x30c3\x30c8\x5024\x3002\xff38\x8ef8\x306b\x5f53\x305f\x308b\x3002"));
			MetaData->SetValue(NewProp_EndTime, TEXT("Category"), TEXT("SsCurve"));
			MetaData->SetValue(NewProp_EndTime, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsTypes.h"));
			MetaData->SetValue(NewProp_EndTime, TEXT("ToolTip"), TEXT("< \x59cb\x70b9\x30ad\x30fc\x306e\x5024\x304b\x3089      \x3003       \x3002\xff39\x8ef8     \x3003"));
			MetaData->SetValue(NewProp_StartValue, TEXT("Category"), TEXT("SsCurve"));
			MetaData->SetValue(NewProp_StartValue, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsTypes.h"));
			MetaData->SetValue(NewProp_StartValue, TEXT("ToolTip"), TEXT("< \x59cb\x70b9\x30ad\x30fc\x306e\x6642\x9593\x304b\x3089\x5236\x5fa1\x70b9\x306e\x6642\x9593\x3078\x306e\x30aa\x30d5\x30bb\x30c3\x30c8\x5024\x3002\xff38\x8ef8\x306b\x5f53\x305f\x308b\x3002"));
			MetaData->SetValue(NewProp_StartTime, TEXT("Category"), TEXT("SsCurve"));
			MetaData->SetValue(NewProp_StartTime, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsCurve_CRC() { return 3064957715U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsU8Color()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsU8Color_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsU8Color"), sizeof(FSsU8Color), Get_Z_Construct_UScriptStruct_FSsU8Color_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsU8Color"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSsU8Color>, EStructFlags(0x00000001));
			UProperty* NewProp_A = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("A"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(A, FSsU8Color), 0x0000000000000001);
			UProperty* NewProp_B = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("B"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(B, FSsU8Color), 0x0000000000000001);
			UProperty* NewProp_G = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("G"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(G, FSsU8Color), 0x0000000000000001);
			UProperty* NewProp_R = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("R"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(R, FSsU8Color), 0x0000000000000001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("uisigned char\x3067\x306e\x30ab\x30e9\x30fc\x5024\x5b9a\x7fa9\ntypedef TSsColor<uint8> SsU8Color;"));
			MetaData->SetValue(NewProp_A, TEXT("Category"), TEXT("SsU8Color"));
			MetaData->SetValue(NewProp_A, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsTypes.h"));
			MetaData->SetValue(NewProp_B, TEXT("Category"), TEXT("SsU8Color"));
			MetaData->SetValue(NewProp_B, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsTypes.h"));
			MetaData->SetValue(NewProp_G, TEXT("Category"), TEXT("SsU8Color"));
			MetaData->SetValue(NewProp_G, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsTypes.h"));
			MetaData->SetValue(NewProp_R, TEXT("Category"), TEXT("SsU8Color"));
			MetaData->SetValue(NewProp_R, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsU8Color_CRC() { return 274309229U; }
	UEnum* Z_Construct_UEnum_SpriteStudio5_SsValueType()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsValueType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("SsValueType"), 0, Get_Z_Construct_UEnum_SpriteStudio5_SsValueType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsValueType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsValueType::Unkown")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsValueType::StringType")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsValueType::IntType")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsValueType::FloatType")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsValueType::BooleanType")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsValueType::HashType")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsValueType::ArrayType")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsValueType::SsValueType_MAX")), 7));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsValue.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsValueType_CRC() { return 3124217515U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsValue()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsValue_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsValue"), sizeof(FSsValue), Get_Z_Construct_UScriptStruct_FSsValue_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsValue"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSsValue>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Bool_temp, FSsValue, bool);
			UProperty* NewProp_Bool_temp = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Bool_temp"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Bool_temp, FSsValue), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(Bool_temp, FSsValue), sizeof(bool), true);
			UProperty* NewProp_Float_temp = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Float_temp"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Float_temp, FSsValue), 0x0000000000000000);
			UProperty* NewProp_Int_temp = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Int_temp"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Int_temp, FSsValue), 0x0000000000000000);
			UProperty* NewProp_ValueName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ValueName"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ValueName, FSsValue), 0x0000000000020015);
			UProperty* NewProp_Type = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Type"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Type, FSsValue), 0x0000000000020015, Z_Construct_UEnum_SpriteStudio5_SsValueType());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsValue.h"));
			MetaData->SetValue(NewProp_Bool_temp, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsValue.h"));
			MetaData->SetValue(NewProp_Float_temp, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsValue.h"));
			MetaData->SetValue(NewProp_Int_temp, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsValue.h"));
			MetaData->SetValue(NewProp_ValueName, TEXT("Category"), TEXT("SsValue"));
			MetaData->SetValue(NewProp_ValueName, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsValue.h"));
			MetaData->SetValue(NewProp_Type, TEXT("Category"), TEXT("SsValue"));
			MetaData->SetValue(NewProp_Type, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsValue.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsValue_CRC() { return 2669623244U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsAttribute()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsAttribute_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsAttribute"), sizeof(FSsAttribute), Get_Z_Construct_UScriptStruct_FSsAttribute_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsAttribute"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSsAttribute>, EStructFlags(0x00000201));
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Key, FSsAttribute), 0x0000000000020015);
			UProperty* NewProp_Key_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Key, TEXT("Key"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000020000, Z_Construct_UScriptStruct_FSsKeyframe());
			UProperty* NewProp_Tag = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Tag"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Tag, FSsAttribute), 0x0000000000020015, Z_Construct_UEnum_SpriteStudio5_SsAttributeKind());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAttribute.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("\x30bf\x30b0\x6bce\x306b\x5b58\x5728\x3059\x308b\x30ad\x30fc\x30d5\x30ec\x30fc\x30e0\x3092\x683c\x7d0d\x3059\x308b\x30af\x30e9\x30b9\nTag\x6bce\x306b\x5b58\x5728\x3059\x308b"));
			MetaData->SetValue(NewProp_Key, TEXT("Category"), TEXT("SsAttribute"));
			MetaData->SetValue(NewProp_Key, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAttribute.h"));
			MetaData->SetValue(NewProp_Tag, TEXT("Category"), TEXT("SsAttribute"));
			MetaData->SetValue(NewProp_Tag, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAttribute.h"));
			MetaData->SetValue(NewProp_Tag, TEXT("ToolTip"), TEXT("\x30ad\x30fc\x30d5\x30ec\x30fc\x30e0\x30c7\x30fc\x30bf : Value\xff08\x30bf\x30b0\x306b\x3088\x3063\x3066\x7570\x306a\x308b\x306e\x7d44\x307f)"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsAttribute_CRC() { return 1667490542U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsKeyframe()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsKeyframe_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsKeyframe"), sizeof(FSsKeyframe), Get_Z_Construct_UScriptStruct_FSsKeyframe_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsKeyframe"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSsKeyframe>, EStructFlags(0x00000201));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Value, FSsKeyframe), 0x0000000000020015, Z_Construct_UScriptStruct_FSsValue());
			UProperty* NewProp_Curve = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Curve"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Curve, FSsKeyframe), 0x0000000000020015, Z_Construct_UScriptStruct_FSsCurve());
			UProperty* NewProp_IpType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("IpType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(IpType, FSsKeyframe), 0x0000000000020015, Z_Construct_UEnum_SpriteStudio5_SsInterpolationType());
			UProperty* NewProp_Time = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Time"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Time, FSsKeyframe), 0x0000000000020015);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAttribute.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x4e2d\x306e\x30ad\x30fc\x30d5\x30ec\x30fc\x30e0\x306e\x5185\x5bb9\x3092\x8868\x73fe\x3059\x308b\x30af\x30e9\x30b9"));
			MetaData->SetValue(NewProp_Value, TEXT("Category"), TEXT("SsKeyframe"));
			MetaData->SetValue(NewProp_Value, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAttribute.h"));
			MetaData->SetValue(NewProp_Value, TEXT("ToolTip"), TEXT("< \x66f2\x7dda\x88dc\x9593\x8a08\x7b97\x7528\x30d1\x30e9\x30e1\x30fc\x30bf"));
			MetaData->SetValue(NewProp_Curve, TEXT("Category"), TEXT("SsKeyframe"));
			MetaData->SetValue(NewProp_Curve, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAttribute.h"));
			MetaData->SetValue(NewProp_Curve, TEXT("ToolTip"), TEXT("< \x88dc\x9593\x30bf\x30a4\x30d7"));
			MetaData->SetValue(NewProp_IpType, TEXT("Category"), TEXT("SsKeyframe"));
			MetaData->SetValue(NewProp_IpType, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAttribute.h"));
			MetaData->SetValue(NewProp_IpType, TEXT("ToolTip"), TEXT("< \x6642\x9593"));
			MetaData->SetValue(NewProp_Time, TEXT("Category"), TEXT("SsKeyframe"));
			MetaData->SetValue(NewProp_Time, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAttribute.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsKeyframe_CRC() { return 2540262723U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsAnimePack()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsAnimePack_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsAnimePack"), sizeof(FSsAnimePack), Get_Z_Construct_UScriptStruct_FSsAnimePack_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsAnimePack"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSsAnimePack>, EStructFlags(0x00000201));
			UProperty* NewProp_AnimeList = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AnimeList"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(AnimeList, FSsAnimePack), 0x0000000000020015);
			UProperty* NewProp_AnimeList_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AnimeList, TEXT("AnimeList"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000020000, Z_Construct_UScriptStruct_FSsAnimation());
			UProperty* NewProp_CellmapNames = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CellmapNames"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(CellmapNames, FSsAnimePack), 0x0000000000020015);
			UProperty* NewProp_CellmapNames_Inner = new(EC_InternalUseOnlyConstructor, NewProp_CellmapNames, TEXT("CellmapNames"), RF_Public|RF_Transient|RF_Native) UNameProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000020000);
			UProperty* NewProp_Model = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Model"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Model, FSsAnimePack), 0x0000000000020015, Z_Construct_UScriptStruct_FSsModel());
			UProperty* NewProp_AnimePackName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AnimePackName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(AnimePackName, FSsAnimePack), 0x0000000000020015);
			UProperty* NewProp_Settings = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Settings"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Settings, FSsAnimePack), 0x0000000000020015, Z_Construct_UScriptStruct_FSsAnimationSettings());
			UProperty* NewProp_Version = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Version"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Version, FSsAnimePack), 0x0000000000020015);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("@class SsAnimePack\n@brief \x30d1\x30fc\x30c4\x3092\x7d44\x307f\x5408\x308f\x305b\x305f\x69cb\x9020\x3068\x305d\x306e\x69cb\x9020\x3092\x4f7f\x7528\x3059\x308b\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x3092\x683c\x7d0d\x3059\x308b\x30c7\x30fc\x30bf\x3067\x3059\x3002\n\x30d1\x30fc\x30c4\x306e\x7d44\x307f\x5408\x308f\x305b\x69cb\x9020\x3092SsModel\x3001Model\x3092\x4f7f\x7528\x3059\x308b\x30a2\x30cb\x30e1\x30c7\x30fc\x30bf\x3092SsAnimation\x3067\x5b9a\x7fa9\x3057\x3066\x3044\x307e\x3059\x3002"));
			MetaData->SetValue(NewProp_AnimeList, TEXT("Category"), TEXT("SsAnimePack"));
			MetaData->SetValue(NewProp_AnimeList, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_AnimeList, TEXT("ToolTip"), TEXT("!< \x4f7f\x7528\x3055\x308c\x3066\x3044\x308b\x30bb\x30eb\x30de\x30c3\x30d7\x306e\x540d\x79f0"));
			MetaData->SetValue(NewProp_CellmapNames, TEXT("Category"), TEXT("SsAnimePack"));
			MetaData->SetValue(NewProp_CellmapNames, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_CellmapNames, TEXT("ToolTip"), TEXT("!< \x30d1\x30fc\x30c4\x60c5\x5831\x306e\x683c\x7d0d\x5148"));
			MetaData->SetValue(NewProp_Model, TEXT("Category"), TEXT("SsAnimePack"));
			MetaData->SetValue(NewProp_Model, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_Model, TEXT("ToolTip"), TEXT("!< \x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x30d1\x30c3\x30af\x540d\x79f0"));
			MetaData->SetValue(NewProp_AnimePackName, TEXT("Category"), TEXT("SsAnimePack"));
			MetaData->SetValue(NewProp_AnimePackName, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_AnimePackName, TEXT("ToolTip"), TEXT("!< \x8a2d\x5b9a\x60c5\x5831"));
			MetaData->SetValue(NewProp_Settings, TEXT("Category"), TEXT("SsAnimePack"));
			MetaData->SetValue(NewProp_Settings, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_Version, TEXT("Category"), TEXT("SsAnimePack"));
			MetaData->SetValue(NewProp_Version, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsAnimePack_CRC() { return 1565847254U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsAnimation()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsAnimation_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsAnimation"), sizeof(FSsAnimation), Get_Z_Construct_UScriptStruct_FSsAnimation_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsAnimation"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSsAnimation>, EStructFlags(0x00000201));
			UProperty* NewProp_Labels = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Labels"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Labels, FSsAnimation), 0x0000000000020015);
			UProperty* NewProp_Labels_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Labels, TEXT("Labels"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000020000, Z_Construct_UScriptStruct_FSsLabel());
			UProperty* NewProp_PartAnimes = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PartAnimes"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(PartAnimes, FSsAnimation), 0x0000000000000014);
			UProperty* NewProp_PartAnimes_Inner = new(EC_InternalUseOnlyConstructor, NewProp_PartAnimes, TEXT("PartAnimes"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FSsPartAnime());
			UProperty* NewProp_Settings = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Settings"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Settings, FSsAnimation), 0x0000000000020015, Z_Construct_UScriptStruct_FSsAnimationSettings());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(OverrideSettings, FSsAnimation, bool);
			UProperty* NewProp_OverrideSettings = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("OverrideSettings"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(OverrideSettings, FSsAnimation), 0x0000000000020015, CPP_BOOL_PROPERTY_BITMASK(OverrideSettings, FSsAnimation), sizeof(bool), true);
			UProperty* NewProp_AnimationName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AnimationName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(AnimationName, FSsAnimation), 0x0000000000020015);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_Labels, TEXT("Category"), TEXT("SsAnimation"));
			MetaData->SetValue(NewProp_Labels, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_Labels, TEXT("ToolTip"), TEXT("\x30d1\x30fc\x30c4\x6bce\x306e\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x30ad\x30fc\x30d5\x30ec\x30fc\x30e0\x304c\x683c\x7d0d\x3055\x308c\x308b\x30ea\x30b9\x30c8"));
			MetaData->SetValue(NewProp_PartAnimes, TEXT("Category"), TEXT("SsAnimation"));
			MetaData->SetValue(NewProp_PartAnimes, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_PartAnimes, TEXT("ToolTip"), TEXT("\x8a2d\x5b9a\x60c5\x5831\n\x8981\x7d20\x6570\x304c\x591a\x304f")TEXT("Details\x30a6\x30a3\x30f3\x30c9\x30a6\x304c\x6975\x7aef\x306b\x91cd\x304f\x306a\x3063\x3066\x3057\x307e\x3046\x305f\x3081\x3001VisibleAnywhere\x3092\x4ed8\x3051\x306a\x3044"));
			MetaData->SetValue(NewProp_Settings, TEXT("Category"), TEXT("SsAnimation"));
			MetaData->SetValue(NewProp_Settings, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_Settings, TEXT("ToolTip"), TEXT("\x3053\x306e\x30a4\x30f3\x30b9\x30bf\x30f3\x30b9\x304c\x6301\x3064\x8a2d\x5b9a\x3092\x4f7f\x3044")TEXT("animePack \x306e\x8a2d\x5b9a\x3092\x53c2\x7167\x3057\x306a\x3044\x3002")TEXT("FPS, frameCount \x306f\x5e38\x306b\x81ea\x8eab\x306e\x8a2d\x5b9a\x3092\x4f7f\x3046\x3002"));
			MetaData->SetValue(NewProp_OverrideSettings, TEXT("Category"), TEXT("SsAnimation"));
			MetaData->SetValue(NewProp_OverrideSettings, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_OverrideSettings, TEXT("ToolTip"), TEXT("\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x306e\x540d\x79f0"));
			MetaData->SetValue(NewProp_AnimationName, TEXT("Category"), TEXT("SsAnimation"));
			MetaData->SetValue(NewProp_AnimationName, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsAnimation_CRC() { return 2715953528U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsLabel()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsLabel_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsLabel"), sizeof(FSsLabel), Get_Z_Construct_UScriptStruct_FSsLabel_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsLabel"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSsLabel>, EStructFlags(0x00000201));
			UProperty* NewProp_Time = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Time"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Time, FSsLabel), 0x0000000000020015);
			UProperty* NewProp_LabelName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LabelName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(LabelName, FSsLabel), 0x0000000000020015);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("\x30e9\x30d9\x30eb\x3002\x30eb\x30fc\x30d7\x5148\x306a\x3069\x306b\x6307\x5b9a\x3059\x308b"));
			MetaData->SetValue(NewProp_Time, TEXT("Category"), TEXT("SsLabel"));
			MetaData->SetValue(NewProp_Time, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_Time, TEXT("ToolTip"), TEXT("< \x540d\x524d [\x5909\x6570\x540d\x5909\x66f4\x7981\x6b62]"));
			MetaData->SetValue(NewProp_LabelName, TEXT("Category"), TEXT("SsLabel"));
			MetaData->SetValue(NewProp_LabelName, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsLabel_CRC() { return 2331910637U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsPartAnime()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsPartAnime_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsPartAnime"), sizeof(FSsPartAnime), Get_Z_Construct_UScriptStruct_FSsPartAnime_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsPartAnime"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSsPartAnime>, EStructFlags(0x00000201));
			UProperty* NewProp_Attributes = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Attributes"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Attributes, FSsPartAnime), 0x0000000000020015);
			UProperty* NewProp_Attributes_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Attributes, TEXT("Attributes"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000020000, Z_Construct_UScriptStruct_FSsAttribute());
			UProperty* NewProp_PartName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PartName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(PartName, FSsPartAnime), 0x0000000000020015);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("typedef std::vector<SsAttribute*>       SsAttributeList;"));
			MetaData->SetValue(NewProp_Attributes, TEXT("Category"), TEXT("SsPartAnime"));
			MetaData->SetValue(NewProp_Attributes, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_PartName, TEXT("Category"), TEXT("SsPartAnime"));
			MetaData->SetValue(NewProp_PartName, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsPartAnime_CRC() { return 4238472913U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsModel()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsModel_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsModel"), sizeof(FSsModel), Get_Z_Construct_UScriptStruct_FSsModel_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsModel"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSsModel>, EStructFlags(0x00000201));
			UProperty* NewProp_PartList = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PartList"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(PartList, FSsModel), 0x0000000000020015);
			UProperty* NewProp_PartList_Inner = new(EC_InternalUseOnlyConstructor, NewProp_PartList, TEXT("PartList"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000020000, Z_Construct_UScriptStruct_FSsPart());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x3092\x69cb\x6210\x3059\x308b\x30d1\x30fc\x30c4\x3092\x30ea\x30b9\x30c8\x5316\x3057\x305f\x3082\x306e\x3067\x3059\x3002"));
			MetaData->SetValue(NewProp_PartList, TEXT("Category"), TEXT("SsModel"));
			MetaData->SetValue(NewProp_PartList, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsModel_CRC() { return 4018456709U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsPart()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsPart_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsPart"), sizeof(FSsPart), Get_Z_Construct_UScriptStruct_FSsPart_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsPart"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSsPart>, EStructFlags(0x00000201));
			UProperty* NewProp_ColorLabel = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ColorLabel"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(ColorLabel, FSsPart), 0x0000000000020015);
			UProperty* NewProp_RefEffectName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RefEffectName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(RefEffectName, FSsPart), 0x0000000000020015);
			UProperty* NewProp_RefAnime = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RefAnime"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(RefAnime, FSsPart), 0x0000000000020015);
			UProperty* NewProp_RefAnimePack = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RefAnimePack"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(RefAnimePack, FSsPart), 0x0000000000020015);
			UProperty* NewProp_InheritRates = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("InheritRates"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(InheritRates, FSsPart), 0x0000000000020001);
			NewProp_InheritRates->ArrayDim = CPP_ARRAY_DIM(InheritRates, FSsPart);
			UProperty* NewProp_Locked = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Locked"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Locked, FSsPart), 0x0000000000020015);
			UProperty* NewProp_Show = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Show"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Show, FSsPart), 0x0000000000020015);
			UProperty* NewProp_AlphaBlendType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AlphaBlendType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(AlphaBlendType, FSsPart), 0x0000000000020015, Z_Construct_UEnum_SpriteStudio5_SsBlendType());
			UProperty* NewProp_InheritType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("InheritType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(InheritType, FSsPart), 0x0000000000020015, Z_Construct_UEnum_SpriteStudio5_SsInheritType());
			UProperty* NewProp_BoundsType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BoundsType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(BoundsType, FSsPart), 0x0000000000020015, Z_Construct_UEnum_SpriteStudio5_SsBoundsType());
			UProperty* NewProp_Type = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Type"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Type, FSsPart), 0x0000000000020015, Z_Construct_UEnum_SpriteStudio5_SsPartType());
			UProperty* NewProp_ParentIndex = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ParentIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ParentIndex, FSsPart), 0x0000000000020015);
			UProperty* NewProp_ArrayIndex = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ArrayIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ArrayIndex, FSsPart), 0x0000000000020015);
			UProperty* NewProp_PartName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PartName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(PartName, FSsPart), 0x0000000000020015);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("\x30d1\x30fc\x30c4\x4e00\x3064\x3042\x305f\x308a\x306e\x60c5\x5831\x3092\x4fdd\x6301\x3059\x308b\x30c7\x30fc\x30bf\x3067\x3059\x3002"));
			MetaData->SetValue(NewProp_ColorLabel, TEXT("Category"), TEXT("SsPart"));
			MetaData->SetValue(NewProp_ColorLabel, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_ColorLabel, TEXT("ToolTip"), TEXT("< \x5272\x308a\x5f53\x3066\x305f\x30d1\x30fc\x30c6\x30a3\x30af\x30eb\x540d"));
			MetaData->SetValue(NewProp_RefEffectName, TEXT("Category"), TEXT("SsPart"));
			MetaData->SetValue(NewProp_RefEffectName, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_RefEffectName, TEXT("ToolTip"), TEXT("< \x53c2\x7167\x30a2\x30cb\x30e1\x540d"));
			MetaData->SetValue(NewProp_RefAnime, TEXT("Category"), TEXT("SsPart"));
			MetaData->SetValue(NewProp_RefAnime, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_RefAnime, TEXT("ToolTip"), TEXT("< \x53c2\x7167\x30a2\x30cb\x30e1\x540d"));
			MetaData->SetValue(NewProp_RefAnimePack, TEXT("Category"), TEXT("SsPart"));
			MetaData->SetValue(NewProp_RefAnimePack, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_RefAnimePack, TEXT("ToolTip"), TEXT("< \x89aa\x306e\x5024\x306e\x7d99\x627f\x7387\x3002SS4\x3068\x306e\x4e92\x63db\x6027\x306e\x305f\x3081\x6b8b\x3055\x308c\x3066\x3044\x308b\x304c")TEXT("0 or 1"));
			MetaData->SetValue(NewProp_InheritRates, TEXT("Category"), TEXT("SsPart"));
			MetaData->SetValue(NewProp_InheritRates, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_InheritRates, TEXT("ToolTip"), TEXT("!< [\x7de8\x96c6\x7528\x30c7\x30fc\x30bf] \x30d1\x30fc\x30c4\x306e\x30ed\x30c3\x30af\x72b6\x614b"));
			MetaData->SetValue(NewProp_Locked, TEXT("Category"), TEXT("SsPart"));
			MetaData->SetValue(NewProp_Locked, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_Locked, TEXT("ToolTip"), TEXT("!< [\x7de8\x96c6\x7528\x30c7\x30fc\x30bf] \x30d1\x30fc\x30c4\x306e\x8868\x793a\x30fb\x975e\x5e38\x6642"));
			MetaData->SetValue(NewProp_Show, TEXT("Category"), TEXT("SsPart"));
			MetaData->SetValue(NewProp_Show, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_Show, TEXT("ToolTip"), TEXT("!< \x03b1\x30d6\x30ec\x30f3\x30c9\x306e\x6f14\x7b97\x5f0f"));
			MetaData->SetValue(NewProp_AlphaBlendType, TEXT("Category"), TEXT("SsPart"));
			MetaData->SetValue(NewProp_AlphaBlendType, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_AlphaBlendType, TEXT("ToolTip"), TEXT("!< \x30a2\x30c8\x30ea\x30d3\x30e5\x30fc\x30c8\x5024\x306e\x7d99\x627f\x65b9\x6cd5"));
			MetaData->SetValue(NewProp_InheritType, TEXT("Category"), TEXT("SsPart"));
			MetaData->SetValue(NewProp_InheritType, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_InheritType, TEXT("ToolTip"), TEXT("!< \x5f53\x305f\x308a\x5224\x5b9a\x3068\x3057\x3066\x4f7f\x3046\x304b\xff1f\x4f7f\x3046\x5834\x5408\x306f\x305d\x306e\x5f62\x72b6\x3002"));
			MetaData->SetValue(NewProp_BoundsType, TEXT("Category"), TEXT("SsPart"));
			MetaData->SetValue(NewProp_BoundsType, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_BoundsType, TEXT("ToolTip"), TEXT("!< \x7a2e\x5225"));
			MetaData->SetValue(NewProp_Type, TEXT("Category"), TEXT("SsPart"));
			MetaData->SetValue(NewProp_Type, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_Type, TEXT("ToolTip"), TEXT("!< \x89aa\x30d1\x30fc\x30c4\x306e\x30a4\x30f3\x30c7\x30c3\x30af\x30b9"));
			MetaData->SetValue(NewProp_ParentIndex, TEXT("Category"), TEXT("SsPart"));
			MetaData->SetValue(NewProp_ParentIndex, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_ParentIndex, TEXT("ToolTip"), TEXT("!< \x30c4\x30ea\x30fc\x3092\x914d\x5217\x306b\x5c55\x958b\x3057\x305f\x6642\x306e\x30a4\x30f3\x30c7\x30c3\x30af\x30b9"));
			MetaData->SetValue(NewProp_ArrayIndex, TEXT("Category"), TEXT("SsPart"));
			MetaData->SetValue(NewProp_ArrayIndex, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_PartName, TEXT("Category"), TEXT("SsPart"));
			MetaData->SetValue(NewProp_PartName, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsPart_CRC() { return 2667629316U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsAnimationSettings()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsAnimationSettings_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsAnimationSettings"), sizeof(FSsAnimationSettings), Get_Z_Construct_UScriptStruct_FSsAnimationSettings_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsAnimationSettings"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSsAnimationSettings>, EStructFlags(0x00000201));
			UProperty* NewProp_Pivot = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Pivot"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Pivot, FSsAnimationSettings), 0x0000000000020015, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_CanvasSize = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CanvasSize"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(CanvasSize, FSsAnimationSettings), 0x0000000000020015, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_FrameCount = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FrameCount"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(FrameCount, FSsAnimationSettings), 0x0000000000020015);
			UProperty* NewProp_Fps = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Fps"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Fps, FSsAnimationSettings), 0x0000000000020015);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x518d\x751f\x8a2d\x5b9a\x60c5\x5831\x3067\x3059\x3002"));
			MetaData->SetValue(NewProp_Pivot, TEXT("Category"), TEXT("SsAnimationSettings"));
			MetaData->SetValue(NewProp_Pivot, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_Pivot, TEXT("ToolTip"), TEXT("!< \x30ad\x30e3\x30f3\x30d0\x30b9\x30b5\x30a4\x30ba(\x5143\x57fa\x6e96\x67a0)\x3002\x30d3\x30e5\x30fc\x30dd\x30fc\x30c8\x306e\x30b5\x30a4\x30ba\x3068\x30a4\x30b3\x30fc\x30eb\x3067\x306f\x306a\x3044\x3002"));
			MetaData->SetValue(NewProp_CanvasSize, TEXT("Category"), TEXT("SsAnimationSettings"));
			MetaData->SetValue(NewProp_CanvasSize, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_CanvasSize, TEXT("ToolTip"), TEXT("UPROPERTY(VisibleAnywhere, Category=SsAnimationSettings, BlueprintReadOnly)\nTEnumAsByte<SsPartsSortMode::Type>      SortMode;               !< \x30d1\x30fc\x30c4\x306e\x30bd\x30fc\x30c8\x30e2\x30fc\x30c9"));
			MetaData->SetValue(NewProp_FrameCount, TEXT("Category"), TEXT("SsAnimationSettings"));
			MetaData->SetValue(NewProp_FrameCount, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
			MetaData->SetValue(NewProp_FrameCount, TEXT("ToolTip"), TEXT("!< \x518d\x751f")TEXT("FPS"));
			MetaData->SetValue(NewProp_Fps, TEXT("Category"), TEXT("SsAnimationSettings"));
			MetaData->SetValue(NewProp_Fps, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsAnimePack.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsAnimationSettings_CRC() { return 3650865985U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsCellMap()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsCellMap_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsCellMap"), sizeof(FSsCellMap), Get_Z_Construct_UScriptStruct_FSsCellMap_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsCellMap"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSsCellMap>, EStructFlags(0x00000201));
			UProperty* NewProp_Cells = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Cells"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Cells, FSsCellMap), 0x0000000000020015);
			UProperty* NewProp_Cells_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Cells, TEXT("Cells"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000020000, Z_Construct_UScriptStruct_FSsCell());
			UProperty* NewProp_FilterMode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FilterMode"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(FilterMode, FSsCellMap), 0x0000000000020015, Z_Construct_UEnum_SpriteStudio5_SsTexFilterMode());
			UProperty* NewProp_WrapMode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("WrapMode"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(WrapMode, FSsCellMap), 0x0000000000020015, Z_Construct_UEnum_SpriteStudio5_SsTexWrapMode());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(OverrideTexSettings, FSsCellMap, bool);
			UProperty* NewProp_OverrideTexSettings = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("OverrideTexSettings"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(OverrideTexSettings, FSsCellMap), 0x0000000000020015, CPP_BOOL_PROPERTY_BITMASK(OverrideTexSettings, FSsCellMap), sizeof(bool), true);
			UProperty* NewProp_PixelSize = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PixelSize"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(PixelSize, FSsCellMap), 0x0000000000020015, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_Texture = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Texture"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Texture, FSsCellMap), 0x0000000000020015, Z_Construct_UClass_UTexture_NoRegister());
			UProperty* NewProp_ImagePath = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ImagePath"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ImagePath, FSsCellMap), 0x0000000000020015);
			UProperty* NewProp_CellMapName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CellMapName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(CellMapName, FSsCellMap), 0x0000000000020015);
			UProperty* NewProp_FileName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FileName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(FileName, FSsCellMap), 0x0000000000020015);
			UProperty* NewProp_Version = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Version"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Version, FSsCellMap), 0x0000000000020015);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsCellMap.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("!\n@class SsCellMap\n@breif \x30bb\x30eb\x30de\x30c3\x30d7\x306f\xff11\x3064\x306e\x30c6\x30af\x30b9\x30c1\x30e3\x30d5\x30a1\x30a4\x30eb\x3068\x305d\x306e\x30c6\x30af\x30b9\x30c1\x30e3\x5185\x3067\x30d1\x30fc\x30c4\x3068\x3057\x3066\x4f7f\x7528\x3059\x308b\x77e9\x5f62\x7bc4\x56f2\x3092\x793a\x3057\x305f\x30bb\x30eb\x3092\x30b3\x30f3\x30c6\x30ca\x3068\x3057\x3066\x4fdd\x6301\x3059\x308b\x305f\x3081\x306e\x69cb\x9020\x3067\x3059\x3002<BR>\n<BR>\n\x3053\x306e\x30c7\x30fc\x30bf\x30b3\x30f3\x30c6\x30ca\x306f\x30a8\x30c7\x30a3\x30c3\x30c8\x7528\x3068\x3057\x3066\x4e0b\x8a18\x3092\x8aad\x307f\x98db\x3070\x3057\x307e\x3059\x3002<BR>\nimagePathAtImport;///< \x30a4\x30f3\x30dd\x30fc\x30c8\x6642\x306e\x53c2\x7167\x5143\x753b\x50cf\x306e\x30d5\x30eb\x30d1\x30b9<BR>\npackInfoFilePath;      ///< \x30d1\x30c3\x30af\x60c5\x5831\x30d5\x30a1\x30a4\x30eb\x3002TexturePacker \x7b49\x306e\x30c7\x30fc\x30bf\x3092\x30a4\x30f3\x30dd\x30fc\x30c8\x3057\x305f\x5834\x5408\x306e\x307f\x6709\x52b9<BR>\ntexPackSettings;       ///< \x30d1\x30c3\x30af\x6642\x306e\x53c2\x7167\x60c5\x5831<BR>"));
			MetaData->SetValue(NewProp_Cells, TEXT("Category"), TEXT("SsCellMap"));
			MetaData->SetValue(NewProp_Cells, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsCellMap.h"));
			MetaData->SetValue(NewProp_Cells, TEXT("ToolTip"), TEXT("< \x30c6\x30af\x30b9\x30c1\x30e3\x306e\x30d5\x30a3\x30eb\x30bf\x30e2\x30fc\x30c9"));
			MetaData->SetValue(NewProp_FilterMode, TEXT("Category"), TEXT("SsCellMap"));
			MetaData->SetValue(NewProp_FilterMode, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsCellMap.h"));
			MetaData->SetValue(NewProp_FilterMode, TEXT("ToolTip"), TEXT("< \x30c6\x30af\x30b9\x30c1\x30e3\x306e\x30e9\x30c3\x30d7\x30e2\x30fc\x30c9"));
			MetaData->SetValue(NewProp_WrapMode, TEXT("Category"), TEXT("SsCellMap"));
			MetaData->SetValue(NewProp_WrapMode, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsCellMap.h"));
			MetaData->SetValue(NewProp_WrapMode, TEXT("ToolTip"), TEXT("< \x30c6\x30af\x30b9\x30c1\x30e3\x8a2d\x5b9a\x3092\x30d7\x30ed\x30b8\x30a7\x30af\x30c8\x306e\x8a2d\x5b9a\x3067\x306f\x306a\x304f\x4e0b\x8a18\x8a2d\x5b9a\x3092\x4f7f\x3046"));
			MetaData->SetValue(NewProp_OverrideTexSettings, TEXT("Category"), TEXT("SsCellMap"));
			MetaData->SetValue(NewProp_OverrideTexSettings, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsCellMap.h"));
			MetaData->SetValue(NewProp_OverrideTexSettings, TEXT("ToolTip"), TEXT("< \x753b\x50cf\x306e\x30d4\x30af\x30bb\x30ebWH\x30b5\x30a4\x30ba"));
			MetaData->SetValue(NewProp_PixelSize, TEXT("Category"), TEXT("SsCellMap"));
			MetaData->SetValue(NewProp_PixelSize, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsCellMap.h"));
			MetaData->SetValue(NewProp_Texture, TEXT("Category"), TEXT("SsCellMap"));
			MetaData->SetValue(NewProp_Texture, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsCellMap.h"));
			MetaData->SetValue(NewProp_Texture, TEXT("ToolTip"), TEXT("< \x53c2\x7167\x753b\x50cf\x30d5\x30a1\x30a4\x30eb\x30d1\x30b9\x3002\x30d7\x30ed\x30b8\x30a7\x30af\x30c8\x306e\x753b\x50cf\x57fa\x6e96\x76f8\x5bfe"));
			MetaData->SetValue(NewProp_ImagePath, TEXT("Category"), TEXT("SsCellMap"));
			MetaData->SetValue(NewProp_ImagePath, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsCellMap.h"));
			MetaData->SetValue(NewProp_ImagePath, TEXT("ToolTip"), TEXT("< \x3053\x306e\x30bb\x30eb\x30de\x30c3\x30d7\x306e\x540d\x79f0\x3067\x3059\x3002"));
			MetaData->SetValue(NewProp_CellMapName, TEXT("Category"), TEXT("SsCellMap"));
			MetaData->SetValue(NewProp_CellMapName, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsCellMap.h"));
			MetaData->SetValue(NewProp_CellMapName, TEXT("ToolTip"), TEXT("< \x30bb\x30eb\x30de\x30c3\x30d7\x306e\x30d5\x30a1\x30a4\x30eb\x30cd\x30fc\x30e0"));
			MetaData->SetValue(NewProp_FileName, TEXT("Category"), TEXT("SsCellMap"));
			MetaData->SetValue(NewProp_FileName, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsCellMap.h"));
			MetaData->SetValue(NewProp_Version, TEXT("Category"), TEXT("SsCellMap"));
			MetaData->SetValue(NewProp_Version, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsCellMap.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsCellMap_CRC() { return 3037122642U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsCell()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsCell_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsCell"), sizeof(FSsCell), Get_Z_Construct_UScriptStruct_FSsCell_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsCell"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSsCell>, EStructFlags(0x00000201));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Rotated, FSsCell, bool);
			UProperty* NewProp_Rotated = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Rotated"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Rotated, FSsCell), 0x0000000000020015, CPP_BOOL_PROPERTY_BITMASK(Rotated, FSsCell), sizeof(bool), true);
			UProperty* NewProp_Pivot = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Pivot"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Pivot, FSsCell), 0x0000000000020015, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_Size = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Size"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Size, FSsCell), 0x0000000000020015, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_Pos = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Pos"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Pos, FSsCell), 0x0000000000020015, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_CellName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CellName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(CellName, FSsCell), 0x0000000000020015);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsCellMap.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("\x30d1\x30fc\x30c4\x306b\x4f7f\x7528\x3055\x308c\x308b\x753b\x7d20\x306e\x77e9\x5f62\x7bc4\x56f2\x3092\x793a\x3057\x305f\x69cb\x9020\x3067\x3059\x3002"));
			MetaData->SetValue(NewProp_Rotated, TEXT("Category"), TEXT("FSsCell"));
			MetaData->SetValue(NewProp_Rotated, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsCellMap.h"));
			MetaData->SetValue(NewProp_Rotated, TEXT("ToolTip"), TEXT("< \x539f\x70b9\x3002size /2 \x304c\x4e2d\x592e=0,0\x306b\x306a\x308b\x3002"));
			MetaData->SetValue(NewProp_Pivot, TEXT("Category"), TEXT("FSsCell"));
			MetaData->SetValue(NewProp_Pivot, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsCellMap.h"));
			MetaData->SetValue(NewProp_Pivot, TEXT("ToolTip"), TEXT("< WH\x30d4\x30af\x30bb\x30eb\x30b5\x30a4\x30ba"));
			MetaData->SetValue(NewProp_Size, TEXT("Category"), TEXT("FSsCell"));
			MetaData->SetValue(NewProp_Size, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsCellMap.h"));
			MetaData->SetValue(NewProp_Size, TEXT("ToolTip"), TEXT("< \x5de6\x4e0a\x306e\x5ea7\x6a19"));
			MetaData->SetValue(NewProp_Pos, TEXT("Category"), TEXT("FSsCell"));
			MetaData->SetValue(NewProp_Pos, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsCellMap.h"));
			MetaData->SetValue(NewProp_Pos, TEXT("ToolTip"), TEXT("< \x30bb\x30eb\x540d\x79f0"));
			MetaData->SetValue(NewProp_CellName, TEXT("Category"), TEXT("FSsCell"));
			MetaData->SetValue(NewProp_CellName, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsCellMap.h"));
			MetaData->SetValue(NewProp_CellName, TEXT("ToolTip"), TEXT("--------- \x30e9\x30f3\x30bf\x30a4\x30e0\x7528\x30c7\x30fc\x30bf\x3068\x3057\x3066\x4fdd\x5b58\x3059\x3079\x304d\x3082\x306e"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsCell_CRC() { return 1542888929U; }
	UEnum* Z_Construct_UEnum_SpriteStudio5_SsVarianceValueRangeType()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsVarianceValueRangeType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("SsVarianceValueRangeType"), 0, Get_Z_Construct_UEnum_SpriteStudio5_SsVarianceValueRangeType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsVarianceValueRangeType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsVarianceValueRangeType::None")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsVarianceValueRangeType::MinMax")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsVarianceValueRangeType::PlusMinus")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsVarianceValueRangeType::SsVarianceValueRangeType_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsVarianceValueRangeType_CRC() { return 2231889508U; }
	UEnum* Z_Construct_UEnum_SpriteStudio5_SsEffectFunctionType()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsEffectFunctionType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("SsEffectFunctionType"), 0, Get_Z_Construct_UEnum_SpriteStudio5_SsEffectFunctionType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsEffectFunctionType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEffectFunctionType::Base")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEffectFunctionType::Basic")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEffectFunctionType::RndSeedChange")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEffectFunctionType::Delay")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEffectFunctionType::Gravity")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEffectFunctionType::Position")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEffectFunctionType::Rotation")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEffectFunctionType::TransRotation")), 7));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEffectFunctionType::TransSpeed")), 8));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEffectFunctionType::TangentialAcceleration")), 9));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEffectFunctionType::InitColor")), 10));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEffectFunctionType::TransColor")), 11));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEffectFunctionType::AlphaFade")), 12));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEffectFunctionType::Size")), 13));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEffectFunctionType::TransSize")), 14));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEffectFunctionType::PointGravity")), 15));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEffectFunctionType::TurnToDirectionEnabled")), 16));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEffectFunctionType::SsEffectFunctionType_MAX")), 17));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("\x547d\x4ee4\x7a2e\x5225"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsEffectFunctionType_CRC() { return 1344375684U; }
	UEnum* Z_Construct_UEnum_SpriteStudio5_SsEffectPartType()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsEffectPartType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("SsEffectPartType"), 0, Get_Z_Construct_UEnum_SpriteStudio5_SsEffectPartType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsEffectPartType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEffectPartType::EffectPartTypeEmiiter")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEffectPartType::EffectPartTypeParticle")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEffectPartType::SsEffectPartType_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsEffectPartType_CRC() { return 1987423550U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsParticleTurnToDirectionEnabled()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsParticleTurnToDirectionEnabled_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsParticleTurnToDirectionEnabled"), sizeof(FSsParticleTurnToDirectionEnabled), Get_Z_Construct_UScriptStruct_FSsParticleTurnToDirectionEnabled_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsParticleTurnToDirectionEnabled"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FSsEffectElementBase(), new UScriptStruct::TCppStructOps<FSsParticleTurnToDirectionEnabled>, EStructFlags(0x00000201));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsParticleTurnToDirectionEnabled_CRC() { return 582098304U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsParticlePointGravity()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsParticlePointGravity_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsParticlePointGravity"), sizeof(FSsParticlePointGravity), Get_Z_Construct_UScriptStruct_FSsParticlePointGravity_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsParticlePointGravity"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FSsEffectElementBase(), new UScriptStruct::TCppStructOps<FSsParticlePointGravity>, EStructFlags(0x00000201));
			UProperty* NewProp_Power = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Power"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Power, FSsParticlePointGravity), 0x0000000000020015);
			UProperty* NewProp_Position = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Position"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Position, FSsParticlePointGravity), 0x0000000000020015, Z_Construct_UScriptStruct_FVector2D());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("\x91cd\x529b\x70b9"));
			MetaData->SetValue(NewProp_Power, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_Power, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(NewProp_Position, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_Position, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsParticlePointGravity_CRC() { return 1729337604U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementTransSize()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementTransSize_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsParticleElementTransSize"), sizeof(FSsParticleElementTransSize), Get_Z_Construct_UScriptStruct_FSsParticleElementTransSize_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsParticleElementTransSize"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FSsEffectElementBase(), new UScriptStruct::TCppStructOps<FSsParticleElementTransSize>, EStructFlags(0x00000201));
			UProperty* NewProp_ScaleFactor = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScaleFactor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ScaleFactor, FSsParticleElementTransSize), 0x0000000000020015, Z_Construct_UScriptStruct_FSsVarianceValueFloat());
			UProperty* NewProp_SizeY = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SizeY"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SizeY, FSsParticleElementTransSize), 0x0000000000020015, Z_Construct_UScriptStruct_FSsVarianceValueFloat());
			UProperty* NewProp_SizeX = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SizeX"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SizeX, FSsParticleElementTransSize), 0x0000000000020015, Z_Construct_UScriptStruct_FSsVarianceValueFloat());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("\x30b5\x30a4\x30ba\x5909\x66f4"));
			MetaData->SetValue(NewProp_ScaleFactor, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_ScaleFactor, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(NewProp_SizeY, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_SizeY, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(NewProp_SizeX, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_SizeX, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementTransSize_CRC() { return 1481101432U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementSize()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementSize_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsParticleElementSize"), sizeof(FSsParticleElementSize), Get_Z_Construct_UScriptStruct_FSsParticleElementSize_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsParticleElementSize"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FSsEffectElementBase(), new UScriptStruct::TCppStructOps<FSsParticleElementSize>, EStructFlags(0x00000201));
			UProperty* NewProp_ScaleFactor = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScaleFactor"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ScaleFactor, FSsParticleElementSize), 0x0000000000020015, Z_Construct_UScriptStruct_FSsVarianceValueFloat());
			UProperty* NewProp_SizeY = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SizeY"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SizeY, FSsParticleElementSize), 0x0000000000020015, Z_Construct_UScriptStruct_FSsVarianceValueFloat());
			UProperty* NewProp_SizeX = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SizeX"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SizeX, FSsParticleElementSize), 0x0000000000020015, Z_Construct_UScriptStruct_FSsVarianceValueFloat());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("\x30b5\x30a4\x30ba\x521d\x671f"));
			MetaData->SetValue(NewProp_ScaleFactor, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_ScaleFactor, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(NewProp_SizeY, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_SizeY, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(NewProp_SizeX, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_SizeX, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementSize_CRC() { return 1834701556U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementAlphaFade()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementAlphaFade_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsParticleElementAlphaFade"), sizeof(FSsParticleElementAlphaFade), Get_Z_Construct_UScriptStruct_FSsParticleElementAlphaFade_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsParticleElementAlphaFade"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FSsEffectElementBase(), new UScriptStruct::TCppStructOps<FSsParticleElementAlphaFade>, EStructFlags(0x00000201));
			UProperty* NewProp_Disprange = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Disprange"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Disprange, FSsParticleElementAlphaFade), 0x0000000000020015, Z_Construct_UScriptStruct_FSsVarianceValueFloat());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("\x9802\x70b9\x30a2\x30eb\x30d5\x30a1\x3092\x5236\x5fa1\x3059\x308b"));
			MetaData->SetValue(NewProp_Disprange, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_Disprange, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementAlphaFade_CRC() { return 2661046850U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementTransColor()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementTransColor_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsParticleElementTransColor"), sizeof(FSsParticleElementTransColor), Get_Z_Construct_UScriptStruct_FSsParticleElementTransColor_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsParticleElementTransColor"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FSsEffectElementBase(), new UScriptStruct::TCppStructOps<FSsParticleElementTransColor>, EStructFlags(0x00000201));
			UProperty* NewProp_Color = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Color"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Color, FSsParticleElementTransColor), 0x0000000000020015, Z_Construct_UScriptStruct_FSsVarianceValueColor());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("\x9802\x70b9\x30ab\x30e9\x30fc\x3092\x5236\x5fa1\x3059\x308b"));
			MetaData->SetValue(NewProp_Color, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_Color, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementTransColor_CRC() { return 1590502554U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementInitColor()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementInitColor_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsParticleElementInitColor"), sizeof(FSsParticleElementInitColor), Get_Z_Construct_UScriptStruct_FSsParticleElementInitColor_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsParticleElementInitColor"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FSsEffectElementBase(), new UScriptStruct::TCppStructOps<FSsParticleElementInitColor>, EStructFlags(0x00000201));
			UProperty* NewProp_Color = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Color"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Color, FSsParticleElementInitColor), 0x0000000000020015, Z_Construct_UScriptStruct_FSsVarianceValueColor());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("\x9802\x70b9\x30ab\x30e9\x30fc\x3092\x5236\x5fa1\x3059\x308b"));
			MetaData->SetValue(NewProp_Color, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_Color, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementInitColor_CRC() { return 2877728967U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementTangentialAcceleration()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementTangentialAcceleration_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsParticleElementTangentialAcceleration"), sizeof(FSsParticleElementTangentialAcceleration), Get_Z_Construct_UScriptStruct_FSsParticleElementTangentialAcceleration_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsParticleElementTangentialAcceleration"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FSsEffectElementBase(), new UScriptStruct::TCppStructOps<FSsParticleElementTangentialAcceleration>, EStructFlags(0x00000201));
			UProperty* NewProp_Acceleration = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Acceleration"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Acceleration, FSsParticleElementTangentialAcceleration), 0x0000000000020015, Z_Construct_UScriptStruct_FSsVarianceValueFloat());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("\x63a5\x6226\x52a0\x901f\x5ea6\x3092\x4e0e\x3048\x308b"));
			MetaData->SetValue(NewProp_Acceleration, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_Acceleration, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementTangentialAcceleration_CRC() { return 587444493U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementTransSpeed()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementTransSpeed_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsParticleElementTransSpeed"), sizeof(FSsParticleElementTransSpeed), Get_Z_Construct_UScriptStruct_FSsParticleElementTransSpeed_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsParticleElementTransSpeed"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FSsEffectElementBase(), new UScriptStruct::TCppStructOps<FSsParticleElementTransSpeed>, EStructFlags(0x00000201));
			UProperty* NewProp_Speed = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Speed"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Speed, FSsParticleElementTransSpeed), 0x0000000000020015, Z_Construct_UScriptStruct_FSsVarianceValueFloat());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(NewProp_Speed, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_Speed, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementTransSpeed_CRC() { return 2175809359U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementRotationTrans()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementRotationTrans_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsParticleElementRotationTrans"), sizeof(FSsParticleElementRotationTrans), Get_Z_Construct_UScriptStruct_FSsParticleElementRotationTrans_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsParticleElementRotationTrans"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FSsEffectElementBase(), new UScriptStruct::TCppStructOps<FSsParticleElementRotationTrans>, EStructFlags(0x00000201));
			UProperty* NewProp_EndLifeTimePer = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EndLifeTimePer"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(EndLifeTimePer, FSsParticleElementRotationTrans), 0x0000000000020015);
			UProperty* NewProp_RotationFactor = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RotationFactor"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(RotationFactor, FSsParticleElementRotationTrans), 0x0000000000020015);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("\x89d2\x5ea6\x5909\x5316"));
			MetaData->SetValue(NewProp_EndLifeTimePer, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_EndLifeTimePer, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(NewProp_RotationFactor, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_RotationFactor, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementRotationTrans_CRC() { return 3463798125U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementRotation()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementRotation_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsParticleElementRotation"), sizeof(FSsParticleElementRotation), Get_Z_Construct_UScriptStruct_FSsParticleElementRotation_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsParticleElementRotation"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FSsEffectElementBase(), new UScriptStruct::TCppStructOps<FSsParticleElementRotation>, EStructFlags(0x00000201));
			UProperty* NewProp_RotationAdd = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RotationAdd"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(RotationAdd, FSsParticleElementRotation), 0x0000000000020015, Z_Construct_UScriptStruct_FSsVarianceValueFloat());
			UProperty* NewProp_Rotation = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Rotation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Rotation, FSsParticleElementRotation), 0x0000000000020015, Z_Construct_UScriptStruct_FSsVarianceValueFloat());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("\x89d2\x5ea6\x5909\x5316"));
			MetaData->SetValue(NewProp_RotationAdd, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_RotationAdd, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(NewProp_Rotation, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_Rotation, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementRotation_CRC() { return 2377204027U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementPosition()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementPosition_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsParticleElementPosition"), sizeof(FSsParticleElementPosition), Get_Z_Construct_UScriptStruct_FSsParticleElementPosition_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsParticleElementPosition"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FSsEffectElementBase(), new UScriptStruct::TCppStructOps<FSsParticleElementPosition>, EStructFlags(0x00000201));
			UProperty* NewProp_OffsetY = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("OffsetY"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(OffsetY, FSsParticleElementPosition), 0x0000000000020015, Z_Construct_UScriptStruct_FSsVarianceValueFloat());
			UProperty* NewProp_OffsetX = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("OffsetX"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(OffsetX, FSsParticleElementPosition), 0x0000000000020015, Z_Construct_UScriptStruct_FSsVarianceValueFloat());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("\x767a\x751f\x4f4d\x7f6e\x3078\x306e\x5f71\x97ff"));
			MetaData->SetValue(NewProp_OffsetY, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_OffsetY, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(NewProp_OffsetX, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_OffsetX, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementPosition_CRC() { return 1078822755U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementGravity()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementGravity_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsParticleElementGravity"), sizeof(FSsParticleElementGravity), Get_Z_Construct_UScriptStruct_FSsParticleElementGravity_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsParticleElementGravity"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FSsEffectElementBase(), new UScriptStruct::TCppStructOps<FSsParticleElementGravity>, EStructFlags(0x00000201));
			UProperty* NewProp_Gravity = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Gravity"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Gravity, FSsParticleElementGravity), 0x0000000000020015, Z_Construct_UScriptStruct_FVector2D());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("\x91cd\x529b\x3078\x306e\x5f71\x97ff"));
			MetaData->SetValue(NewProp_Gravity, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_Gravity, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementGravity_CRC() { return 2691814258U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementDelay()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementDelay_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsParticleElementDelay"), sizeof(FSsParticleElementDelay), Get_Z_Construct_UScriptStruct_FSsParticleElementDelay_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsParticleElementDelay"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FSsEffectElementBase(), new UScriptStruct::TCppStructOps<FSsParticleElementDelay>, EStructFlags(0x00000201));
			UProperty* NewProp_DelayTime = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DelayTime"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(DelayTime, FSsParticleElementDelay), 0x0000000000020015);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("\x9045\x308c"));
			MetaData->SetValue(NewProp_DelayTime, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_DelayTime, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementDelay_CRC() { return 1496339194U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementRndSeedChange()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementRndSeedChange_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsParticleElementRndSeedChange"), sizeof(FSsParticleElementRndSeedChange), Get_Z_Construct_UScriptStruct_FSsParticleElementRndSeedChange_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsParticleElementRndSeedChange"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FSsEffectElementBase(), new UScriptStruct::TCppStructOps<FSsParticleElementRndSeedChange>, EStructFlags(0x00000201));
			UProperty* NewProp_Seed = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Seed"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Seed, FSsParticleElementRndSeedChange), 0x0000000000020015);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("\x9045\x308c"));
			MetaData->SetValue(NewProp_Seed, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_Seed, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementRndSeedChange_CRC() { return 1058576033U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsParticleElementBasic()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementBasic_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsParticleElementBasic"), sizeof(FSsParticleElementBasic), Get_Z_Construct_UScriptStruct_FSsParticleElementBasic_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsParticleElementBasic"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FSsEffectElementBase(), new UScriptStruct::TCppStructOps<FSsParticleElementBasic>, EStructFlags(0x00000201));
			UProperty* NewProp_Priority = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Priority"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Priority, FSsParticleElementBasic), 0x0000000000020015);
			UProperty* NewProp_AttimeCreate = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AttimeCreate"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AttimeCreate, FSsParticleElementBasic), 0x0000000000020015);
			UProperty* NewProp_Lifetime = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Lifetime"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Lifetime, FSsParticleElementBasic), 0x0000000000020015);
			UProperty* NewProp_Interval = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Interval"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Interval, FSsParticleElementBasic), 0x0000000000020015);
			UProperty* NewProp_AngleVariance = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AngleVariance"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(AngleVariance, FSsParticleElementBasic), 0x0000000000020015);
			UProperty* NewProp_Angle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Angle"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Angle, FSsParticleElementBasic), 0x0000000000020015);
			UProperty* NewProp_Lifespan = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Lifespan"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Lifespan, FSsParticleElementBasic), 0x0000000000020015, Z_Construct_UScriptStruct_FSsVarianceValueInt());
			UProperty* NewProp_Speed = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Speed"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Speed, FSsParticleElementBasic), 0x0000000000020015, Z_Construct_UScriptStruct_FSsVarianceValueFloat());
			UProperty* NewProp_MaximumParticle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MaximumParticle"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(MaximumParticle, FSsParticleElementBasic), 0x0000000000020015);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("\x30d1\x30fc\x30c6\x30a3\x30af\x30eb\x3092\x69cb\x6210\x3059\x308b\x57fa\x672c\x306e\x5024"));
			MetaData->SetValue(NewProp_Priority, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_Priority, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(NewProp_AttimeCreate, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_AttimeCreate, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(NewProp_Lifetime, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_Lifetime, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(NewProp_Interval, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_Interval, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(NewProp_AngleVariance, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_AngleVariance, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(NewProp_Angle, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_Angle, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(NewProp_Lifespan, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_Lifespan, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(NewProp_Speed, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_Speed, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(NewProp_MaximumParticle, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_MaximumParticle, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsParticleElementBasic_CRC() { return 118022849U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsEffectElementBase()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsEffectElementBase_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsEffectElementBase"), sizeof(FSsEffectElementBase), Get_Z_Construct_UScriptStruct_FSsEffectElementBase_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsEffectElementBase"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSsEffectElementBase>, EStructFlags(0x00000201));
			UProperty* NewProp_MyType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MyType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(MyType, FSsEffectElementBase), 0x0000000000022015, Z_Construct_UEnum_SpriteStudio5_SsEffectFunctionType());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(NewProp_MyType, TEXT("Category"), TEXT("SsEffectElement"));
			MetaData->SetValue(NewProp_MyType, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsEffectElementBase_CRC() { return 3569243113U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsVarianceValueColor()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsVarianceValueColor_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsVarianceValueColor"), sizeof(FSsVarianceValueColor), Get_Z_Construct_UScriptStruct_FSsVarianceValueColor_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsVarianceValueColor"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSsVarianceValueColor>, EStructFlags(0x00000201));
			UProperty* NewProp_SubValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SubValue, FSsVarianceValueColor), 0x0000000000020015, Z_Construct_UScriptStruct_FSsU8Color());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Value, FSsVarianceValueColor), 0x0000000000020015, Z_Construct_UScriptStruct_FSsU8Color());
			UProperty* NewProp_RangeType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RangeType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(RangeType, FSsVarianceValueColor), 0x0000000000020015, Z_Construct_UEnum_SpriteStudio5_SsVarianceValueRangeType());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("\x7bc4\x56f2\x5024\x30af\x30e9\x30b9(SsU8Color)"));
			MetaData->SetValue(NewProp_SubValue, TEXT("Category"), TEXT("SsVarianceValue"));
			MetaData->SetValue(NewProp_SubValue, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(NewProp_Value, TEXT("Category"), TEXT("SsVarianceValue"));
			MetaData->SetValue(NewProp_Value, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(NewProp_RangeType, TEXT("Category"), TEXT("SsVarianceValue"));
			MetaData->SetValue(NewProp_RangeType, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsVarianceValueColor_CRC() { return 1113209624U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsVarianceValueInt()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsVarianceValueInt_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsVarianceValueInt"), sizeof(FSsVarianceValueInt), Get_Z_Construct_UScriptStruct_FSsVarianceValueInt_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsVarianceValueInt"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSsVarianceValueInt>, EStructFlags(0x00000201));
			UProperty* NewProp_SubValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubValue"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(SubValue, FSsVarianceValueInt), 0x0000000000020015);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Value, FSsVarianceValueInt), 0x0000000000020015);
			UProperty* NewProp_RangeType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RangeType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(RangeType, FSsVarianceValueInt), 0x0000000000020015, Z_Construct_UEnum_SpriteStudio5_SsVarianceValueRangeType());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("\x7bc4\x56f2\x5024\x30af\x30e9\x30b9(int32)"));
			MetaData->SetValue(NewProp_SubValue, TEXT("Category"), TEXT("SsVarianceValue"));
			MetaData->SetValue(NewProp_SubValue, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(NewProp_Value, TEXT("Category"), TEXT("SsVarianceValue"));
			MetaData->SetValue(NewProp_Value, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(NewProp_RangeType, TEXT("Category"), TEXT("SsVarianceValue"));
			MetaData->SetValue(NewProp_RangeType, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsVarianceValueInt_CRC() { return 1795424868U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsVarianceValueFloat()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsVarianceValueFloat_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsVarianceValueFloat"), sizeof(FSsVarianceValueFloat), Get_Z_Construct_UScriptStruct_FSsVarianceValueFloat_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsVarianceValueFloat"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSsVarianceValueFloat>, EStructFlags(0x00000201));
			UProperty* NewProp_SubValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(SubValue, FSsVarianceValueFloat), 0x0000000000020015);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Value, FSsVarianceValueFloat), 0x0000000000020015);
			UProperty* NewProp_RangeType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RangeType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(RangeType, FSsVarianceValueFloat), 0x0000000000020015, Z_Construct_UEnum_SpriteStudio5_SsVarianceValueRangeType());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("\x7bc4\x56f2\x5024\x30af\x30e9\x30b9(float)"));
			MetaData->SetValue(NewProp_SubValue, TEXT("Category"), TEXT("SsVarianceValue"));
			MetaData->SetValue(NewProp_SubValue, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(NewProp_Value, TEXT("Category"), TEXT("SsVarianceValue"));
			MetaData->SetValue(NewProp_Value, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
			MetaData->SetValue(NewProp_RangeType, TEXT("Category"), TEXT("SsVarianceValue"));
			MetaData->SetValue(NewProp_RangeType, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectElement.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsVarianceValueFloat_CRC() { return 254184206U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsEffectBehavior()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsEffectBehavior_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsEffectBehavior"), sizeof(FSsEffectBehavior), Get_Z_Construct_UScriptStruct_FSsEffectBehavior_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsEffectBehavior"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSsEffectBehavior>, EStructFlags(0x00000201));
			UProperty* NewProp_BlendType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BlendType"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(BlendType, FSsEffectBehavior), 0x0000000000020015, Z_Construct_UEnum_SpriteStudio5_SsRenderBlendType());
			UProperty* NewProp_CellMapName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CellMapName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(CellMapName, FSsEffectBehavior), 0x0000000000020015);
			UProperty* NewProp_CellName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CellName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(CellName, FSsEffectBehavior), 0x0000000000020015);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectBehavior.h"));
			MetaData->SetValue(NewProp_BlendType, TEXT("Category"), TEXT("SsEffectBehavior"));
			MetaData->SetValue(NewProp_BlendType, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectBehavior.h"));
			MetaData->SetValue(NewProp_CellMapName, TEXT("Category"), TEXT("SsEffectBehavior"));
			MetaData->SetValue(NewProp_CellMapName, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectBehavior.h"));
			MetaData->SetValue(NewProp_CellName, TEXT("Category"), TEXT("SsEffectBehavior"));
			MetaData->SetValue(NewProp_CellName, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectBehavior.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsEffectBehavior_CRC() { return 1538351151U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsEffectFile()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsEffectFile_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsEffectFile"), sizeof(FSsEffectFile), Get_Z_Construct_UScriptStruct_FSsEffectFile_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsEffectFile"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSsEffectFile>, EStructFlags(0x00000201));
			UProperty* NewProp_Name = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Name"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(Name, FSsEffectFile), 0x0000000000020015);
			UProperty* NewProp_EffectData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EffectData"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(EffectData, FSsEffectFile), 0x0000000000020015, Z_Construct_UScriptStruct_FSsEffectModel());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectFile.h"));
			MetaData->SetValue(NewProp_Name, TEXT("Category"), TEXT("SsEffectFile"));
			MetaData->SetValue(NewProp_Name, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectFile.h"));
			MetaData->SetValue(NewProp_EffectData, TEXT("Category"), TEXT("SsEffectFile"));
			MetaData->SetValue(NewProp_EffectData, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectFile.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsEffectFile_CRC() { return 3937897931U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsEffectModel()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsEffectModel_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsEffectModel"), sizeof(FSsEffectModel), Get_Z_Construct_UScriptStruct_FSsEffectModel_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsEffectModel"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSsEffectModel>, EStructFlags(0x00000201));
			UProperty* NewProp_EffectName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EffectName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(EffectName, FSsEffectModel), 0x0000000000020015);
			UProperty* NewProp_BgColor = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BgColor"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(BgColor, FSsEffectModel), 0x0000000000020015);
			UProperty* NewProp_FPS = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FPS"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(FPS, FSsEffectModel), 0x0000000000020015);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsLockRandSeed, FSsEffectModel, bool);
			UProperty* NewProp_IsLockRandSeed = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("IsLockRandSeed"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsLockRandSeed, FSsEffectModel), 0x0000000000020015, CPP_BOOL_PROPERTY_BITMASK(IsLockRandSeed, FSsEffectModel), sizeof(bool), true);
			UProperty* NewProp_LockRandSeed = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LockRandSeed"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(LockRandSeed, FSsEffectModel), 0x0000000000020015);
			UProperty* NewProp_NodeList = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("NodeList"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(NodeList, FSsEffectModel), 0x0000000000020015);
			UProperty* NewProp_NodeList_Inner = new(EC_InternalUseOnlyConstructor, NewProp_NodeList, TEXT("NodeList"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000020000, Z_Construct_UScriptStruct_FSsEffectNode());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectFile.h"));
			MetaData->SetValue(NewProp_EffectName, TEXT("Category"), TEXT("SsEffectModel"));
			MetaData->SetValue(NewProp_EffectName, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectFile.h"));
			MetaData->SetValue(NewProp_BgColor, TEXT("Category"), TEXT("SsEffectModel"));
			MetaData->SetValue(NewProp_BgColor, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectFile.h"));
			MetaData->SetValue(NewProp_FPS, TEXT("Category"), TEXT("SsEffectModel"));
			MetaData->SetValue(NewProp_FPS, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectFile.h"));
			MetaData->SetValue(NewProp_IsLockRandSeed, TEXT("Category"), TEXT("SsEffectModel"));
			MetaData->SetValue(NewProp_IsLockRandSeed, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectFile.h"));
			MetaData->SetValue(NewProp_IsLockRandSeed, TEXT("ToolTip"), TEXT("\x30e9\x30f3\x30c0\x30e0\x30b7\x30fc\x30c9\x3092\x56fa\x5b9a\x3059\x308b\x304b\x5426\x304b"));
			MetaData->SetValue(NewProp_LockRandSeed, TEXT("Category"), TEXT("SsEffectModel"));
			MetaData->SetValue(NewProp_LockRandSeed, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectFile.h"));
			MetaData->SetValue(NewProp_LockRandSeed, TEXT("ToolTip"), TEXT("\x30e9\x30f3\x30c0\x30e0\x30b7\x30fc\x30c9\x56fa\x5b9a\x5024"));
			MetaData->SetValue(NewProp_NodeList, TEXT("Category"), TEXT("SsEffectModel"));
			MetaData->SetValue(NewProp_NodeList, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectFile.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsEffectModel_CRC() { return 2361132993U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsEffectNode()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsEffectNode_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsEffectNode"), sizeof(FSsEffectNode), Get_Z_Construct_UScriptStruct_FSsEffectNode_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsEffectNode"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FSsSimpleTree(), new UScriptStruct::TCppStructOps<FSsEffectNode>, EStructFlags(0x00000201));
			UProperty* NewProp_Behavior = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Behavior"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Behavior, FSsEffectNode), 0x0000000000020015, Z_Construct_UScriptStruct_FSsEffectBehavior());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Visible, FSsEffectNode, bool);
			UProperty* NewProp_Visible = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Visible"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Visible, FSsEffectNode), 0x0000000000020015, CPP_BOOL_PROPERTY_BITMASK(Visible, FSsEffectNode), sizeof(bool), true);
			UProperty* NewProp_Type = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Type"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(Type, FSsEffectNode), 0x0000000000020015, Z_Construct_UEnum_SpriteStudio5_SsEffectNodeType());
			UProperty* NewProp_ParentIndex = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ParentIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ParentIndex, FSsEffectNode), 0x0000000000020015);
			UProperty* NewProp_ArrayIndex = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ArrayIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ArrayIndex, FSsEffectNode), 0x0000000000020015);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectFile.h"));
			MetaData->SetValue(NewProp_Behavior, TEXT("Category"), TEXT("SsEffectNode"));
			MetaData->SetValue(NewProp_Behavior, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectFile.h"));
			MetaData->SetValue(NewProp_Visible, TEXT("Category"), TEXT("SsEffectNode"));
			MetaData->SetValue(NewProp_Visible, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectFile.h"));
			MetaData->SetValue(NewProp_Type, TEXT("Category"), TEXT("SsEffectNode"));
			MetaData->SetValue(NewProp_Type, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectFile.h"));
			MetaData->SetValue(NewProp_ParentIndex, TEXT("Category"), TEXT("SsEffectNode"));
			MetaData->SetValue(NewProp_ParentIndex, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectFile.h"));
			MetaData->SetValue(NewProp_ArrayIndex, TEXT("Category"), TEXT("SsEffectNode"));
			MetaData->SetValue(NewProp_ArrayIndex, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectFile.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsEffectNode_CRC() { return 3760253125U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsSimpleTree()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsSimpleTree_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsSimpleTree"), sizeof(FSsSimpleTree), Get_Z_Construct_UScriptStruct_FSsSimpleTree_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsSimpleTree"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSsSimpleTree>, EStructFlags(0x00000201));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsEffectFile.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsSimpleTree_CRC() { return 2238172397U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSsProjectSetting()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UScriptStruct_FSsProjectSetting_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("SsProjectSetting"), sizeof(FSsProjectSetting), Get_Z_Construct_UScriptStruct_FSsProjectSetting_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsProjectSetting"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSsProjectSetting>, EStructFlags(0x00000201));
			UProperty* NewProp_FilterMode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FilterMode"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(FilterMode, FSsProjectSetting), 0x0000000000020015, Z_Construct_UEnum_SpriteStudio5_SsTexFilterMode());
			UProperty* NewProp_WrapMode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("WrapMode"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(WrapMode, FSsProjectSetting), 0x0000000000020015, Z_Construct_UEnum_SpriteStudio5_SsTexWrapMode());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(QueryExportBaseDirectory, FSsProjectSetting, bool);
			UProperty* NewProp_QueryExportBaseDirectory = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("QueryExportBaseDirectory"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(QueryExportBaseDirectory, FSsProjectSetting), 0x0000000000020015, CPP_BOOL_PROPERTY_BITMASK(QueryExportBaseDirectory, FSsProjectSetting), sizeof(bool), true);
			UProperty* NewProp_ExportBaseDirectory = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ExportBaseDirectory"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ExportBaseDirectory, FSsProjectSetting), 0x0000000000020015);
			UProperty* NewProp_EffectBaseDirectory = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EffectBaseDirectory"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(EffectBaseDirectory, FSsProjectSetting), 0x0000000000020015);
			UProperty* NewProp_ImageBaseDirectory = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ImageBaseDirectory"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ImageBaseDirectory, FSsProjectSetting), 0x0000000000020015);
			UProperty* NewProp_CellMapBaseDirectory = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CellMapBaseDirectory"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(CellMapBaseDirectory, FSsProjectSetting), 0x0000000000020015);
			UProperty* NewProp_AnimeBaseDirectory = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AnimeBaseDirectory"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(AnimeBaseDirectory, FSsProjectSetting), 0x0000000000020015);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsProject.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("\x30d7\x30ed\x30b8\x30a7\x30af\x30c8\x30d5\x30a1\x30a4\x30eb\x306e\x8a2d\x5b9a\x304c\x8a18\x8f09\x3055\x308c\x3066\x3044\x308b\x30c7\x30fc\x30bf\x3067\x3059\x3002\n\x4ee5\x4e0b\x306e\x30bf\x30b0\x306f\x30a8\x30c7\x30a3\x30bf\x7de8\x96c6\x7528\x306e\x30c7\x30fc\x30bf\x306a\x306e\x3067\x8aad\x307f\x98db\x3070\x3057\x307e\x3059\x3002\n      \x7de8\x96c6\x6642\x8a2d\x5b9a\x306e\x305f\x3081\x3088\x307e\x306a\x3044\n      <ssaxImport>                                            !< .ssax \x30a4\x30f3\x30dd\x30fc\x30c8\x8a2d\x5b9a\n      <copyWhenImportImageIsOutside>          !< \x30d7\x30ed\x30b8\x30a7\x30af\x30c8\x30d5\x30a9\x30eb\x30c0\x5916\x306b\x753b\x50cf\x30d5\x30a1\x30a4\x30eb\x304c\x3042\x308b\x5834\x5408\x306b\x30a4\x30f3\x30dd\x30fc\x30c8\x5148\x306b\x30b3\x30d4\x30fc\x3059\x308b\x3002\n      <exportAnimeFileFormat>                         !< \x30a8\x30af\x30b9\x30dd\x30fc\x30c8\x6642\x306e\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x30d5\x30a1\x30a4\x30eb\x306e\x30d5\x30a9\x30fc\x30de\x30c3\x30c8\n      <exportCellMapFileFormat>                       !< \x30a8\x30af\x30b9\x30dd\x30fc\x30c8\x6642\x306e\x30bb\x30eb\x30de\x30c3\x30d7\x30d5\x30a1\x30a4\x30eb\x306e\x30d5\x30a9\x30fc\x30de\x30c3\x30c8\n      <exportCellMap>                                         !< \x30bb\x30eb\x30de\x30c3\x30d7\x3092\x30a8\x30af\x30b9\x30dd\x30fc\x30c8\x3059\x308b\n      <copyImageWhenExportCellmap>            !< \x30bb\x30eb\x30de\x30c3\x30d7\x306e\x30a8\x30af\x30b9\x30dd\x30fc\x30c8\x6642\x306b\x753b\x50cf\x30d5\x30a1\x30a4\x30eb\x3092\x30a8\x30af\x30b9\x30dd\x30fc\x30c8\x5148\x306b\x30b3\x30d4\x30fc\x3059\x308b\n      <ssaxExport>                                            !< .ssax \x30a8\x30af\x30b9\x30dd\x30fc\x30c8\x8a2d\x5b9a\n      <player>                                                        !< \x518d\x751f\x5bfe\x8c61\x306e\x30d7\x30ec\x30a4\x30e4\x30fc\x3002\x3053\x308c\x306b\x3088\x308a\x4f7f\x3048\x308b\x6a5f\x80fd\x306b\x5236\x9650\x3092\x304b\x3051\x308b\x3002\n      <strictVer4>                                            !< Ver4\x4e92\x63db\n      <availableAttributes>                           !< \x4f7f\x7528\x3059\x308b\x30a2\x30c8\x30ea\x30d3\x30e5\x30fc\x30c8\n      <defaultSetAttributes>                          !< \x65b0\x898f\x30ad\x30fc\x4f5c\x6210\x3067\x30c7\x30d5\x30a9\x30eb\x30c8\x3067\x30ad\x30fc\x304c\x6253\x305f\x308c\x308b\x30a2\x30c8\x30ea\x30d3\x30e5\x30fc\x30c8"));
			MetaData->SetValue(NewProp_FilterMode, TEXT("Category"), TEXT("SsProjectSetting"));
			MetaData->SetValue(NewProp_FilterMode, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsProject.h"));
			MetaData->SetValue(NewProp_FilterMode, TEXT("ToolTip"), TEXT("!< \x30c6\x30af\x30b9\x30c1\x30e3\x306e\x30e9\x30c3\x30d7\x30e2\x30fc\x30c9"));
			MetaData->SetValue(NewProp_WrapMode, TEXT("Category"), TEXT("SsProjectSetting"));
			MetaData->SetValue(NewProp_WrapMode, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsProject.h"));
			MetaData->SetValue(NewProp_WrapMode, TEXT("ToolTip"), TEXT("!< \x30a8\x30af\x30b9\x30dd\x30fc\x30c8\x5148\x306e\x57fa\x6e96\x30c7\x30a3\x30ec\x30af\x30c8\x30ea\x6307\x5b9a\x3092\x3055\x305b\x308b\x304b\xff1f"));
			MetaData->SetValue(NewProp_QueryExportBaseDirectory, TEXT("Category"), TEXT("SsProjectSetting"));
			MetaData->SetValue(NewProp_QueryExportBaseDirectory, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsProject.h"));
			MetaData->SetValue(NewProp_QueryExportBaseDirectory, TEXT("ToolTip"), TEXT("!< \x30a8\x30af\x30b9\x30dd\x30fc\x30c8\x5148\x306e\x57fa\x6e96\x30c7\x30a3\x30ec\x30af\x30c8\x30ea\x3002"));
			MetaData->SetValue(NewProp_ExportBaseDirectory, TEXT("Category"), TEXT("SsProjectSetting"));
			MetaData->SetValue(NewProp_ExportBaseDirectory, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsProject.h"));
			MetaData->SetValue(NewProp_ExportBaseDirectory, TEXT("ToolTip"), TEXT("!< \x30a8\x30d5\x30a7\x30af\x30c8\x30c7\x30fc\x30bf\x306e\x8aad\x307f\x8fbc\x307f\x5143\x5148\x57fa\x6e96\x30c7\x30a3\x30ec\x30af\x30c8\x30ea\x3002"));
			MetaData->SetValue(NewProp_EffectBaseDirectory, TEXT("Category"), TEXT("SsProjectSetting"));
			MetaData->SetValue(NewProp_EffectBaseDirectory, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsProject.h"));
			MetaData->SetValue(NewProp_EffectBaseDirectory, TEXT("ToolTip"), TEXT("!< \x753b\x50cf\x30c7\x30fc\x30bf\x306e\x8aad\x307f\x8fbc\x307f\x5143\x5148\x57fa\x6e96\x30c7\x30a3\x30ec\x30af\x30c8\x30ea\x3002"));
			MetaData->SetValue(NewProp_ImageBaseDirectory, TEXT("Category"), TEXT("SsProjectSetting"));
			MetaData->SetValue(NewProp_ImageBaseDirectory, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsProject.h"));
			MetaData->SetValue(NewProp_ImageBaseDirectory, TEXT("ToolTip"), TEXT("!< \x30bb\x30eb\x30de\x30c3\x30d7\x30c7\x30fc\x30bf\x306e\x8aad\x307f\x66f8\x304d\x57fa\x6e96\x30c7\x30a3\x30ec\x30af\x30c8\x30ea\x3002"));
			MetaData->SetValue(NewProp_CellMapBaseDirectory, TEXT("Category"), TEXT("SsProjectSetting"));
			MetaData->SetValue(NewProp_CellMapBaseDirectory, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsProject.h"));
			MetaData->SetValue(NewProp_CellMapBaseDirectory, TEXT("ToolTip"), TEXT("!< \x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x30c7\x30fc\x30bf\x306e\x8aad\x307f\x66f8\x304d\x57fa\x6e96\x30c7\x30a3\x30ec\x30af\x30c8\x30ea\x3002"));
			MetaData->SetValue(NewProp_AnimeBaseDirectory, TEXT("Category"), TEXT("SsProjectSetting"));
			MetaData->SetValue(NewProp_AnimeBaseDirectory, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsProject.h"));
			MetaData->SetValue(NewProp_AnimeBaseDirectory, TEXT("ToolTip"), TEXT("\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x30d5\x30a1\x30a4\x30eb\x306e\x76f8\x5bfe\x6307\x5b9a\x7b49"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSsProjectSetting_CRC() { return 1271155022U; }
	UClass* Z_Construct_UClass_USsProject_NoRegister()
	{
		return USsProject::StaticClass();
	}
	UClass* Z_Construct_UClass_USsProject()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_SpriteStudio5();
			OuterClass = USsProject::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
#if WITH_EDITORONLY_DATA
				UProperty* NewProp_AssetImportData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AssetImportData"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(AssetImportData, USsProject), 0x0002000800080009, Z_Construct_UClass_UAssetImportData_NoRegister());
#endif // WITH_EDITORONLY_DATA
				UProperty* NewProp_EffectList = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EffectList"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(EffectList, USsProject), 0x0000000000020015);
				UProperty* NewProp_EffectList_Inner = new(EC_InternalUseOnlyConstructor, NewProp_EffectList, TEXT("EffectList"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000020000, Z_Construct_UScriptStruct_FSsEffectFile());
				UProperty* NewProp_AnimeList = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AnimeList"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(AnimeList, USsProject), 0x0000000000020015);
				UProperty* NewProp_AnimeList_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AnimeList, TEXT("AnimeList"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000020000, Z_Construct_UScriptStruct_FSsAnimePack());
				UProperty* NewProp_CellmapList = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CellmapList"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(CellmapList, USsProject), 0x0000000000020015);
				UProperty* NewProp_CellmapList_Inner = new(EC_InternalUseOnlyConstructor, NewProp_CellmapList, TEXT("CellmapList"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000020000, Z_Construct_UScriptStruct_FSsCellMap());
				UProperty* NewProp_EffectFileNames = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EffectFileNames"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(EffectFileNames, USsProject), 0x0000000000020015);
				UProperty* NewProp_EffectFileNames_Inner = new(EC_InternalUseOnlyConstructor, NewProp_EffectFileNames, TEXT("EffectFileNames"), RF_Public|RF_Transient|RF_Native) UNameProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000020000);
				UProperty* NewProp_AnimepackNames = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AnimepackNames"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(AnimepackNames, USsProject), 0x0000000000020015);
				UProperty* NewProp_AnimepackNames_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AnimepackNames, TEXT("AnimepackNames"), RF_Public|RF_Transient|RF_Native) UNameProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000020000);
				UProperty* NewProp_CellmapNames = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CellmapNames"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(CellmapNames, USsProject), 0x0000000000020015);
				UProperty* NewProp_CellmapNames_Inner = new(EC_InternalUseOnlyConstructor, NewProp_CellmapNames, TEXT("CellmapNames"), RF_Public|RF_Transient|RF_Native) UNameProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000020000);
				UProperty* NewProp_Settings = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Settings"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Settings, USsProject), 0x0000000000020015, Z_Construct_UScriptStruct_FSsProjectSetting());
				UProperty* NewProp_Version = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Version"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(Version, USsProject), 0x0000000000020015);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Data/SsProject.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsProject.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("XML\x30c9\x30ad\x30e5\x30e1\x30f3\x30c8\x3068\x306a\x3063\x3066\x3044\x308bsspj\x30d5\x30a1\x30a4\x30eb\x306e\x30c7\x30fc\x30bf\x4fdd\x6301\x3092\x63d0\x4f9b\x3059\x308b\x30af\x30e9\x30b9\x3067\x3059\x3002\n\x4ee5\x4e0b\x306f\x30a8\x30c7\x30a3\x30bf\x60c5\x5831\x306e\x305f\x3081\x8aad\x307f\x98db\x3070\x3057\x307e\x3059\x3002\nanimeSettings   \x30c7\x30d5\x30a9\x30eb\x30c8\x306e\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x8a2d\x5b9a\ntexPackSettings \x30c7\x30d5\x30a9\x30eb\x30c8\x306e\x30c6\x30af\x30b9\x30c1\x30e3\x30d1\x30c3\x30ad\x30f3\x30b0\x8a2d\x5b9a"));
				MetaData->SetValue(NewProp_AssetImportData, TEXT("Category"), TEXT("Reimport"));
				MetaData->SetValue(NewProp_AssetImportData, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_AssetImportData, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsProject.h"));
				MetaData->SetValue(NewProp_EffectList, TEXT("Category"), TEXT("SsProject"));
				MetaData->SetValue(NewProp_EffectList, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsProject.h"));
				MetaData->SetValue(NewProp_EffectList, TEXT("ToolTip"), TEXT("!< \x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x306e\x30ea\x30b9\x30c8"));
				MetaData->SetValue(NewProp_AnimeList, TEXT("Category"), TEXT("SsProject"));
				MetaData->SetValue(NewProp_AnimeList, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsProject.h"));
				MetaData->SetValue(NewProp_AnimeList, TEXT("ToolTip"), TEXT("!< \x30bb\x30eb\x30de\x30c3\x30d7\x30ea\x30b9\x30c8"));
				MetaData->SetValue(NewProp_CellmapList, TEXT("Category"), TEXT("SsProject"));
				MetaData->SetValue(NewProp_CellmapList, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsProject.h"));
				MetaData->SetValue(NewProp_CellmapList, TEXT("ToolTip"), TEXT("!< \x30a8\x30d5\x30a7\x30af\x30c8\x30d5\x30a1\x30a4\x30eb\x306e\x30ea\x30b9\x30c8"));
				MetaData->SetValue(NewProp_EffectFileNames, TEXT("Category"), TEXT("SsProject"));
				MetaData->SetValue(NewProp_EffectFileNames, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsProject.h"));
				MetaData->SetValue(NewProp_EffectFileNames, TEXT("ToolTip"), TEXT("!< \x30a2\x30cb\x30e1\x30d5\x30a1\x30a4\x30eb\x306e\x30ea\x30b9\x30c8"));
				MetaData->SetValue(NewProp_AnimepackNames, TEXT("Category"), TEXT("SsProject"));
				MetaData->SetValue(NewProp_AnimepackNames, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsProject.h"));
				MetaData->SetValue(NewProp_AnimepackNames, TEXT("ToolTip"), TEXT("!< \x30bb\x30eb\x30de\x30c3\x30d7\x30d5\x30a1\x30a4\x30eb\x306e\x30ea\x30b9\x30c8"));
				MetaData->SetValue(NewProp_CellmapNames, TEXT("Category"), TEXT("SsProject"));
				MetaData->SetValue(NewProp_CellmapNames, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsProject.h"));
				MetaData->SetValue(NewProp_CellmapNames, TEXT("ToolTip"), TEXT("!< \x30d7\x30ed\x30b8\x30a7\x30af\x30c8\x8a2d\x5b9a"));
				MetaData->SetValue(NewProp_Settings, TEXT("Category"), TEXT("SsProject"));
				MetaData->SetValue(NewProp_Settings, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsProject.h"));
				MetaData->SetValue(NewProp_Version, TEXT("Category"), TEXT("SsProject"));
				MetaData->SetValue(NewProp_Version, TEXT("ModuleRelativePath"), TEXT("Public/Data/SsProject.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USsProject(Z_Construct_UClass_USsProject, TEXT("USsProject"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USsProject);
	UFunction* Z_Construct_UFunction_USsStatics_SpawnSsPlayerAtLocation()
	{
		struct SsStatics_eventSpawnSsPlayerAtLocation_Parms
		{
			UObject* WorldContextObject;
			USsProject* SsProject;
			FName AnimPackName;
			FName AnimationName;
			float UUPerPixel;
			FVector Location;
			FRotator Rotation;
			bool bAutoDestroy;
			int32 TranslucencySortPriority;
			ASsPlayerActor* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SpawnSsPlayerAtLocation"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04822401, 65535, sizeof(SsStatics_eventSpawnSsPlayerAtLocation_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, SsStatics_eventSpawnSsPlayerAtLocation_Parms), 0x0000000000000580, Z_Construct_UClass_ASsPlayerActor_NoRegister());
			UProperty* NewProp_TranslucencySortPriority = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TranslucencySortPriority"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(TranslucencySortPriority, SsStatics_eventSpawnSsPlayerAtLocation_Parms), 0x0000000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoDestroy, SsStatics_eventSpawnSsPlayerAtLocation_Parms, bool);
			UProperty* NewProp_bAutoDestroy = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bAutoDestroy"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoDestroy, SsStatics_eventSpawnSsPlayerAtLocation_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bAutoDestroy, SsStatics_eventSpawnSsPlayerAtLocation_Parms), sizeof(bool), true);
			UProperty* NewProp_Rotation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Rotation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Rotation, SsStatics_eventSpawnSsPlayerAtLocation_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Location = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Location"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Location, SsStatics_eventSpawnSsPlayerAtLocation_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_UUPerPixel = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UUPerPixel"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(UUPerPixel, SsStatics_eventSpawnSsPlayerAtLocation_Parms), 0x0000000000000080);
			UProperty* NewProp_AnimationName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimationName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(AnimationName, SsStatics_eventSpawnSsPlayerAtLocation_Parms), 0x0000000000000080);
			UProperty* NewProp_AnimPackName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimPackName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(AnimPackName, SsStatics_eventSpawnSsPlayerAtLocation_Parms), 0x0000000000000080);
			UProperty* NewProp_SsProject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SsProject"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SsProject, SsStatics_eventSpawnSsPlayerAtLocation_Parms), 0x0000000000000080, Z_Construct_UClass_USsProject_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, SsStatics_eventSpawnSsPlayerAtLocation_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bAutoDestroy"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_TranslucencySortPriority"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_UUPerPixel"), TEXT("0.300000"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("ss"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Misc/SsStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("SpriteStudio\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x306e\x5358\x767a\x518d\x751f"));
			MetaData->SetValue(ReturnFunction, TEXT("UnsafeDuringActorConstruction"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USsStatics_SpawnSsPlayerAtLocationByIndex()
	{
		struct SsStatics_eventSpawnSsPlayerAtLocationByIndex_Parms
		{
			UObject* WorldContextObject;
			USsProject* SsProject;
			int32 AnimPackIndex;
			int32 AnimationIndex;
			float UUPerPixel;
			FVector Location;
			FRotator Rotation;
			bool bAutoDestroy;
			int32 TranslucencySortPriority;
			ASsPlayerActor* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USsStatics();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SpawnSsPlayerAtLocationByIndex"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04822401, 65535, sizeof(SsStatics_eventSpawnSsPlayerAtLocationByIndex_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, SsStatics_eventSpawnSsPlayerAtLocationByIndex_Parms), 0x0000000000000580, Z_Construct_UClass_ASsPlayerActor_NoRegister());
			UProperty* NewProp_TranslucencySortPriority = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TranslucencySortPriority"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(TranslucencySortPriority, SsStatics_eventSpawnSsPlayerAtLocationByIndex_Parms), 0x0000000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoDestroy, SsStatics_eventSpawnSsPlayerAtLocationByIndex_Parms, bool);
			UProperty* NewProp_bAutoDestroy = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bAutoDestroy"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoDestroy, SsStatics_eventSpawnSsPlayerAtLocationByIndex_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bAutoDestroy, SsStatics_eventSpawnSsPlayerAtLocationByIndex_Parms), sizeof(bool), true);
			UProperty* NewProp_Rotation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Rotation"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Rotation, SsStatics_eventSpawnSsPlayerAtLocationByIndex_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Location = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Location"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Location, SsStatics_eventSpawnSsPlayerAtLocationByIndex_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_UUPerPixel = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UUPerPixel"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(UUPerPixel, SsStatics_eventSpawnSsPlayerAtLocationByIndex_Parms), 0x0000000000000080);
			UProperty* NewProp_AnimationIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimationIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AnimationIndex, SsStatics_eventSpawnSsPlayerAtLocationByIndex_Parms), 0x0000000000000080);
			UProperty* NewProp_AnimPackIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnimPackIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AnimPackIndex, SsStatics_eventSpawnSsPlayerAtLocationByIndex_Parms), 0x0000000000000080);
			UProperty* NewProp_SsProject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SsProject"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(SsProject, SsStatics_eventSpawnSsPlayerAtLocationByIndex_Parms), 0x0000000000000080, Z_Construct_UClass_USsProject_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, SsStatics_eventSpawnSsPlayerAtLocationByIndex_Parms), 0x0000000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpriteStudio"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bAutoDestroy"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_TranslucencySortPriority"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_UUPerPixel"), TEXT("0.300000"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("ss"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Misc/SsStatics.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("SpriteStudio\x30a2\x30cb\x30e1\x30fc\x30b7\x30e7\x30f3\x306e\x5358\x767a\x518d\x751f(\x30a4\x30f3\x30c7\x30c3\x30af\x30b9\x6307\x5b9a)"));
			MetaData->SetValue(ReturnFunction, TEXT("UnsafeDuringActorConstruction"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_USsStatics_NoRegister()
	{
		return USsStatics::StaticClass();
	}
	UClass* Z_Construct_UClass_USsStatics()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage_SpriteStudio5();
			OuterClass = USsStatics::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;

				OuterClass->LinkChild(Z_Construct_UFunction_USsStatics_SpawnSsPlayerAtLocation());
				OuterClass->LinkChild(Z_Construct_UFunction_USsStatics_SpawnSsPlayerAtLocationByIndex());

				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsStatics_SpawnSsPlayerAtLocation()); // 11332371
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_USsStatics_SpawnSsPlayerAtLocationByIndex()); // 742071481
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Misc/SsStatics.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Misc/SsStatics.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USsStatics(Z_Construct_UClass_USsStatics, TEXT("USsStatics"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(USsStatics);
	UEnum* Z_Construct_UEnum_SpriteStudio5_SsEmmiterType()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsEmmiterType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("SsEmmiterType"), 0, Get_Z_Construct_UEnum_SpriteStudio5_SsEmmiterType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsEmmiterType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEmmiterType::EmmiterTypeNormal")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEmmiterType::EmmiterTypeRibbon")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsEmmiterType::SsEmmiterType_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Private/Player/SsPlayerEffect.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsEmmiterType_CRC() { return 4274622808U; }
	UEnum* Z_Construct_UEnum_SpriteStudio5_SsRenderType()
	{
		UPackage* Outer=Z_Construct_UPackage_SpriteStudio5();
		extern uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsRenderType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReload(Outer, TEXT("SsRenderType"), 0, Get_Z_Construct_UEnum_SpriteStudio5_SsRenderType_CRC());
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SsRenderType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsRenderType::BaseNode")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsRenderType::EmmiterNode")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsRenderType::ParticleNode")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SsRenderType::SsRenderType_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Private/Player/SsPlayerEffect.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_SpriteStudio5_SsRenderType_CRC() { return 4111661218U; }
	UPackage* Z_Construct_UPackage_SpriteStudio5()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/SpriteStudio5")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x67E2FC03;
			Guid.B = 0x5B42C2EB;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

			Z_Construct_UDelegateFunction_SpriteStudio5_SsEndPlaySignature__DelegateSignature();
			Z_Construct_UDelegateFunction_SpriteStudio5_SsUserDataSignature__DelegateSignature();
			Z_Construct_UDelegateFunction_SpriteStudio5_SsWidgetEndPlaySignature__DelegateSignature();
			Z_Construct_UDelegateFunction_SpriteStudio5_SsWidgetUserDataSignature__DelegateSignature();
		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
