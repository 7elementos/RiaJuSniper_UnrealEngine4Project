// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	C++ class header boilerplate exported from UnrealHeaderTool.
	This is automatically generated by the tools.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "ObjectBase.h"

PRAGMA_DISABLE_DEPRECATION_WARNINGS
struct FSsUserDataValue;
class UTexture;
#ifdef SPRITESTUDIO5_SsPlayerWidget_generated_h
#error "SsPlayerWidget.generated.h already included, missing '#pragma once' in SsPlayerWidget.h"
#endif
#define SPRITESTUDIO5_SsPlayerWidget_generated_h

#define Riaju1_Plugins_SpriteStudio5_Source_SpriteStudio5_Public_UMG_SsPlayerWidget_h_16_DELEGATE \
struct _Script_SpriteStudio5_eventSsWidgetUserDataSignature_Parms \
{ \
	FName PartName; \
	int32 PartIndex; \
	int32 KeyFrame; \
	FSsUserDataValue UserData; \
}; \
static inline void FSsWidgetUserDataSignature_DelegateWrapper(const FMulticastScriptDelegate& SsWidgetUserDataSignature, FName PartName, int32 PartIndex, int32 KeyFrame, FSsUserDataValue UserData) \
{ \
	_Script_SpriteStudio5_eventSsWidgetUserDataSignature_Parms Parms; \
	Parms.PartName=PartName; \
	Parms.PartIndex=PartIndex; \
	Parms.KeyFrame=KeyFrame; \
	Parms.UserData=UserData; \
	SsWidgetUserDataSignature.ProcessMulticastDelegate<UObject>(&Parms); \
}


#define Riaju1_Plugins_SpriteStudio5_Source_SpriteStudio5_Public_UMG_SsPlayerWidget_h_15_DELEGATE \
struct _Script_SpriteStudio5_eventSsWidgetEndPlaySignature_Parms \
{ \
	FName AnimPackName; \
	FName AnimationName; \
	int32 AnimPackIndex; \
	int32 AnimationIndex; \
}; \
static inline void FSsWidgetEndPlaySignature_DelegateWrapper(const FMulticastScriptDelegate& SsWidgetEndPlaySignature, FName AnimPackName, FName AnimationName, int32 AnimPackIndex, int32 AnimationIndex) \
{ \
	_Script_SpriteStudio5_eventSsWidgetEndPlaySignature_Parms Parms; \
	Parms.AnimPackName=AnimPackName; \
	Parms.AnimationName=AnimationName; \
	Parms.AnimPackIndex=AnimPackIndex; \
	Parms.AnimationIndex=AnimationIndex; \
	SsWidgetEndPlaySignature.ProcessMulticastDelegate<UObject>(&Parms); \
}




#define Riaju1_Plugins_SpriteStudio5_Source_SpriteStudio5_Public_UMG_SsPlayerWidget_h_26_RPC_WRAPPERS \
 \
	DECLARE_FUNCTION(execGetPartColorLabelByIndex) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_PartIndex); \
		P_FINISH; \
		*(FName*)Z_Param__Result=this->GetPartColorLabelByIndex(Z_Param_PartIndex); \
	} \
 \
	DECLARE_FUNCTION(execGetPartColorLabel) \
	{ \
		P_GET_PROPERTY(UNameProperty,Z_Param_PartName); \
		P_FINISH; \
		*(FName*)Z_Param__Result=this->GetPartColorLabel(Z_Param_PartName); \
	} \
 \
	DECLARE_FUNCTION(execRemoveTextureReplacementAll) \
	{ \
		P_FINISH; \
		this->RemoveTextureReplacementAll(); \
	} \
 \
	DECLARE_FUNCTION(execRemoveTextureReplacementByIndex) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_PartIndex); \
		P_FINISH; \
		this->RemoveTextureReplacementByIndex(Z_Param_PartIndex); \
	} \
 \
	DECLARE_FUNCTION(execRemoveTextureReplacement) \
	{ \
		P_GET_PROPERTY(UNameProperty,Z_Param_PartName); \
		P_FINISH; \
		this->RemoveTextureReplacement(Z_Param_PartName); \
	} \
 \
	DECLARE_FUNCTION(execAddTextureReplacementByIndex) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_PartIndex); \
		P_GET_OBJECT(UTexture,Z_Param_Texture); \
		P_FINISH; \
		this->AddTextureReplacementByIndex(Z_Param_PartIndex,Z_Param_Texture); \
	} \
 \
	DECLARE_FUNCTION(execAddTextureReplacement) \
	{ \
		P_GET_PROPERTY(UNameProperty,Z_Param_PartName); \
		P_GET_OBJECT(UTexture,Z_Param_Texture); \
		P_FINISH; \
		this->AddTextureReplacement(Z_Param_PartName,Z_Param_Texture); \
	} \
 \
	DECLARE_FUNCTION(execGetFlipV) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->GetFlipV(); \
	} \
 \
	DECLARE_FUNCTION(execSetFlipV) \
	{ \
		P_GET_UBOOL(Z_Param_InFlipV); \
		P_FINISH; \
		this->SetFlipV(Z_Param_InFlipV); \
	} \
 \
	DECLARE_FUNCTION(execGetFlipH) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->GetFlipH(); \
	} \
 \
	DECLARE_FUNCTION(execSetFlipH) \
	{ \
		P_GET_UBOOL(Z_Param_InFlipH); \
		P_FINISH; \
		this->SetFlipH(Z_Param_InFlipH); \
	} \
 \
	DECLARE_FUNCTION(execGetPlayRate) \
	{ \
		P_FINISH; \
		*(float*)Z_Param__Result=this->GetPlayRate(); \
	} \
 \
	DECLARE_FUNCTION(execSetPlayRate) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_InRate); \
		P_FINISH; \
		this->SetPlayRate(Z_Param_InRate); \
	} \
 \
	DECLARE_FUNCTION(execIsRoundTrip) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->IsRoundTrip(); \
	} \
 \
	DECLARE_FUNCTION(execSetRoundTrip) \
	{ \
		P_GET_UBOOL(Z_Param_bInRoundTrip); \
		P_FINISH; \
		this->SetRoundTrip(Z_Param_bInRoundTrip); \
	} \
 \
	DECLARE_FUNCTION(execGetLoopCount) \
	{ \
		P_FINISH; \
		*(int32*)Z_Param__Result=this->GetLoopCount(); \
	} \
 \
	DECLARE_FUNCTION(execSetLoopCount) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_InLoopCount); \
		P_FINISH; \
		this->SetLoopCount(Z_Param_InLoopCount); \
	} \
 \
	DECLARE_FUNCTION(execGetPlayFrame) \
	{ \
		P_FINISH; \
		*(float*)Z_Param__Result=this->GetPlayFrame(); \
	} \
 \
	DECLARE_FUNCTION(execSetPlayFrame) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_Frame); \
		P_FINISH; \
		this->SetPlayFrame(Z_Param_Frame); \
	} \
 \
	DECLARE_FUNCTION(execGetNumAnimationsByIndex) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_AnimPackIndex); \
		P_FINISH; \
		*(int32*)Z_Param__Result=this->GetNumAnimationsByIndex(Z_Param_AnimPackIndex); \
	} \
 \
	DECLARE_FUNCTION(execGetNumAnimations) \
	{ \
		P_GET_PROPERTY(UNameProperty,Z_Param_AnimPackName); \
		P_FINISH; \
		*(int32*)Z_Param__Result=this->GetNumAnimations(Z_Param_AnimPackName); \
	} \
 \
	DECLARE_FUNCTION(execGetNumAnimPacks) \
	{ \
		P_FINISH; \
		*(int32*)Z_Param__Result=this->GetNumAnimPacks(); \
	} \
 \
	DECLARE_FUNCTION(execIsPlaying) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->IsPlaying(); \
	} \
 \
	DECLARE_FUNCTION(execResume) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->Resume(); \
	} \
 \
	DECLARE_FUNCTION(execPause) \
	{ \
		P_FINISH; \
		this->Pause(); \
	} \
 \
	DECLARE_FUNCTION(execGetPlayingAnimationIndex) \
	{ \
		P_GET_PROPERTY_REF(UIntProperty,Z_Param_Out_OutAnimPackIndex); \
		P_GET_PROPERTY_REF(UIntProperty,Z_Param_Out_OutAnimationIndex); \
		P_FINISH; \
		this->GetPlayingAnimationIndex(Z_Param_Out_OutAnimPackIndex,Z_Param_Out_OutAnimationIndex); \
	} \
 \
	DECLARE_FUNCTION(execGetPlayingAnimationName) \
	{ \
		P_GET_PROPERTY_REF(UNameProperty,Z_Param_Out_OutAnimPackName); \
		P_GET_PROPERTY_REF(UNameProperty,Z_Param_Out_OutAnimationName); \
		P_FINISH; \
		this->GetPlayingAnimationName(Z_Param_Out_OutAnimPackName,Z_Param_Out_OutAnimationName); \
	} \
 \
	DECLARE_FUNCTION(execPlayByIndex) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_AnimPackIndex); \
		P_GET_PROPERTY(UIntProperty,Z_Param_AnimationIndex); \
		P_GET_PROPERTY(UIntProperty,Z_Param_StartFrame); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_PlayRate); \
		P_GET_PROPERTY(UIntProperty,Z_Param_LoopCount); \
		P_GET_UBOOL(Z_Param_bRoundTrip); \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->PlayByIndex(Z_Param_AnimPackIndex,Z_Param_AnimationIndex,Z_Param_StartFrame,Z_Param_PlayRate,Z_Param_LoopCount,Z_Param_bRoundTrip); \
	} \
 \
	DECLARE_FUNCTION(execPlay) \
	{ \
		P_GET_PROPERTY(UNameProperty,Z_Param_AnimPackName); \
		P_GET_PROPERTY(UNameProperty,Z_Param_AnimationName); \
		P_GET_PROPERTY(UIntProperty,Z_Param_StartFrame); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_PlayRate); \
		P_GET_PROPERTY(UIntProperty,Z_Param_LoopCount); \
		P_GET_UBOOL(Z_Param_bRoundTrip); \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->Play(Z_Param_AnimPackName,Z_Param_AnimationName,Z_Param_StartFrame,Z_Param_PlayRate,Z_Param_LoopCount,Z_Param_bRoundTrip); \
	} \
 \
	DECLARE_FUNCTION(execUpdatePlayer) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_DeltaSeconds); \
		P_FINISH; \
		this->UpdatePlayer(Z_Param_DeltaSeconds); \
	}


#define Riaju1_Plugins_SpriteStudio5_Source_SpriteStudio5_Public_UMG_SsPlayerWidget_h_26_RPC_WRAPPERS_NO_PURE_DECLS \
 \
	DECLARE_FUNCTION(execGetPartColorLabelByIndex) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_PartIndex); \
		P_FINISH; \
		*(FName*)Z_Param__Result=this->GetPartColorLabelByIndex(Z_Param_PartIndex); \
	} \
 \
	DECLARE_FUNCTION(execGetPartColorLabel) \
	{ \
		P_GET_PROPERTY(UNameProperty,Z_Param_PartName); \
		P_FINISH; \
		*(FName*)Z_Param__Result=this->GetPartColorLabel(Z_Param_PartName); \
	} \
 \
	DECLARE_FUNCTION(execRemoveTextureReplacementAll) \
	{ \
		P_FINISH; \
		this->RemoveTextureReplacementAll(); \
	} \
 \
	DECLARE_FUNCTION(execRemoveTextureReplacementByIndex) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_PartIndex); \
		P_FINISH; \
		this->RemoveTextureReplacementByIndex(Z_Param_PartIndex); \
	} \
 \
	DECLARE_FUNCTION(execRemoveTextureReplacement) \
	{ \
		P_GET_PROPERTY(UNameProperty,Z_Param_PartName); \
		P_FINISH; \
		this->RemoveTextureReplacement(Z_Param_PartName); \
	} \
 \
	DECLARE_FUNCTION(execAddTextureReplacementByIndex) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_PartIndex); \
		P_GET_OBJECT(UTexture,Z_Param_Texture); \
		P_FINISH; \
		this->AddTextureReplacementByIndex(Z_Param_PartIndex,Z_Param_Texture); \
	} \
 \
	DECLARE_FUNCTION(execAddTextureReplacement) \
	{ \
		P_GET_PROPERTY(UNameProperty,Z_Param_PartName); \
		P_GET_OBJECT(UTexture,Z_Param_Texture); \
		P_FINISH; \
		this->AddTextureReplacement(Z_Param_PartName,Z_Param_Texture); \
	} \
 \
	DECLARE_FUNCTION(execGetFlipV) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->GetFlipV(); \
	} \
 \
	DECLARE_FUNCTION(execSetFlipV) \
	{ \
		P_GET_UBOOL(Z_Param_InFlipV); \
		P_FINISH; \
		this->SetFlipV(Z_Param_InFlipV); \
	} \
 \
	DECLARE_FUNCTION(execGetFlipH) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->GetFlipH(); \
	} \
 \
	DECLARE_FUNCTION(execSetFlipH) \
	{ \
		P_GET_UBOOL(Z_Param_InFlipH); \
		P_FINISH; \
		this->SetFlipH(Z_Param_InFlipH); \
	} \
 \
	DECLARE_FUNCTION(execGetPlayRate) \
	{ \
		P_FINISH; \
		*(float*)Z_Param__Result=this->GetPlayRate(); \
	} \
 \
	DECLARE_FUNCTION(execSetPlayRate) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_InRate); \
		P_FINISH; \
		this->SetPlayRate(Z_Param_InRate); \
	} \
 \
	DECLARE_FUNCTION(execIsRoundTrip) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->IsRoundTrip(); \
	} \
 \
	DECLARE_FUNCTION(execSetRoundTrip) \
	{ \
		P_GET_UBOOL(Z_Param_bInRoundTrip); \
		P_FINISH; \
		this->SetRoundTrip(Z_Param_bInRoundTrip); \
	} \
 \
	DECLARE_FUNCTION(execGetLoopCount) \
	{ \
		P_FINISH; \
		*(int32*)Z_Param__Result=this->GetLoopCount(); \
	} \
 \
	DECLARE_FUNCTION(execSetLoopCount) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_InLoopCount); \
		P_FINISH; \
		this->SetLoopCount(Z_Param_InLoopCount); \
	} \
 \
	DECLARE_FUNCTION(execGetPlayFrame) \
	{ \
		P_FINISH; \
		*(float*)Z_Param__Result=this->GetPlayFrame(); \
	} \
 \
	DECLARE_FUNCTION(execSetPlayFrame) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_Frame); \
		P_FINISH; \
		this->SetPlayFrame(Z_Param_Frame); \
	} \
 \
	DECLARE_FUNCTION(execGetNumAnimationsByIndex) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_AnimPackIndex); \
		P_FINISH; \
		*(int32*)Z_Param__Result=this->GetNumAnimationsByIndex(Z_Param_AnimPackIndex); \
	} \
 \
	DECLARE_FUNCTION(execGetNumAnimations) \
	{ \
		P_GET_PROPERTY(UNameProperty,Z_Param_AnimPackName); \
		P_FINISH; \
		*(int32*)Z_Param__Result=this->GetNumAnimations(Z_Param_AnimPackName); \
	} \
 \
	DECLARE_FUNCTION(execGetNumAnimPacks) \
	{ \
		P_FINISH; \
		*(int32*)Z_Param__Result=this->GetNumAnimPacks(); \
	} \
 \
	DECLARE_FUNCTION(execIsPlaying) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->IsPlaying(); \
	} \
 \
	DECLARE_FUNCTION(execResume) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->Resume(); \
	} \
 \
	DECLARE_FUNCTION(execPause) \
	{ \
		P_FINISH; \
		this->Pause(); \
	} \
 \
	DECLARE_FUNCTION(execGetPlayingAnimationIndex) \
	{ \
		P_GET_PROPERTY_REF(UIntProperty,Z_Param_Out_OutAnimPackIndex); \
		P_GET_PROPERTY_REF(UIntProperty,Z_Param_Out_OutAnimationIndex); \
		P_FINISH; \
		this->GetPlayingAnimationIndex(Z_Param_Out_OutAnimPackIndex,Z_Param_Out_OutAnimationIndex); \
	} \
 \
	DECLARE_FUNCTION(execGetPlayingAnimationName) \
	{ \
		P_GET_PROPERTY_REF(UNameProperty,Z_Param_Out_OutAnimPackName); \
		P_GET_PROPERTY_REF(UNameProperty,Z_Param_Out_OutAnimationName); \
		P_FINISH; \
		this->GetPlayingAnimationName(Z_Param_Out_OutAnimPackName,Z_Param_Out_OutAnimationName); \
	} \
 \
	DECLARE_FUNCTION(execPlayByIndex) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_AnimPackIndex); \
		P_GET_PROPERTY(UIntProperty,Z_Param_AnimationIndex); \
		P_GET_PROPERTY(UIntProperty,Z_Param_StartFrame); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_PlayRate); \
		P_GET_PROPERTY(UIntProperty,Z_Param_LoopCount); \
		P_GET_UBOOL(Z_Param_bRoundTrip); \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->PlayByIndex(Z_Param_AnimPackIndex,Z_Param_AnimationIndex,Z_Param_StartFrame,Z_Param_PlayRate,Z_Param_LoopCount,Z_Param_bRoundTrip); \
	} \
 \
	DECLARE_FUNCTION(execPlay) \
	{ \
		P_GET_PROPERTY(UNameProperty,Z_Param_AnimPackName); \
		P_GET_PROPERTY(UNameProperty,Z_Param_AnimationName); \
		P_GET_PROPERTY(UIntProperty,Z_Param_StartFrame); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_PlayRate); \
		P_GET_PROPERTY(UIntProperty,Z_Param_LoopCount); \
		P_GET_UBOOL(Z_Param_bRoundTrip); \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->Play(Z_Param_AnimPackName,Z_Param_AnimationName,Z_Param_StartFrame,Z_Param_PlayRate,Z_Param_LoopCount,Z_Param_bRoundTrip); \
	} \
 \
	DECLARE_FUNCTION(execUpdatePlayer) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_DeltaSeconds); \
		P_FINISH; \
		this->UpdatePlayer(Z_Param_DeltaSeconds); \
	}


#define Riaju1_Plugins_SpriteStudio5_Source_SpriteStudio5_Public_UMG_SsPlayerWidget_h_26_INCLASS_NO_PURE_DECLS \
	private: \
	static void StaticRegisterNativesUSsPlayerWidget(); \
	friend SPRITESTUDIO5_API class UClass* Z_Construct_UClass_USsPlayerWidget(); \
	public: \
	DECLARE_CLASS(USsPlayerWidget, UImage, COMPILED_IN_FLAGS(0), 0, SpriteStudio5, NO_API) \
	DECLARE_SERIALIZER(USsPlayerWidget) \
	/** Indicates whether the class is compiled into the engine */    enum {IsIntrinsic=COMPILED_IN_INTRINSIC}; \
	virtual UObject* _getUObject() const override { return const_cast<USsPlayerWidget*>(this); }


#define Riaju1_Plugins_SpriteStudio5_Source_SpriteStudio5_Public_UMG_SsPlayerWidget_h_26_INCLASS \
	private: \
	static void StaticRegisterNativesUSsPlayerWidget(); \
	friend SPRITESTUDIO5_API class UClass* Z_Construct_UClass_USsPlayerWidget(); \
	public: \
	DECLARE_CLASS(USsPlayerWidget, UImage, COMPILED_IN_FLAGS(0), 0, SpriteStudio5, NO_API) \
	DECLARE_SERIALIZER(USsPlayerWidget) \
	/** Indicates whether the class is compiled into the engine */    enum {IsIntrinsic=COMPILED_IN_INTRINSIC}; \
	virtual UObject* _getUObject() const override { return const_cast<USsPlayerWidget*>(this); }


#define Riaju1_Plugins_SpriteStudio5_Source_SpriteStudio5_Public_UMG_SsPlayerWidget_h_26_STANDARD_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API USsPlayerWidget(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(USsPlayerWidget) \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, USsPlayerWidget); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(USsPlayerWidget); \
private: \
	/** Private copy-constructor, should never be used */ \
	NO_API USsPlayerWidget(const USsPlayerWidget& InCopy); \
public:


#define Riaju1_Plugins_SpriteStudio5_Source_SpriteStudio5_Public_UMG_SsPlayerWidget_h_26_ENHANCED_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API USsPlayerWidget(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()) : Super(ObjectInitializer) { }; \
private: \
	/** Private copy-constructor, should never be used */ \
	NO_API USsPlayerWidget(const USsPlayerWidget& InCopy); \
public: \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, USsPlayerWidget); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(USsPlayerWidget); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(USsPlayerWidget)


#define Riaju1_Plugins_SpriteStudio5_Source_SpriteStudio5_Public_UMG_SsPlayerWidget_h_23_PROLOG
#define Riaju1_Plugins_SpriteStudio5_Source_SpriteStudio5_Public_UMG_SsPlayerWidget_h_26_GENERATED_BODY_LEGACY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	Riaju1_Plugins_SpriteStudio5_Source_SpriteStudio5_Public_UMG_SsPlayerWidget_h_26_RPC_WRAPPERS \
	Riaju1_Plugins_SpriteStudio5_Source_SpriteStudio5_Public_UMG_SsPlayerWidget_h_26_INCLASS \
	Riaju1_Plugins_SpriteStudio5_Source_SpriteStudio5_Public_UMG_SsPlayerWidget_h_26_STANDARD_CONSTRUCTORS \
public: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#define Riaju1_Plugins_SpriteStudio5_Source_SpriteStudio5_Public_UMG_SsPlayerWidget_h_26_GENERATED_BODY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	Riaju1_Plugins_SpriteStudio5_Source_SpriteStudio5_Public_UMG_SsPlayerWidget_h_26_RPC_WRAPPERS_NO_PURE_DECLS \
	Riaju1_Plugins_SpriteStudio5_Source_SpriteStudio5_Public_UMG_SsPlayerWidget_h_26_INCLASS_NO_PURE_DECLS \
	Riaju1_Plugins_SpriteStudio5_Source_SpriteStudio5_Public_UMG_SsPlayerWidget_h_26_ENHANCED_CONSTRUCTORS \
static_assert(false, "Unknown access specifier for GENERATED_BODY() macro in class SsPlayerWidget."); \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#undef CURRENT_FILE_ID
#define CURRENT_FILE_ID Riaju1_Plugins_SpriteStudio5_Source_SpriteStudio5_Public_UMG_SsPlayerWidget_h


PRAGMA_ENABLE_DEPRECATION_WARNINGS
